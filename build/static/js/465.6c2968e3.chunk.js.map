{"version":3,"file":"static/js/465.6c2968e3.chunk.js","mappings":";ubAiBMA,EAAoB,SAAUC,GAIlC,IAFA,IAAMC,EAAgB,GAClBC,EAAI,EACCC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAAK,CACnC,IAAIE,EAAIL,EAAIM,WAAWH,GACnBE,EAAI,IACNJ,EAAIC,KAAOG,EACFA,EAAI,MACbJ,EAAIC,KAAQG,GAAK,EAAK,IACtBJ,EAAIC,KAAY,GAAJG,EAAU,KAEL,SAAZ,MAAJA,IACDF,EAAI,EAAIH,EAAII,QACyB,SAAZ,MAAxBJ,EAAIM,WAAWH,EAAI,KAGpBE,EAAI,QAAgB,KAAJA,IAAe,KAA6B,KAAtBL,EAAIM,aAAaH,IACvDF,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,GAAM,GAAM,IAC9BJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,MAEtBJ,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,IAEzB,CACD,OAAOJ,CACR,EA4DYM,EAAiB,CAI5BC,eAAgB,KAKhBC,eAAgB,KAMhBC,sBAAuB,KAMvBC,sBAAuB,KAMvBC,kBACE,iEAKEC,mBACF,OAAOC,KAAKF,kBAAoB,KACjC,EAKGG,2BACF,OAAOD,KAAKF,kBAAoB,KACjC,EASDI,mBAAoC,oBAATC,KAW3BC,gBA9D4B,SA8DZC,EAA8BC,GAC5C,IAAKC,MAAMC,QAAQH,GACjB,MAAMI,MAAM,iDAGdT,KAAKU,QAQL,IANA,IAAMC,EAAgBL,EAClBN,KAAKJ,sBACLI,KAAKN,eAEHkB,EAAS,GAENvB,EAAI,EAAGA,EAAIgB,EAAMf,OAAQD,GAAK,EAAG,CACxC,IAAMwB,EAAQR,EAAMhB,GACdyB,EAAYzB,EAAI,EAAIgB,EAAMf,OAC1ByB,EAAQD,EAAYT,EAAMhB,EAAI,GAAK,EACnC2B,EAAY3B,EAAI,EAAIgB,EAAMf,OAC1B2B,EAAQD,EAAYX,EAAMhB,EAAI,GAAK,EAEnC6B,EAAWL,GAAS,EACpBM,GAAqB,EAARN,IAAiB,EAAME,GAAS,EAC/CK,GAAqB,GAARL,IAAiB,EAAME,GAAS,EAC7CI,EAAmB,GAARJ,EAEVD,IACHK,EAAW,GAENP,IACHM,EAAW,KAIfR,EAAOU,KACLX,EAAcO,GACdP,EAAcQ,GACdR,EAAcS,GACdT,EAAcU,GAEjB,CAED,OAAOT,EAAOW,KAAK,GACpB,EAUDC,aAlH4B,SAkHfnB,EAAeC,GAG1B,OAAIN,KAAKE,qBAAuBI,EACvBmB,KAAKpB,GAEPL,KAAKI,gBAAgBnB,EAAkBoB,GAAQC,EACvD,EAUDoB,aAnI4B,SAmIfrB,EAAeC,GAG1B,OAAIN,KAAKE,qBAAuBI,EACvBH,KAAKE,GA3LQ,SAAUsB,GAKlC,IAHA,IAAMxC,EAAgB,GAClByC,EAAM,EACRrC,EAAI,EACCqC,EAAMD,EAAMrC,QAAQ,CACzB,IAAMuC,EAAKF,EAAMC,KACjB,GAAIC,EAAK,IACP1C,EAAII,KAAOuC,OAAOC,aAAaF,QAC1B,GAAIA,EAAK,KAAOA,EAAK,IAAK,CAC/B,IAAMG,EAAKL,EAAMC,KACjBzC,EAAII,KAAOuC,OAAOC,cAAoB,GAALF,IAAY,EAAW,GAALG,EACpD,MAAM,GAAIH,EAAK,KAAOA,EAAK,IAAK,CAE/B,IAGMI,IACI,EAALJ,IAAW,IAAa,GAJlBF,EAAMC,OAImB,IAAa,GAHtCD,EAAMC,OAGuC,EAAW,GAFxDD,EAAMC,MAGf,MACFzC,EAAII,KAAOuC,OAAOC,aAAa,OAAUE,GAAK,KAC9C9C,EAAII,KAAOuC,OAAOC,aAAa,OAAc,KAAJE,GAC1C,KAAM,CACL,IAAMD,EAAKL,EAAMC,KACXM,EAAKP,EAAMC,KACjBzC,EAAII,KAAOuC,OAAOC,cACT,GAALF,IAAY,IAAa,GAALG,IAAY,EAAW,GAALE,EAE3C,CACF,CACD,OAAO/C,EAAIoC,KAAK,GACjB,CA8JUY,CAAkBnC,KAAKoC,wBAAwB/B,EAAOC,GAC9D,EAiBD8B,wBA3J4B,SA2JJ/B,EAAeC,GACrCN,KAAKU,QAQL,IANA,IAAM2B,EAAgB/B,EAClBN,KAAKH,sBACLG,KAAKL,eAEHiB,EAAmB,GAEhBvB,EAAI,EAAGA,EAAIgB,EAAMf,QAAU,CAClC,IAAMuB,EAAQwB,EAAchC,EAAMiC,OAAOjD,MAGnC0B,EADY1B,EAAIgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,EAIrD4B,IAHJ5B,EAEoBgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,GAIrDkD,IAHJlD,EAEoBgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,GAG3D,KAFEA,EAEW,MAATwB,GAA0B,MAATE,GAA0B,MAATE,GAA0B,MAATsB,EACrD,MAAM9B,QAGR,IAAMS,EAAYL,GAAS,EAAME,GAAS,EAG1C,GAFAH,EAAOU,KAAKJ,GAEE,KAAVD,EAAc,CAChB,IAAME,EAAaJ,GAAS,EAAK,IAASE,GAAS,EAGnD,GAFAL,EAAOU,KAAKH,GAEE,KAAVoB,EAAc,CAChB,IAAMnB,EAAaH,GAAS,EAAK,IAAQsB,EACzC3B,EAAOU,KAAKF,EACb,CACF,CACF,CAED,OAAOR,CACR,EAODF,MA7M4B,WA8M1B,IAAKV,KAAKN,eAAgB,CACxBM,KAAKN,eAAiB,CAAC,EACvBM,KAAKL,eAAiB,CAAC,EACvBK,KAAKJ,sBAAwB,CAAC,EAC9BI,KAAKH,sBAAwB,CAAC,EAG9B,IAAK,IAAIR,EAAI,EAAGA,EAAIW,KAAKD,aAAaT,OAAQD,IAC5CW,KAAKN,eAAeL,GAAKW,KAAKD,aAAauC,OAAOjD,GAClDW,KAAKL,eAAeK,KAAKN,eAAeL,IAAMA,EAC9CW,KAAKJ,sBAAsBP,GAAKW,KAAKC,qBAAqBqC,OAAOjD,GACjEW,KAAKH,sBAAsBG,KAAKJ,sBAAsBP,IAAMA,EAGxDA,GAAKW,KAAKF,kBAAkBR,SAC9BU,KAAKL,eAAeK,KAAKC,qBAAqBqC,OAAOjD,IAAMA,EAC3DW,KAAKH,sBAAsBG,KAAKD,aAAauC,OAAOjD,IAAMA,EAG/D,CACF,GAeUmD,EAAgC,SAAUtD,GAErD,OAX0B,SAAUA,GACpC,IAAMuD,EAAYxD,EAAkBC,GACpC,OAAOO,EAAOW,gBAAgBqC,GAAW,EAC3C,CAQSC,CAAaxD,GAAKyD,QAAQ,MAAO,GAC1C,EAWaC,EAAe,SAAU1D,GACpC,IACE,OAAOO,EAAOiC,aAAaxC,GAAK,EAGjC,CAFC,MAAO2D,GACPC,QAAQC,MAAM,wBAAyBF,EACxC,CACD,OAAO,IACT,WCnOgBG,IACd,IACE,MAA4B,kBAAdC,SAGf,CAFC,MAAOJ,GACP,OAAO,CACR,CACF,UASeK,IACd,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAIC,GAAoB,EAClBC,EACJ,0DACIC,EAAUC,KAAKR,UAAUS,KAAKH,GACpCC,EAAQG,UAAY,WAClBH,EAAQI,OAAOC,QAEVP,GACHG,KAAKR,UAAUa,eAAeP,GAEhCH,GAAQ,EACT,EACDI,EAAQO,gBAAkB,WACxBT,GAAW,CACZ,EAEDE,EAAQQ,QAAU,iBAChBX,GAAoB,QAAb,EAAAG,EAAQT,aAAKkB,IAAAA,OAAA,EAAAA,EAAEC,UAAW,GAClC,CAGF,CAFC,MAAOnB,GACPM,EAAON,EACR,CACF,GACF,CCpID,IAAMoB,EAAwB,6BDuJ5B,GAAoB,qBAATV,KACT,OAAOA,KAET,GAAsB,qBAAXW,OACT,OAAOA,OAET,GAAsB,qBAAXC,EAAAA,EACT,OAAOA,EAAAA,EAET,MAAM,IAAI5D,MAAM,kCAClB,CChKE6D,GAAYC,qBADgB,EAwCxBC,EAAc,WAClB,IACE,OACEL,KAnC6B,WACjC,GAAuB,qBAAZM,QAAX,CAGA,IAAMC,EAAqBD,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,oBAAAA,mQAAAA,kBAAAA,wCAAAA,qBAAAA,IAAYF,sBACvC,OAAIG,EACKC,KAAKC,MAAMF,QADpB,CAFC,CAKF,CA4BKG,IA1BwB,WAC5B,GAAwB,qBAAbC,SAAX,CAGA,IAAIC,EACJ,IACEA,EAAQD,SAASE,OAAOD,MAAM,gCAK/B,CAJC,MAAOlC,GAGP,MACD,CACD,IAAMoC,EAAUF,GAASnC,EAAamC,EAAM,IAC5C,OAAOE,GAAWN,KAAKC,MAAMK,EAV5B,CAWF,CAaKC,EAWH,CATC,MAAOrC,GAQP,YADAC,QAAQqC,KAAR,sDAA4DtC,GAE7D,CACF,EAkBYuC,EAAoC,SAC/CC,GAEA,IAAMC,EAb8B,SACpCD,GACuB,eAA4B,QAA5B,EAAe,QAAf,EAAAb,WAAeP,IAAAA,OAAA,EAAAA,EAAAA,qBAAasB,IAAAA,OAAA,EAAAA,EAAGF,EAAY,CAWrDG,CAAuBH,GACpC,GAAKC,EAAL,CAGA,IAAMG,EAAiBH,EAAKI,YAAY,KACxC,GAAID,GAAkB,GAAKA,EAAiB,IAAMH,EAAKhG,OACrD,MAAM,IAAImB,MAAJ,uBAA0B6E,EAA1B,yCAGR,IAAMK,EAAOC,SAASN,EAAKO,UAAUJ,EAAiB,GAAI,IAC1D,MAAgB,MAAZH,EAAK,GAEA,CAACA,EAAKO,UAAU,EAAGJ,EAAiB,GAAIE,GAExC,CAACL,EAAKO,UAAU,EAAGJ,GAAiBE,EAX5C,CAaH,EAMaG,EAAsB,WAAyC,MAC1E,OAAa,QAAb,EAAAtB,WAAaP,IAAAA,OAAA,EAAAA,EAAE8B,MAAM,ECtIVC,EAAAA,WAIX,wCAFA,KAAA3C,OAAoC,WAAQ,EAC5C,KAAAD,QAAqC,WAAQ,EAE3CpD,KAAKiG,QAAU,IAAI9C,SAAQ,SAACC,EAASC,GACnC,EAAKD,QAAUA,EACf,EAAKC,OAASA,CACf,GACF,4CAOD,SACE6C,GAAqD,WAErD,OAAO,SAACnD,EAAOoD,GACTpD,EACF,EAAKM,OAAON,GAEZ,EAAKK,QAAQ+C,GAES,oBAAbD,IAGT,EAAKD,QAAQG,OAAM,WAAQ,IAIH,IAApBF,EAAS5G,OACX4G,EAASnD,GAETmD,EAASnD,EAAOoD,GAGrB,CACF,OAvCUH,GC6EG,SAAAK,EACdC,EACAC,GAEA,GAAID,EAAME,IACR,MAAM,IAAI/F,MACR,gHAIJ,IAKMgG,EAAUF,GAAa,eACvBG,EAAMJ,EAAMI,KAAO,EACnBC,EAAML,EAAMK,KAAOL,EAAMM,QAC/B,IAAKD,EACH,MAAM,IAAIlG,MAAM,wDAGlB,IAAMoG,EAAO,eAEXC,IAAK,kCAAF,OAAoCL,GACvCM,IAAKN,EACLC,IAAAA,EACAM,IAAKN,EAAM,KACXO,UAAWP,EACXC,IAAAA,EACAC,QAASD,EACTO,SAAU,CACRC,iBAAkB,SAClBC,WAAY,CAAC,IAIZd,GAKL,MAAO,CACL9D,EAA8BmC,KAAK0C,UAjCtB,CACbC,IAAK,OACLC,KAAM,SAgCN/E,EAA8BmC,KAAK0C,UAAUR,IAH7B,IAKhBtF,KAAK,IACT,CChFA,IAYaiG,EAAAA,SAAAA,iCAIX,WAEWC,EACTvD,EAEOwD,GAAoC,6BAE3C,cAAMxD,IALOuD,KAAJA,EAGF,EAAUC,WAAVA,EAPA,EAAIC,KAdI,gBA2BfC,OAAOC,gBAAP,UAA4BL,EAAcM,WAItCrH,MAAMsH,mBACRtH,MAAMsH,mBAAN,UAA8BC,EAAaF,UAAUG,QAXZ,CAa5C,kBAtBUT,SAAsB/G,QAyBtBuH,EAAAA,WAIX,WACmBE,EACAC,EACAC,IAA2B,eAF3B,KAAOF,QAAPA,EACA,KAAWC,YAAXA,EACA,KAAMC,OAANA,CACf,sCAEJ,SACEX,GAGA,IAAMC,GAAc,0CAAyB,CAAC,EACxCW,EAAW,GAAH,OAAMrI,KAAKkI,QAAX,YAAsBT,GAC9Ba,EAAWtI,KAAKoI,OAAOX,GAEvBvD,EAAUoE,EAAWC,EAAgBD,EAAUZ,GAAc,QAE7Dc,EAAc,GAAH,OAAMxI,KAAKmI,YAAX,aAA2BjE,EAA3B,aAAuCmE,EAAvC,MAEXtF,EAAQ,IAAIyE,EAAca,EAAUG,EAAad,GAEvD,OAAO3E,CACR,OAzBUiF,GA4Bb,SAASO,EAAgBD,EAAkBG,GACzC,OAAOH,EAAS3F,QAAQ+F,GAAS,SAACC,EAAGC,GACnC,IAAMzC,EAAQsC,EAAKG,GACnB,OAAgB,MAATzC,EAAgBrE,OAAOqE,GAAvB,WAAoCyC,EAApC,KACR,GACF,CAED,IAAMF,EAAU,gBC3EA,SAAAG,EAAUC,EAAWC,GACnC,GAAID,IAAMC,EACR,OAAO,EAKT,IAFA,IAAMC,EAAQpB,OAAOqB,KAAKH,GACpBI,EAAQtB,OAAOqB,KAAKF,GAC1B,MAAgBC,EAAhB,eAAuB,CAAlB,IAAMG,EAAC,KACV,IAAKD,EAAME,SAASD,GAClB,OAAO,EAGT,IAAME,EAASP,EAA8BK,GACvCG,EAASP,EAA8BI,GAC7C,GAAII,EAASF,IAAUE,EAASD,IAC9B,IAAKT,EAAUQ,EAAOC,GACpB,OAAO,OAEJ,GAAID,IAAUC,EACnB,OAAO,CAEV,CAED,cAAgBJ,EAAhB,eAAuB,CAAlB,IAAMC,EAAC,KACV,IAAKH,EAAMI,SAASD,GAClB,OAAO,CAEV,CACD,OAAO,CACR,CAED,SAASI,EAASC,GAChB,OAAiB,OAAVA,GAAmC,kBAAVA,CAClC,CCtEM,SAAUC,EACdvB,GAEA,OAAIA,GAAYA,EAA+BwB,UACrCxB,EAA+BwB,UAEhCxB,CAEX,yFCvBA,SAASyB,EAAKtJ,EAAOuJ,GACnB,IAAIhJ,EAAS,CAAC,EAMd,OALAgH,OAAOqB,KAAK5I,GAAOwJ,SAAQ,SAAUC,IACL,IAA1BF,EAAOG,QAAQD,KACjBlJ,EAAOkJ,GAAQzJ,EAAMyJ,GAExB,IACMlJ,CACR,CAID,SAASoJ,EAAgBC,GACvB,IAAIC,EAAmB,SAA0BC,GAC/C,IAAIvJ,EAASqJ,EAAcE,GAE3B,OAAIA,EAAMC,KACDC,EAAAA,EAAAA,GAAS,CAAC,GAAGC,EAAAA,EAAAA,GAAM1J,EAAQqJ,GAAcI,EAAAA,EAAAA,GAAS,CACvDE,MAAOJ,EAAMI,OACZJ,EAAMC,OAAQT,EAAKQ,EAAMC,IAAK,CAACH,EAAcO,eAG9CL,EAAMM,IACDJ,EAAAA,EAAAA,GAAS,CAAC,GAAGC,EAAAA,EAAAA,GAAM1J,EAAQqJ,GAAcI,EAAAA,EAAAA,GAAS,CACvDE,MAAOJ,EAAMI,OACZJ,EAAMM,MAAOd,EAAKQ,EAAMM,GAAI,CAACR,EAAcO,eAGzC5J,CACR,EAcD,OAZAsJ,EAAiBQ,UAUZ,CAAC,EACNR,EAAiBM,YAAc,CAAC,MAAO,MAAMG,QAAOC,EAAAA,EAAAA,GAAmBX,EAAcO,cAC9EN,CACR,CAeD,QCrBA,MAzCA,WACE,IAAK,IAAIW,EAAOC,UAAUxL,OAAQyL,EAAS,IAAIxK,MAAMsK,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IACjFD,EAAOC,GAAQF,UAAUE,GAG3B,IAAIC,EAAK,SAAYd,GACnB,OAAOY,EAAOG,QAAO,SAAUC,EAAKC,GAClC,IAAIxK,EAASwK,EAAMjB,GAEnB,OAAIvJ,GACK0J,EAAAA,EAAAA,GAAMa,EAAKvK,GAGbuK,CACR,GAAE,CAAC,EACL,EAuBD,OANAF,EAAGP,UAEM,CAAC,EACVO,EAAGT,YAAcO,EAAOG,QAAO,SAAUC,EAAKC,GAC5C,OAAOD,EAAIR,OAAOS,EAAMZ,YACzB,GAAE,IACIS,CACR,sBCtCD,SAASI,EAAQC,EAAKC,GACpB,OAAKA,GAAwB,kBAATA,EAIbA,EAAKC,MAAM,KAAKN,QAAO,SAAUC,EAAKM,GAC3C,OAAON,GAAOA,EAAIM,GAAQN,EAAIM,GAAQ,IACvC,GAAEH,GALM,IAMV,CAgDD,MA9CA,SAAeI,GACb,IAAI5B,EAAO4B,EAAQ5B,KACf6B,EAAuBD,EAAQE,YAC/BA,OAAuC,IAAzBD,EAAkCD,EAAQ5B,KAAO6B,EAC/DE,EAAWH,EAAQG,SACnBC,EAAYJ,EAAQI,UAEpBb,EAAK,SAAYd,GACnB,GAAmB,MAAfA,EAAML,GACR,OAAO,KAGT,IAAIiC,EAAY5B,EAAML,GAElBkC,EAAeX,EADPlB,EAAMI,MACgBsB,IAAa,CAAC,EAwBhD,OAAOI,EAAAA,EAAAA,GAAkB9B,EAAO4B,GAtBP,SAA4BG,GACnD,IAAI/F,EAcJ,MAZ4B,oBAAjB6F,EACT7F,EAAQ6F,EAAaE,GACZ3L,MAAMC,QAAQwL,GACvB7F,EAAQ6F,EAAaE,IAAmBA,GAExC/F,EAAQkF,EAAQW,EAAcE,IAAmBA,EAE7CJ,IACF3F,EAAQ2F,EAAU3F,MAIF,IAAhByF,EACKzF,GAGFgG,EAAAA,EAAAA,GAAgB,CAAC,EAAGP,EAAazF,EACzC,GAGF,EAID,OAFA8E,EAAGP,UAAoG,CAAC,EACxGO,EAAGT,YAAc,CAACV,GACXmB,CACR,ECvDD,SAASmB,EAAUjG,GACjB,MAAqB,kBAAVA,EACFA,EAGF,GAAGwE,OAAOxE,EAAO,WACzB,CAEM,IAkCP,EADckG,EAjCMjB,EAAM,CACxBtB,KAAM,SACN+B,SAAU,UACVC,UAAWM,IAEUhB,EAAM,CAC3BtB,KAAM,YACN+B,SAAU,UACVC,UAAWM,IAEYhB,EAAM,CAC7BtB,KAAM,cACN+B,SAAU,UACVC,UAAWM,IAEahB,EAAM,CAC9BtB,KAAM,eACN+B,SAAU,UACVC,UAAWM,IAEWhB,EAAM,CAC5BtB,KAAM,aACN+B,SAAU,UACVC,UAAWM,IAEYhB,EAAM,CAC7BtB,KAAM,cACN+B,SAAU,YAEcT,EAAM,CAC9BtB,KAAM,eACN+B,SAAU,WCdZ,EAAeQ,EA1BWjB,EAAM,CAC9BtB,KAAM,eACN8B,aAAa,EACbE,UAAW,SAAmB3F,GAC5B,MAAO,CACL,eAAgB,CACdmG,QAASnG,GAGd,IAEqBiF,EAAM,CAC5BtB,KAAM,YAEcsB,EAAM,CAC1BtB,KAAM,aAEkBsB,EAAM,CAC9BtB,KAAM,iBAEgBsB,EAAM,CAC5BtB,KAAM,eAEgBsB,EAAM,CAC5BtB,KAAM,gBCgBR,EADcuC,EAvCSjB,EAAM,CAC3BtB,KAAM,cAEmBsB,EAAM,CAC/BtB,KAAM,kBAEcsB,EAAM,CAC1BtB,KAAM,aAEoBsB,EAAM,CAChCtB,KAAM,mBAEgBsB,EAAM,CAC5BtB,KAAM,eAEkBsB,EAAM,CAC9BtB,KAAM,iBAEWsB,EAAM,CACvBtB,KAAM,UAEUsB,EAAM,CACtBtB,KAAM,SAEcsB,EAAM,CAC1BtB,KAAM,aAEgBsB,EAAM,CAC5BtB,KAAM,eAEesB,EAAM,CAC3BtB,KAAM,cAEkBsB,EAAM,CAC9BtB,KAAM,iBAEiBsB,EAAM,CAC7BtB,KAAM,iBCAR,EADWuC,EApCUjB,EAAM,CACzBtB,KAAM,YAEmBsB,EAAM,CAC/BtB,KAAM,kBAEgBsB,EAAM,CAC5BtB,KAAM,eAEgBsB,EAAM,CAC5BtB,KAAM,eAEasB,EAAM,CACzBtB,KAAM,YAEkBsB,EAAM,CAC9BtB,KAAM,iBAEqBsB,EAAM,CACjCtB,KAAM,oBAEkBsB,EAAM,CAC9BtB,KAAM,iBAEyBsB,EAAM,CACrCtB,KAAM,wBAEsBsB,EAAM,CAClCtB,KAAM,qBAEuBsB,EAAM,CACnCtB,KAAM,sBAEcsB,EAAM,CAC1BtB,KAAM,cCfR,EAAeuC,EAnBOjB,EAAM,CAC1BtB,KAAM,aAEYsB,EAAM,CACxBtB,KAAM,SACN+B,SAAU,WAEKT,EAAM,CACrBtB,KAAM,QAEWsB,EAAM,CACvBtB,KAAM,UAEYsB,EAAM,CACxBtB,KAAM,WAEUsB,EAAM,CACtBtB,KAAM,UCPR,EADcuC,EATKjB,EAAM,CACvBtB,KAAM,QACN+B,SAAU,YAEST,EAAM,CACzBtB,KAAM,UACN8B,YAAa,kBACbC,SAAU,aCJZ,EAJgBT,EAAM,CACpBtB,KAAM,YACN+B,SAAU,YCAZ,SAASC,EAAU3F,GACjB,OAAOA,GAAS,EAAI,GAAGwE,OAAe,IAARxE,EAAa,KAAOA,CACnD,CAEM,IAAIoG,EAAQnB,EAAM,CACvBtB,KAAM,QACNgC,UAAWA,IAEFU,EAAWpB,EAAM,CAC1BtB,KAAM,WACNgC,UAAWA,IAEFW,EAAWrB,EAAM,CAC1BtB,KAAM,WACNgC,UAAWA,IAEFY,EAAStB,EAAM,CACxBtB,KAAM,SACNgC,UAAWA,IAEFa,EAAYvB,EAAM,CAC3BtB,KAAM,YACNgC,UAAWA,IAEFc,EAAYxB,EAAM,CAC3BtB,KAAM,YACNgC,UAAWA,IAgBb,GAduBV,EAAM,CAC3BtB,KAAM,OACN8B,YAAa,QACbE,UAAWA,IAEWV,EAAM,CAC5BtB,KAAM,OACN8B,YAAa,SACbE,UAAWA,IAKAO,EAAQE,EAAOC,EAAUC,EAAUC,EAAQC,EAAWC,EAH5CxB,EAAM,CAC3BtB,KAAM,0BCdR,EADiBuC,EAzBOjB,EAAM,CAC5BtB,KAAM,aACN+B,SAAU,eAEUT,EAAM,CAC1BtB,KAAM,WACN+B,SAAU,eAEWT,EAAM,CAC3BtB,KAAM,YACN+B,SAAU,eAEYT,EAAM,CAC5BtB,KAAM,aACN+B,SAAU,eAEeT,EAAM,CAC/BtB,KAAM,kBAEgBsB,EAAM,CAC5BtB,KAAM,eAEesB,EAAM,CAC3BtB,KAAM,0EChBR,SAASH,EAAKtJ,EAAOuJ,GACnB,IAAIhJ,EAAS,CAAC,EAMd,OALAgH,OAAOqB,KAAK5I,GAAOwJ,SAAQ,SAAUC,IACL,IAA1BF,EAAOG,QAAQD,KACjBlJ,EAAOkJ,GAAQzJ,EAAMyJ,GAExB,IACMlJ,CACR,eCJD,EATa,SAAgBiM,GAC3B,IAAIC,EDgBS,SAAgBD,GAoI7B,OAnIuB,SAA0BzB,GAC/C,IAsCIZ,EAtCAkB,EAAUZ,UAAUxL,OAAS,QAAsByN,IAAjBjC,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAE/EnD,EAAO+D,EAAQ/D,KACfqF,GAAgBC,EAAAA,EAAAA,GAAyBvB,EAAS,CAAC,SAMnDwB,EAAkBvF,EAalBwF,EAAmC,oBAAV/B,EAAuB,SAAUb,GAC5D,MAAO,CACL6C,KAAM,SAAcjD,GAClB,OAAOiB,GAAMf,EAAAA,EAAAA,GAAS,CACpBE,MAAOA,GACNJ,GACJ,EAEJ,EAAG,CACFiD,KAAMhC,GAEJiC,GAAYC,EAAAA,EAAAA,GAAWH,GAAiB9C,EAAAA,EAAAA,GAAS,CACnDwC,UAAWA,EACXlF,KAAMA,GAAQkF,EAAUU,YACxBL,gBAAiBA,GAChBF,IAIC5B,EAAMZ,cACRA,EAAcY,EAAMZ,mBACbY,EAAMZ,aAKXY,EAAMV,YACIU,EAAMV,iBACXU,EAAMV,WAKf,IAAI8C,EAA+BC,EAAAA,YAAiB,SAAyBtD,EAAOuD,GAClF,IAAIC,EAAWxD,EAAMwD,SACjBC,EAAgBzD,EAAM0D,UACtBC,EAAQ3D,EAAM2D,MACdC,EAAgB5D,EAAM6D,UACtBC,GAAQhB,EAAAA,EAAAA,GAAyB9C,EAAO,CAAC,WAAY,YAAa,QAAS,cAE3E+D,EAAUb,EAAUlD,GACpB0D,GAAYM,EAAAA,EAAAA,GAAKD,EAAQd,KAAMQ,GAC/BQ,EAASH,EAMb,GAJIzD,IACF4D,EAASzE,EAAKyE,EAAQ5D,IAGpBsD,EACF,OAAoBL,EAAAA,aAAmBE,GAAUtD,EAAAA,EAAAA,GAAS,CACxDwD,WAAWM,EAAAA,EAAAA,GAAKR,EAASxD,MAAM0D,UAAWA,IACzCO,IAGL,GAAwB,oBAAbT,EACT,OAAOA,GAAStD,EAAAA,EAAAA,GAAS,CACvBwD,UAAWA,GACVO,IAGL,IAAIC,EAAiBN,GAAiBlB,EACtC,OAAoBY,EAAAA,cAAoBY,GAAgBhE,EAAAA,EAAAA,GAAS,CAC/DqD,IAAKA,EACLG,UAAWA,GACVO,GAAST,EACb,IAwCD,OADAW,IAAqBd,EAAiBX,GAC/BW,CACR,CAGF,CCrJwBe,CAAqB1B,GAC5C,OAAO,SAAUzB,EAAOM,GACtB,OAAOoB,EAAiB1B,GAAOf,EAAAA,EAAAA,GAAS,CACtCmE,aAAcA,EAAAA,GACb9C,GACJ,CACF,ECTUzB,EAAgBD,EAAgBqC,EAAQoC,EAASnC,EAASoC,EAASC,EAAMC,EAAWC,EAASC,EAASC,EAAQC,EAAAA,EAASC,IAQlI,EAHUC,EAAO,MAAPA,CAAcjF,EAAe,CACrCtC,KAAM,oHCyRJwH,EAAsB1B,EAAAA,YAAiB,SAAgBtD,EAAOuD,GAChE,IAAIC,EAAWxD,EAAMwD,SACjBO,EAAU/D,EAAM+D,QAChBL,EAAY1D,EAAM0D,UAClBuB,EAAejF,EAAMkF,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAmBnF,EAAM6D,UACzBA,OAAiC,IAArBsB,EAA8B,SAAWA,EACrDC,EAAkBpF,EAAMqF,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwBtF,EAAMuF,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAC9DE,EAAwBxF,EAAMyF,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAc1F,EAAM2F,QACpBC,EAAwB5F,EAAM4F,sBAC9BC,EAAmB7F,EAAM8F,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAc/F,EAAMgG,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAgBjG,EAAMkG,UACtBC,EAAcnG,EAAM5C,KACpBA,OAAuB,IAAhB+I,EAAyB,SAAWA,EAC3CC,EAAiBpG,EAAMqG,QACvBA,OAA6B,IAAnBD,EAA4B,OAASA,EAC/CtC,GAAQhB,EAAAA,EAAAA,GAAyB9C,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,mBAAoB,qBAAsB,UAAW,wBAAyB,YAAa,OAAQ,YAAa,OAAQ,YAEvOkG,EAAYD,GAA8B3C,EAAAA,cAAoB,OAAQ,CACxEI,WAAWM,EAAAA,EAAAA,GAAKD,EAAQmC,UAAWnC,EAAQ,WAAWvD,QAAO8F,EAAAA,EAAAA,GAAWN,OACvEC,GACCN,EAAUD,GAA4BpC,EAAAA,cAAoB,OAAQ,CACpEI,WAAWM,EAAAA,EAAAA,GAAKD,EAAQ4B,QAAS5B,EAAQ,WAAWvD,QAAO8F,EAAAA,EAAAA,GAAWN,OACrEN,GACH,OAAoBpC,EAAAA,cAAoBiD,EAAAA,GAAYrG,EAAAA,EAAAA,GAAS,CAC3DwD,WAAWM,EAAAA,EAAAA,GAAKD,EAAQd,KAAMc,EAAQsC,GAAU3C,EAAqB,YAAVwB,EAAsBnB,EAAQyC,aAAyB,YAAVtB,GAAuBnB,EAAQ,GAAGvD,OAAO6F,GAAS7F,QAAO8F,EAAAA,EAAAA,GAAWpB,KAAmB,WAATc,GAAqB,CAACjC,EAAQ,GAAGvD,OAAO6F,EAAS,QAAQ7F,QAAO8F,EAAAA,EAAAA,GAAWN,KAASjC,EAAQ,OAAOvD,QAAO8F,EAAAA,EAAAA,GAAWN,MAAUT,GAAoBxB,EAAQwB,iBAAkBF,GAAYtB,EAAQsB,SAAUS,GAAa/B,EAAQ+B,WACtZjC,UAAWA,EACXwB,SAAUA,EACVoB,aAAchB,EACdG,uBAAuB5B,EAAAA,EAAAA,GAAKD,EAAQ2C,aAAcd,GAClDrC,IAAKA,EACLnG,KAAMA,GACL0G,GAAqBR,EAAAA,cAAoB,OAAQ,CAClDI,UAAWK,EAAQ4C,OAClBT,EAAW1C,EAAUmC,GACzB,IAqGD,KAAeiB,EAAAA,EAAAA,IAzaK,SAAgBxG,GAClC,MAAO,CAEL6C,MAAM/C,EAAAA,EAAAA,GAAS,CAAC,EAAGE,EAAM0E,WAAW+B,OAAQ,CAC1CC,UAAW,aACXxE,SAAU,GACVyE,QAAS,WACTC,aAAc5G,EAAM6G,MAAMD,aAC1B9B,MAAO9E,EAAMsE,QAAQwC,KAAKC,QAC1BC,WAAYhH,EAAMiH,YAAYvJ,OAAO,CAAC,mBAAoB,aAAc,UAAW,CACjFwJ,SAAUlH,EAAMiH,YAAYC,SAASC,QAEvC,UAAW,CACTC,eAAgB,OAChBC,iBAAiBC,EAAAA,EAAAA,IAAMtH,EAAMsE,QAAQwC,KAAKC,QAAS/G,EAAMsE,QAAQiD,OAAOC,cAExE,uBAAwB,CACtBH,gBAAiB,eAEnB,aAAc,CACZA,gBAAiB,gBAGrB,aAAc,CACZvC,MAAO9E,EAAMsE,QAAQiD,OAAOtC,YAKhCsB,MAAO,CACLvE,MAAO,OAEPD,QAAS,UACT0F,WAAY,UACZC,eAAgB,WAIlBZ,KAAM,CACJH,QAAS,WAIXgB,YAAa,CACX7C,MAAO9E,EAAMsE,QAAQyC,QAAQa,KAC7B,UAAW,CACTP,iBAAiBC,EAAAA,EAAAA,IAAMtH,EAAMsE,QAAQyC,QAAQa,KAAM5H,EAAMsE,QAAQiD,OAAOC,cAExE,uBAAwB,CACtBH,gBAAiB,iBAMvBQ,cAAe,CACb/C,MAAO9E,EAAMsE,QAAQwD,UAAUF,KAC/B,UAAW,CACTP,iBAAiBC,EAAAA,EAAAA,IAAMtH,EAAMsE,QAAQwD,UAAUF,KAAM5H,EAAMsE,QAAQiD,OAAOC,cAE1E,uBAAwB,CACtBH,gBAAiB,iBAMvBU,SAAU,CACRpB,QAAS,WACTqB,OAAQ,aAAa5H,OAA8B,UAAvBJ,EAAMsE,QAAQtH,KAAmB,sBAAwB,6BACrF,aAAc,CACZgL,OAAQ,aAAa5H,OAAOJ,EAAMsE,QAAQiD,OAAOU,sBAKrDC,gBAAiB,CACfpD,MAAO9E,EAAMsE,QAAQyC,QAAQa,KAC7BI,OAAQ,aAAa5H,QAAOkH,EAAAA,EAAAA,IAAMtH,EAAMsE,QAAQyC,QAAQa,KAAM,KAC9D,UAAW,CACTI,OAAQ,aAAa5H,OAAOJ,EAAMsE,QAAQyC,QAAQa,MAClDP,iBAAiBC,EAAAA,EAAAA,IAAMtH,EAAMsE,QAAQyC,QAAQa,KAAM5H,EAAMsE,QAAQiD,OAAOC,cAExE,uBAAwB,CACtBH,gBAAiB,iBAMvBc,kBAAmB,CACjBrD,MAAO9E,EAAMsE,QAAQwD,UAAUF,KAC/BI,OAAQ,aAAa5H,QAAOkH,EAAAA,EAAAA,IAAMtH,EAAMsE,QAAQwD,UAAUF,KAAM,KAChE,UAAW,CACTI,OAAQ,aAAa5H,OAAOJ,EAAMsE,QAAQwD,UAAUF,MACpDP,iBAAiBC,EAAAA,EAAAA,IAAMtH,EAAMsE,QAAQwD,UAAUF,KAAM5H,EAAMsE,QAAQiD,OAAOC,cAE1E,uBAAwB,CACtBH,gBAAiB,gBAGrB,aAAc,CACZW,OAAQ,aAAa5H,OAAOJ,EAAMsE,QAAQiD,OAAOtC,YAKrDmD,UAAW,CACTtD,MAAO9E,EAAMsE,QAAQ+D,gBAAgBrI,EAAMsE,QAAQgE,KAAK,MACxDjB,gBAAiBrH,EAAMsE,QAAQgE,KAAK,KACpCC,UAAWvI,EAAMuE,QAAQ,GACzB,UAAW,CACT8C,gBAAiBrH,EAAMsE,QAAQgE,KAAKE,KACpCD,UAAWvI,EAAMuE,QAAQ,GAEzB,uBAAwB,CACtBgE,UAAWvI,EAAMuE,QAAQ,GACzB8C,gBAAiBrH,EAAMsE,QAAQgE,KAAK,MAEtC,aAAc,CACZjB,gBAAiBrH,EAAMsE,QAAQiD,OAAOU,qBAG1C,iBAAkB,CAChBM,UAAWvI,EAAMuE,QAAQ,IAE3B,WAAY,CACVgE,UAAWvI,EAAMuE,QAAQ,IAE3B,aAAc,CACZO,MAAO9E,EAAMsE,QAAQiD,OAAOtC,SAC5BsD,UAAWvI,EAAMuE,QAAQ,GACzB8C,gBAAiBrH,EAAMsE,QAAQiD,OAAOU,qBAK1CQ,iBAAkB,CAChB3D,MAAO9E,EAAMsE,QAAQyC,QAAQ2B,aAC7BrB,gBAAiBrH,EAAMsE,QAAQyC,QAAQa,KACvC,UAAW,CACTP,gBAAiBrH,EAAMsE,QAAQyC,QAAQ4B,KAEvC,uBAAwB,CACtBtB,gBAAiBrH,EAAMsE,QAAQyC,QAAQa,QAM7CgB,mBAAoB,CAClB9D,MAAO9E,EAAMsE,QAAQwD,UAAUY,aAC/BrB,gBAAiBrH,EAAMsE,QAAQwD,UAAUF,KACzC,UAAW,CACTP,gBAAiBrH,EAAMsE,QAAQwD,UAAUa,KAEzC,uBAAwB,CACtBtB,gBAAiBrH,EAAMsE,QAAQwD,UAAUF,QAM/CzC,iBAAkB,CAChBoD,UAAW,OACX,UAAW,CACTA,UAAW,QAEb,iBAAkB,CAChBA,UAAW,QAEb,WAAY,CACVA,UAAW,QAEb,aAAc,CACZA,UAAW,SAKfjC,aAAc,CAAC,EAGfrB,SAAU,CAAC,EAGXmB,aAAc,CACZtB,MAAO,UACP+D,YAAa,gBAIfC,cAAe,CACbnC,QAAS,UACToC,SAAU/I,EAAM0E,WAAWsE,QAAQ,KAIrCC,cAAe,CACbtC,QAAS,WACToC,SAAU/I,EAAM0E,WAAWsE,QAAQ,KAIrCE,kBAAmB,CACjBvC,QAAS,UACToC,SAAU/I,EAAM0E,WAAWsE,QAAQ,KAIrCG,kBAAmB,CACjBxC,QAAS,WACToC,SAAU/I,EAAM0E,WAAWsE,QAAQ,KAIrCI,mBAAoB,CAClBzC,QAAS,WACToC,SAAU/I,EAAM0E,WAAWsE,QAAQ,KAIrCK,mBAAoB,CAClB1C,QAAS,WACToC,SAAU/I,EAAM0E,WAAWsE,QAAQ,KAIrCM,UAAW,CAAC,EAGZC,UAAW,CAAC,EAGZ7D,UAAW,CACT1D,MAAO,QAIT8D,UAAW,CACT/D,QAAS,UACTyH,YAAa,EACbC,YAAa,EACb,kBAAmB,CACjBA,YAAa,IAKjBlE,QAAS,CACPxD,QAAS,UACTyH,aAAc,EACdC,WAAY,EACZ,kBAAmB,CACjBD,aAAc,IAKlBE,cAAe,CACb,oBAAqB,CACnBX,SAAU,KAKdY,eAAgB,CACd,oBAAqB,CACnBZ,SAAU,KAKda,cAAe,CACb,oBAAqB,CACnBb,SAAU,KAIjB,GAkJiC,CAChC3L,KAAM,aADR,CAEGwH,sLClbCiF,EACAC,+GAqBJ,IAAMC,EAAmB,IAAIC,QACvBC,EAAqB,IAAID,QACzBE,EAA2B,IAAIF,QAC/BG,EAAiB,IAAIH,QACrBI,EAAwB,IAAIJ,QA0DlC,IAAIK,EAAgB,CAChBC,IADgB,SACZC,EAAQhL,EAAMiL,GACd,GAAID,aAAkBE,eAAgB,CAElC,GAAa,SAATlL,EACA,OAAO0K,EAAmBK,IAAIC,GAElC,GAAa,qBAAThL,EACA,OAAOgL,EAAOG,kBAAoBR,EAAyBI,IAAIC,GAGnE,GAAa,UAAThL,EACA,OAAOiL,EAASE,iBAAiB,QAC3BlI,EACAgI,EAASG,YAAYH,EAASE,iBAAiB,GAE5D,CAED,OAAOE,EAAKL,EAAOhL,GACtB,EACDsL,IApBgB,SAoBZN,EAAQhL,EAAM3D,GAEd,OADA2O,EAAOhL,GAAQ3D,GACR,CACV,EACDkP,IAxBgB,SAwBZP,EAAQhL,GACR,OAAIgL,aAAkBE,iBACR,SAATlL,GAA4B,UAATA,IAGjBA,KAAQgL,CAClB,GAKL,SAASQ,EAAaC,GAIlB,OAAIA,IAASC,YAAY1N,UAAU2N,aAC7B,qBAAsBT,eAAelN,WA7GnCuM,IACHA,EAAuB,CACpBqB,UAAU5N,UAAU6N,QACpBD,UAAU5N,UAAU8N,SACpBF,UAAU5N,UAAU+N,sBAqHEzM,SAASmM,GAC5B,WAAmB,2BAANO,EAAM,yBAANA,EAAM,gBAItB,OADAP,EAAKQ,MAAMC,EAAOhW,MAAO8V,GAClBX,EAAKb,EAAiBO,IAAI7U,MACpC,EAEE,WAAmB,2BAAN8V,EAAM,yBAANA,EAAM,gBAGtB,OAAOX,EAAKI,EAAKQ,MAAMC,EAAOhW,MAAO8V,GACxC,EAvBU,SAAUG,GAAqB,2BAANH,EAAM,iCAANA,EAAM,kBAClC,IAAMI,EAAKX,EAAKY,KAAL,MAAAZ,EAAI,CAAMS,EAAOhW,MAAOiW,GAApB,OAAmCH,IAElD,OADArB,EAAyBW,IAAIc,EAAID,EAAWG,KAAOH,EAAWG,OAAS,CAACH,IACjEd,EAAKe,EACf,CAoBR,CACD,SAASG,EAAuBlQ,GAC5B,MAAqB,oBAAVA,EACAmP,EAAanP,IAGpBA,aAAiB6O,gBAhGzB,SAAwCkB,GAEpC,IAAI1B,EAAmBa,IAAIa,GAA3B,CAEA,IAAMI,EAAO,IAAInT,SAAQ,SAACC,EAASC,GAC/B,IAAMkT,EAAW,WACbL,EAAGM,oBAAoB,WAAYC,GACnCP,EAAGM,oBAAoB,QAASzT,GAChCmT,EAAGM,oBAAoB,QAASzT,EACnC,EACK0T,EAAW,WACbrT,IACAmT,GACH,EACKxT,EAAQ,WACVM,EAAO6S,EAAGnT,OAAS,IAAI2T,aAAa,aAAc,eAClDH,GACH,EACDL,EAAGS,iBAAiB,WAAYF,GAChCP,EAAGS,iBAAiB,QAAS5T,GAC7BmT,EAAGS,iBAAiB,QAAS5T,EAChC,IAEDyR,EAAmBY,IAAIc,EAAII,EApBjB,CAqBb,CAyEOM,CAA+BzQ,GA9JhB0Q,EA+JD1Q,GAzJViO,IACHA,EAAoB,CACjBoB,YACAsB,eACAC,SACArB,UACAV,kBAZiDgC,MAAK,SAACzX,GAAD,OAAOsX,aAAkBtX,CAAzB,IAgKnD,IAAI0X,MAAM9Q,EAAOyO,GAErBzO,GAlKW,IAAC0Q,CAmKtB,CACD,SAAS1B,EAAKhP,GAGV,GAAIA,aAAiB+Q,WACjB,OA3IR,SAA0B1T,GACtB,IAAMyC,EAAU,IAAI9C,SAAQ,SAACC,EAASC,GAClC,IAAMkT,EAAW,WACb/S,EAAQgT,oBAAoB,UAAWW,GACvC3T,EAAQgT,oBAAoB,QAASzT,EACxC,EACKoU,EAAU,WACZ/T,EAAQ+R,EAAK3R,EAAQI,SACrB2S,GACH,EACKxT,EAAQ,WACVM,EAAOG,EAAQT,OACfwT,GACH,EACD/S,EAAQmT,iBAAiB,UAAWQ,GACpC3T,EAAQmT,iBAAiB,QAAS5T,EACrC,IAcD,OAbAkD,EACKmR,MAAK,SAACjR,GAGHA,aAAiBuP,WACjBpB,EAAiBc,IAAIjP,EAAO3C,EAGnC,IACI4C,OAAM,WAAS,IAGpBuO,EAAsBS,IAAInP,EAASzC,GAC5ByC,CACV,CA4GcoR,CAAiBlR,GAG5B,GAAIuO,EAAeW,IAAIlP,GACnB,OAAOuO,EAAeG,IAAI1O,GAC9B,IAAMmR,EAAWjB,EAAuBlQ,GAOxC,OAJImR,IAAanR,IACbuO,EAAeU,IAAIjP,EAAOmR,GAC1B3C,EAAsBS,IAAIkC,EAAUnR,IAEjCmR,CACV,CACD,IAAMtB,EAAS,SAAC7P,GAAD,OAAWwO,EAAsBE,IAAI1O,EAArC,EC5If,QAAMoR,EAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,EAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,EAAgB,IAAIC,IAC1B,SAASC,EAAU7C,EAAQhL,GACvB,GAAMgL,aAAkBU,eAClB1L,KAAQgL,IACM,kBAAThL,EAFX,CAKA,GAAI2N,EAAc5C,IAAI/K,GAClB,OAAO2N,EAAc5C,IAAI/K,GAC7B,IAAM8N,EAAiB9N,EAAKnH,QAAQ,aAAc,IAC5CkV,EAAW/N,IAAS8N,EACpBE,EAAUN,EAAapO,SAASwO,GACtC,GAEEA,KAAmBC,EAAWd,SAAWD,gBAAgBhP,YACrDgQ,GAAWP,EAAYnO,SAASwO,IAHtC,CAMA,IAAMG,EAAM,iCAAG,WAAgBC,GAAhB,+FAEL9B,EAAKlW,KAAKyV,YAAYuC,EAAWF,EAAU,YAAc,YAC3DhD,EAASoB,EAAG+B,MAHL,WAA8BnC,EAA9B,iCAA8BA,EAA9B,iBAIP+B,IACA/C,EAASA,EAAOoD,MAAMpC,EAAKqC,UALpB,SAWGhV,QAAQiV,IAAI,EACtB,EAAAtD,GAAO8C,GAAP,QAA0B9B,GAC1BgC,GAAW5B,EAAGI,OAbP,uCAcP,IAdO,gDAAH,sDAiBZ,OADAmB,EAAcrC,IAAItL,EAAMiO,GACjBA,CAlBN,CAXA,CA8BJ,CDuCGnD,ECtCS,SAACyD,GAAD,eAAC,UACPA,GADM,IAETxD,IAAK,SAACC,EAAQhL,EAAMiL,GAAf,OAA4B4C,EAAU7C,EAAQhL,IAASuO,EAASxD,IAAIC,EAAQhL,EAAMiL,EAAlF,EACLM,IAAK,SAACP,EAAQhL,GAAT,QAAoB6N,EAAU7C,EAAQhL,IAASuO,EAAShD,IAAIP,EAAQhL,EAApE,GAHI,CDsCO5D,CAAS0O,OE9FhB0D,EAAAA,WACX,WAA6BC,IAA6B,eAA7B,KAASA,UAATA,CAAiC,qDAG9D,WAIE,OAHkBvY,KAAKuY,UAAUC,eAI9BC,KAAI,SAAAC,GACH,GAmBR,SAAkCA,GAChC,IAAM1K,EAAY0K,EAASC,eAC3B,MAAsB,aAAf,OAAA3K,QAAS,IAATA,OAAS,EAATA,EAAWzG,KACpB,CAtBYqR,CAAyBF,GAAW,CACtC,IAAMxQ,EAAUwQ,EAASG,eACzB,gBAAU3Q,EAAQ4Q,QAAlB,YAA6B5Q,EAAQ6Q,QACtC,CACC,OAAO,IAEV,IACAC,QAAO,SAAAC,GAAS,OAAIA,CAAJ,IAChB1X,KAAK,IACT,OAnBU+W,mCCNAY,EAAS,IAAIC,EAAAA,GAAO,iBC6BpBC,EAAqB,YAErBC,GAAmB,eAC7BC,EAAU,cADmB,gCAEb,qBAFa,+BAGb,mBAHa,sCAIP,0BAJO,+BAKd,mBALc,sCAMR,0BANQ,0BAOlB,cAPkB,iCAQZ,qBARY,8BASd,cATc,qCAUR,qBAVQ,+BAWb,YAXa,sCAYP,mBAZO,mCAaT,aAbS,0CAcH,oBAdG,+BAeb,aAfa,sCAgBP,oBAhBO,iCAiBX,cAjBW,wCAkBL,qBAlBK,mCAmBV,YAnBU,0CAoBJ,mBApBI,6BAqBf,aArBe,oCAsBT,oBAtBS,+BAuBb,aAvBa,sCAwBP,oBAxBO,SAyB9B,UAAW,YAzBmB,oBA0Bf,eA1Be,GCxBnBC,EAAQ,IAAI7B,IAQZ8B,EAAc,IAAI9B,IAOf,SAAA+B,EACdC,EACA1L,GAEA,IACG0L,EAAwBnB,UAAUoB,aAAa3L,EAMjD,CALC,MAAOnL,GACPqW,EAAOU,MAAP,oBACe5L,EAAUrG,KADzB,gDACqE+R,EAAI/R,MACvE9E,EAEH,CACF,CAoBK,SAAUgX,EACd7L,GAEA,IAAM8L,EAAgB9L,EAAUrG,KAChC,GAAI6R,EAAYnE,IAAIyE,GAKlB,OAJAZ,EAAOU,MAAP,6DACwDE,EADxD,OAIO,EAGTN,EAAYpE,IAAI0E,EAAe9L,GAXR,gBAcLuL,EAAMQ,UAdD,IAcvB,2BAAkC,CAChCN,EADgC,QACMzL,EACvC,CAhBsB,+BAkBvB,OAAO,CACR,CAWe,SAAAgM,EACdN,EACA/R,GAEA,IAAMsS,EAAuBP,EAAwBnB,UAClD2B,YAAY,aACZrB,aAAa,CAAEsB,UAAU,IAI5B,OAHIF,GACGA,EAAoBG,mBAEnBV,EAAwBnB,UAAU2B,YAAYvS,EACvD,CClFD,IAAM0S,GAAM,eACV,SACE,sFAFQ,SAIV,eAAyB,kCAJf,SAKV,gBACE,oFANQ,SAOV,cAAwB,oDAPd,SAQV,aACE,4EATQ,SAUV,uBACE,+EAXQ,SAaV,uBACE,0DAdQ,SAeV,WACE,kFAhBQ,SAiBV,UACE,uFAlBQ,SAmBV,UACE,qFApBQ,SAqBV,aACE,uFAtBQ,GAqCCC,EAAgB,IAAItS,EAAAA,GAC/B,MACA,WACAqS,GC5CWE,EAAAA,WAcX,WACE7O,EACA3F,EACAwS,GAA6B,2BANvB,KAAUiC,YAAG,EAQnBxa,KAAKya,SAAgB7S,OAAAA,OAAAA,CAAAA,EAAAA,GACrB5H,KAAK0a,QAAe9S,OAAAA,OAAAA,CAAAA,EAAAA,GACpB5H,KAAK2a,MAAQ5U,EAAO4B,KACpB3H,KAAK4a,gCACH7U,EAAO8U,+BACT7a,KAAK8a,WAAavC,EAClBvY,KAAKuY,UAAUoB,aACb,IAAI9M,EAAAA,GAAU,OAAO,kBAAM,CAAN,GAAU,UAElC,4DAED,WAEE,OADA7M,KAAK+a,iBACE/a,KAAK4a,+BACb,MAED,SAAmCI,GACjChb,KAAK+a,iBACL/a,KAAK4a,gCAAkCI,CACxC,mBAED,WAEE,OADAhb,KAAK+a,iBACE/a,KAAK2a,KACb,sBAED,WAEE,OADA3a,KAAK+a,iBACE/a,KAAKya,QACb,qBAED,WAEE,OADAza,KAAK+a,iBACE/a,KAAK0a,OACb,wBAED,WACE,OAAO1a,KAAK8a,UACb,wBAED,WACE,OAAO9a,KAAKwa,UACb,MAED,SAAcQ,GACZhb,KAAKwa,WAAaQ,CACnB,+BAMO,WACN,GAAIhb,KAAKib,UACP,MAAMX,EAAcrS,OAAM,cAAuB,CAAEqR,QAAStZ,KAAK2a,OAEpE,OA3EUJ,GCqBAW,oBAoEGC,EACdV,GACc,IAAdW,EAAc,uDAAF,CAAC,EAET1P,EAAU+O,EAEd,GAAyB,kBAAdW,EAAwB,CACjC,IAAMzT,EAAOyT,EACbA,EAAY,CAAEzT,KAAAA,EACf,CAED,IAAM5B,EAAM,eACV4B,KAAMyR,EACNyB,gCAAgC,GAC7BO,GAECzT,EAAO5B,EAAO4B,KAEpB,GAAoB,kBAATA,IAAsBA,EAC/B,MAAM2S,EAAcrS,OAA8B,gBAChDqR,QAASxX,OAAO6F,KAMpB,GAFA+D,IAAAA,GAAY5F,EAAAA,EAAAA,QAEP4F,EACH,MAAM4O,EAAcrS,OAAM,cAG5B,IAAMoT,EAAc9B,EAAM1E,IAAIlN,GAC9B,GAAI0T,EAAa,CAEf,IACExS,EAAAA,EAAAA,IAAU6C,EAAS2P,EAAY3P,WAC/B7C,EAAAA,EAAAA,IAAU9C,EAAQsV,EAAYtV,QAE9B,OAAOsV,EAEP,MAAMf,EAAcrS,OAA+B,iBAAEqR,QAAS3R,GAEjE,CAED,IAzCc,EAyCR4Q,EAAY,IAAI+C,EAAAA,GAAmB3T,GAzC3B,UA0CU6R,EAAYO,UA1CtB,IA0Cd,2BAA8C,KAAnC/L,EAAmC,QAC5CuK,EAAUoB,aAAa3L,EACxB,CA5Ca,+BA8Cd,IAAMuN,EAAS,IAAIhB,EAAgB7O,EAAS3F,EAAQwS,GAIpD,OAFAgB,EAAMnE,IAAIzN,EAAM4T,GAETA,CACR,CA+Be,SAAAC,IAAwC,IAAjC7T,EAAiC,uDAAlByR,EAC9BM,EAAMH,EAAM1E,IAAIlN,GACtB,IAAK+R,GAAO/R,IAASyR,EACnB,OAAO+B,IAET,IAAKzB,EACH,MAAMY,EAAcrS,OAAwB,UAAEqR,QAAS3R,IAGzD,OAAO+R,CACR,UAgDe+B,EACdC,EACA3C,EACAvI,SAIIsI,EAAmD,QAAzC,EAAAO,EAAoBqC,UAAqBzX,IAAAA,EAAAA,EAAAyX,EACnDlL,IACFsI,GAAW,IAAJ,OAAQtI,IAEjB,IAAMmL,EAAkB7C,EAAQ/T,MAAM,SAChC6W,EAAkB7C,EAAQhU,MAAM,SACtC,GAAI4W,GAAmBC,EAAiB,CACtC,IAAMC,EAAU,CAAC,+BAAD,OACiB/C,EADjB,2BAC2CC,EAD3C,OAiBhB,OAdI4C,GACFE,EAAQva,KAAR,wBACmBwX,EADnB,sDAIE6C,GAAmBC,GACrBC,EAAQva,KAAK,OAEXsa,GACFC,EAAQva,KAAR,wBACmByX,EADnB,2DAIFG,EAAO4C,KAAKD,EAAQta,KAAK,KAE1B,CACDsY,EACE,IAAIhN,EAAAA,GAAJ,UACKiM,EADL,aAEE,iBAAO,CAAEA,QAAAA,EAASC,QAAAA,EAAlB,GAA4B,WAIjC,CCpRD,IAEMgD,EAAa,2BASfC,EAAiD,KACrD,SAASC,IAoBP,OAnBKD,IACHA,ER5BJ,SAAgBrU,EAAMoR,GAA0D,6DAAJ,CAAC,EAA5CmD,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,WACnD7Y,EAAUP,UAAUS,KAAKiE,EAAMoR,GAC/BuD,EAAcnH,EAAK3R,GAgBzB,OAfI2Y,GACA3Y,EAAQmT,iBAAiB,iBAAiB,SAAC4F,GACvCJ,EAAQhH,EAAK3R,EAAQI,QAAS2Y,EAAMC,WAAYD,EAAME,WAAYtH,EAAK3R,EAAQiS,aAClF,IAEDyG,GACA1Y,EAAQmT,iBAAiB,WAAW,kBAAMuF,GAAN,IACxCI,EACKlF,MAAK,SAACsF,GACHL,GACAK,EAAG/F,iBAAiB,SAAS,kBAAM0F,GAAN,IAC7BD,GACAM,EAAG/F,iBAAiB,iBAAiB,kBAAMyF,GAAN,GAC5C,IACIhW,OAAM,WAAS,IACbkW,CACV,CQSeK,CAdA,8BACG,EAagC,CAC7CR,QAAS,SAACO,EAAIF,GAMZ,GACO,IADCA,EAEJE,EAAGE,kBAAkBb,EAE1B,IACA3V,OAAM,SAAAvD,GACP,MAAMyX,EAAcrS,OAA0B,YAC5C4U,qBAAsBha,EAAEqB,SAE3B,KAEI8X,CACR,UAEqBc,EAA4B,2EAA3C,WACLpD,GADK,gGAIcuC,IAJd,cAIGS,EAJH,yBAKIA,EACJjH,YAAYsG,GACZ7G,YAAY6G,GACZlH,IAAIkI,GAAWrD,KARf,gCAUC,gBAAalS,EAAAA,GACf0R,EAAO4C,KAAK,KAAE5X,UAER8Y,EAAc1C,EAAcrS,OAAyB,WACzD4U,qBAAkC,OAAX,gCAAa3Y,UAEtCgV,EAAO4C,KAAKkB,EAAY9Y,UAhBvB,yFAqBe+Y,GAA2B,EAA3BA,2EAAf,WACLvD,EACAwD,GAFK,oGAKcjB,IALd,cAKGS,EALH,OAMGxG,EAAKwG,EAAGjH,YAAYsG,EAAY,aAChC7G,EAAcgB,EAAGhB,YAAY6G,GAPhC,SAQG7G,EAAYiI,IAAID,EAAiBH,GAAWrD,IAR/C,gCASIxD,EAAGI,MATP,kCAWC,gBAAa9O,EAAAA,GACf0R,EAAO4C,KAAK,KAAE5X,UAER8Y,EAAc1C,EAAcrS,OAA2B,WAC3D4U,qBAAkC,OAAX,gCAAa3Y,UAEtCgV,EAAO4C,KAAKkB,EAAY9Y,UAjBvB,iFAsBP,SAAS6Y,GAAWrD,GAClB,gBAAUA,EAAI/R,KAAd,YAAsB+R,EAAIhO,QAAQ0R,MACpC,CCpEA,IAIaC,GAAAA,WAyBX,WAA6B9E,GAA6B,2BAA7B,KAASA,UAATA,EAT7B,KAAgB+E,iBAAiC,KAU/C,IAAM5D,EAAM1Z,KAAKuY,UAAU2B,YAAY,OAAOrB,eAC9C7Y,KAAKud,SAAW,IAAIC,GAAqB9D,GACzC1Z,KAAKyd,wBAA0Bzd,KAAKud,SAASG,OAAOtG,MAAK,SAAAxT,GAEvD,OADA,EAAK0Z,iBAAmB1Z,EACjBA,CACR,GACF,iFASD,yFACQ+Z,EAAiB3d,KAAKuY,UACzB2B,YAAY,mBACZrB,eAIG+E,EAAQD,EAAeE,wBACvBC,EAAOC,KACiB,OAA1B/d,KAAKsd,iBATX,gCAUkCtd,KAAKyd,wBAVvC,OAUIzd,KAAKsd,iBAVT,iBAeItd,KAAKsd,iBAAiBU,wBAA0BF,IAChD9d,KAAKsd,iBAAiBW,WAAWjH,MAC/B,SAAAkH,GAAmB,OAAIA,EAAoBJ,OAASA,CAAjC,IAjBzB,mDAuBI9d,KAAKsd,iBAAiBW,WAAW3c,KAAK,CAAEwc,KAAAA,EAAMF,MAAAA,IAvBlD,eA0BE5d,KAAKsd,iBAAiBW,WAAaje,KAAKsd,iBAAiBW,WAAWjF,QAClE,SAAAkF,GACE,IAAMC,EAAc,IAAIC,KAAKF,EAAoBJ,MAAMO,UAEvD,OADYD,KAAKE,MACJH,GAzEyB,MA0EvC,IA/BL,kBAiCSne,KAAKud,SAASgB,UAAUve,KAAKsd,mBAjCtC,yKA2CA,6FACgC,OAA1Btd,KAAKsd,iBADX,gCAEUtd,KAAKyd,wBAFf,UAM8B,OAA1Bzd,KAAKsd,kBACuC,IAA5Ctd,KAAKsd,iBAAiBW,WAAW3e,OAPrC,yCASW,IATX,UAWQwe,EAAOC,KAXf,EAa8CS,GAC1Cxe,KAAKsd,iBAAiBW,YADhBQ,EAbV,EAaUA,iBAAkBC,EAb5B,EAa4BA,cAGpBC,GAAenc,EAAAA,EAAAA,GACnBmC,KAAK0C,UAAU,CAAE0R,QAAS,EAAGkF,WAAYQ,KAG3Cze,KAAKsd,iBAAiBU,sBAAwBF,IAC1CY,EAAcpf,OAAS,GArB7B,wBAuBIU,KAAKsd,iBAAiBW,WAAaS,EAvBvC,UA2BU1e,KAAKud,SAASgB,UAAUve,KAAKsd,kBA3BvC,gCA6BItd,KAAKsd,iBAAiBW,WAAa,GAE9Bje,KAAKud,SAASgB,UAAUve,KAAKsd,kBA/BtC,iCAiCSqB,GAjCT,2GApFWtB,GAyHb,SAASU,KAGP,OAFc,IAAIK,MAELQ,cAAc/Y,UAAU,EAAG,GACzC,UAEe2Y,GACdK,GAC0B,MAA1BC,EAA0B,uDArIH,KA4IjBL,EAA4C,GAE9CC,EAAgBG,EAAgBE,QATV,UAUQF,GAVR,yBAUfX,EAVe,QAYlBc,EAAiBP,EAAiBQ,MACtC,SAAAC,GAAE,OAAIA,EAAGtB,QAAUM,EAAoBN,KAArC,IAEJ,GAAKoB,GAgBH,GAHAA,EAAeG,MAAM7d,KAAK4c,EAAoBJ,MAG1CsB,GAAWX,GAAoBK,EAEjC,OADAE,EAAeG,MAAME,MACrB,aAZF,GAJAZ,EAAiBnd,KAAK,CACpBsc,MAAOM,EAAoBN,MAC3BuB,MAAO,CAACjB,EAAoBJ,QAE1BsB,GAAWX,GAAoBK,EAIjC,OADAL,EAAiBY,MACjB,QAaJX,EAAgBA,EAAcK,MAAM,EAtCZ,EAU1B,2BAAmD,0BAuB7C,KAML,CAvCyB,+BAwC1B,MAAO,CACLN,iBAAAA,EACAC,cAAAA,EAEH,KC7LsClO,GD+L1BgN,GAAAA,WAEX,WAAmB9D,IAAgB,eAAhB,KAAGA,IAAHA,EACjB1Z,KAAKsf,wBAA0Btf,KAAKuf,8BACrC,6FACD,gFACOvc,EAAAA,EAAAA,MADP,0CAEW,GAFX,iCAIWE,EAAAA,EAAAA,MACJkU,MAAK,kBAAM,CAAN,IACLhR,OAAM,kBAAM,CAAN,KANb,oJAYA,kGACgCpG,KAAKsf,wBADrC,0DAGW,CAAErB,WAAY,KAHzB,uBAKqCnB,EAA4B9c,KAAK0Z,KALtE,cAKU8F,EALV,yBAMWA,GAAsB,CAAEvB,WAAY,KAN/C,+JAUA,WAAgBwB,GAAhB,uFACgCzf,KAAKsf,wBADrC,kFAK2Ctf,KAAK0d,OALhD,cAKUgC,EALV,yBAMWzC,GAA2Bjd,KAAK0Z,IAAK,CAC1CsE,sBAEE,QADA,EAAAyB,EAAiBzB,6BACjB/Z,IAAAA,EAAAA,EAAAyb,EAAyB1B,sBAC3BC,WAAYwB,EAAiBxB,cAVnC,0JAeA,WAAUwB,GAAV,uFACgCzf,KAAKsf,wBADrC,kFAK2Ctf,KAAK0d,OALhD,cAKUgC,EALV,yBAMWzC,GAA2Bjd,KAAK0Z,IAAK,CAC1CsE,sBAEE,QADA,EAAAyB,EAAiBzB,6BACjB/Z,IAAAA,EAAAA,EAAAyb,EAAyB1B,sBAC3BC,WAAY,GAAF,eACLyB,EAAyBzB,aADpB,OAELwB,EAAiBxB,gBAZ5B,4GA1CWT,GAkEP,SAAU4B,GAAWP,GAEzB,OAAOrc,EAAAA,EAAAA,GAELmC,KAAK0C,UAAU,CAAE0R,QAAS,EAAGkF,WAAYY,KACzCvf,MACJ,CCvQuCkR,GCMhB,GDLrBqJ,EACE,IAAIhN,EAAAA,GACF,mBACA,SAAA0L,GAAS,OAAI,IAAID,EAA0BC,EAAlC,GAA4C,YAIzDsB,EACE,IAAIhN,EAAAA,GACF,aACA,SAAA0L,GAAS,OAAI,IAAI8E,GAAqB9E,EAA7B,GAAuC,YAMpDkD,EAAgB9T,EAAMoR,EAASvI,IAE/BiL,EAAgB9T,EAAMoR,EAAS,WAE/B0C,EAAgB,UAAW,sKEjBhB5O,EAAAA,WAiBX,WACWlF,EACAgY,EACApY,IAAmB,eAFnB,KAAII,KAAJA,EACA,KAAegY,gBAAfA,EACA,KAAIpY,KAAJA,EAnBX,KAAiBqY,mBAAG,EAIpB,KAAYC,aAAe,CAAC,EAE5B,KAAAC,kBAA2C,OAE3C,KAAiBC,kBAAwC,IAYrD,oDAEJ,SAAqBC,GAEnB,OADAhgB,KAAK8f,kBAAoBE,EAClBhgB,IACR,qCAED,SAAqB4f,GAEnB,OADA5f,KAAK4f,kBAAoBA,EAClB5f,IACR,gCAED,SAAgBmK,GAEd,OADAnK,KAAK6f,aAAe1V,EACbnK,IACR,2CAED,SAA2BkG,GAEzB,OADAlG,KAAK+f,kBAAoB7Z,EAClBlG,IACR,OAzCU6M,GCXAuM,EAAqB,YCgBrB6G,EAAAA,WAWX,WACmBtY,EACA4Q,IAA6B,eAD7B,KAAI5Q,KAAJA,EACA,KAAS4Q,UAATA,EAZX,KAASvK,UAAwB,KACxB,KAAAkS,UAAgD,IAAIxI,IACpD,KAAAyI,kBAGb,IAAIzI,IACS,KAAA0I,iBACf,IAAI1I,IACE,KAAA2I,gBAAuD,IAAI3I,GAK/D,mCAMJ,SAAI4I,GAEF,IAAMC,EAAuBvgB,KAAKwgB,4BAA4BF,GAE9D,IAAKtgB,KAAKmgB,kBAAkB9K,IAAIkL,GAAuB,CACrD,IAAME,EAAW,IAAIza,EAAAA,GAGrB,GAFAhG,KAAKmgB,kBAAkB/K,IAAImL,EAAsBE,GAG/CzgB,KAAK0gB,cAAcH,IACnBvgB,KAAK2gB,uBAGL,IACE,IAAMC,EAAW5gB,KAAK6gB,uBAAuB,CAC3CC,mBAAoBP,IAElBK,GACFH,EAASrd,QAAQwd,EAKpB,CAHC,MAAO/d,GAGR,CAEJ,CAED,OAAO7C,KAAKmgB,kBAAkBtL,IAAI0L,GAAuBta,OAC1D,6BAkBD,SAAayF,SAKL6U,EAAuBvgB,KAAKwgB,4BAChC,OAAA9U,QAAA,IAAAA,OAAA,EAAAA,EAAS4U,YAELnG,EAAgC,QAArB,SAAAzO,QAAA,IAAAA,OAAA,EAAAA,EAASyO,gBAAYlW,IAAAA,GAAAA,EAEtC,IACEjE,KAAK0gB,cAAcH,KACnBvgB,KAAK2gB,uBAaA,CAEL,GAAIxG,EACF,OAAO,KAEP,MAAM1Z,MAAM,WAAD,OAAYT,KAAK2H,KAAjB,qBAEd,CAlBC,IACE,OAAO3H,KAAK6gB,uBAAuB,CACjCC,mBAAoBP,GAQvB,CANC,MAAO1d,GACP,GAAIsX,EACF,OAAO,KAEP,MAAMtX,CAET,CASJ,6BAED,WACE,OAAO7C,KAAKgO,SACb,6BAED,SAAaA,GACX,GAAIA,EAAUrG,OAAS3H,KAAK2H,KAC1B,MAAMlH,MAAM,yBAAD,OACgBuN,EAAUrG,KAD1B,yBAC+C3H,KAAK2H,KADpD,MAKb,GAAI3H,KAAKgO,UACP,MAAMvN,MAAM,iBAAD,OAAkBT,KAAK2H,KAAvB,+BAMb,GAHA3H,KAAKgO,UAAYA,EAGZhO,KAAK2gB,uBAAV,CAKA,GA0NJ,SAA0C3S,GACxC,MAAkC,UAA3BA,EAAU8R,iBACnB,CA5NQiB,CAAiB/S,GACnB,IACEhO,KAAK6gB,uBAAuB,CAAEC,mBAAoB1H,GAMnD,CALC,MAAOvW,GAKR,CA3B+B,gBAoC7B7C,KAAKmgB,kBAAkBa,WApCM,IAiClC,2BAGuC,0BAFrCF,EAEqC,KADrCG,EACqC,KAC/BV,EACJvgB,KAAKwgB,4BAA4BM,GAEnC,IAEE,IAAMF,EAAW5gB,KAAK6gB,uBAAuB,CAC3CC,mBAAoBP,IAEtBU,EAAiB7d,QAAQwd,EAI1B,CAHC,MAAO/d,GAGR,CACF,CAlDiC,+BAgBjC,CAmCF,8BAED,WAAqD,IAAvCyd,EAAuC,uDAAlBlH,EACjCpZ,KAAKmgB,kBAAkBe,OAAOZ,GAC9BtgB,KAAKogB,iBAAiBc,OAAOZ,GAC7BtgB,KAAKkgB,UAAUgB,OAAOZ,EACvB,wDAID,yFACQa,EAAW5gB,MAAM6gB,KAAKphB,KAAKkgB,UAAUnG,UAD7C,SAGQ5W,QAAQiV,IAAR,kBACD+I,EACAnI,QAAO,SAAA9Q,GAAO,MAAI,aAAcA,CAAlB,IAEduQ,KAAI,SAAAvQ,GAAO,OAAKA,EAAgBmZ,SAAUH,QAA/B,MAJV,OAKDC,EACAnI,QAAO,SAAA9Q,GAAO,MAAI,YAAaA,CAAjB,IAEduQ,KAAI,SAAAvQ,GAAO,OAAKA,EAAgBoZ,SAArB,OAXlB,kIAeA,WACE,OAAyB,MAAlBthB,KAAKgO,SACb,8BAED,WAAqD,IAAvCsS,EAAuC,uDAAlBlH,EACjC,OAAOpZ,KAAKkgB,UAAU7K,IAAIiL,EAC3B,2BAED,WAAkD,IAAvCA,EAAuC,uDAAlBlH,EAC9B,OAAOpZ,KAAKogB,iBAAiBvL,IAAIyL,IAAe,CAAC,CAClD,2BAED,WAAuC,IAA5BiB,EAA4B,uDAAF,CAAC,EACpC,EAAyBA,EAAjB7V,QAAAA,OAAR,MAAkB,CAAC,EAAnB,EACM6U,EAAuBvgB,KAAKwgB,4BAChCe,EAAKT,oBAEP,GAAI9gB,KAAK0gB,cAAcH,GACrB,MAAM9f,MAAM,GAAD,OACNT,KAAK2H,KADC,YACO4Y,EADP,mCAKb,IAAKvgB,KAAKwhB,iBACR,MAAM/gB,MAAM,aAAD,OAAcT,KAAK2H,KAAnB,iCAGb,IAfqC,EAe/BiZ,EAAW5gB,KAAK6gB,uBAAuB,CAC3CC,mBAAoBP,EACpB7U,QAAAA,IAjBmC,UAwBhC1L,KAAKmgB,kBAAkBa,WAxBS,IAqBrC,2BAGuC,0BAFrCF,EAEqC,KADrCG,EACqC,KAC/BQ,EACJzhB,KAAKwgB,4BAA4BM,GAC/BP,IAAyBkB,GAC3BR,EAAiB7d,QAAQwd,EAE5B,CA9BoC,+BAgCrC,OAAOA,CACR,uBAUD,SAAO1a,EAA6Boa,SAC5BC,EAAuBvgB,KAAKwgB,4BAA4BF,GACxDoB,EAC0C,QAA9C,EAAA1hB,KAAKqgB,gBAAgBxL,IAAI0L,UAAqBtc,IAAAA,EAAAA,EAC9C,IAAI0d,IACND,EAAkBE,IAAI1b,GACtBlG,KAAKqgB,gBAAgBjL,IAAImL,EAAsBmB,GAE/C,IAAMG,EAAmB7hB,KAAKkgB,UAAUrL,IAAI0L,GAK5C,OAJIsB,GACF3b,EAAS2b,EAAkBtB,GAGtB,WACLmB,EAAkBR,OAAOhb,EAC1B,CACF,sCAMO,SACN0a,EACAN,GAEA,IAAMwB,EAAY9hB,KAAKqgB,gBAAgBxL,IAAIyL,GAC3C,GAAKwB,EAAL,CAHkB,gBAMKA,GANL,IAMlB,2BAAkC,KAAvB5b,EAAuB,QAChC,IACEA,EAAS0a,EAAUN,EAGpB,CAFC,MAAMrc,GAEP,CACF,CAZiB,+BAKjB,CAQF,uCAEO,YAMP,IAyDoCqc,EA9DnCQ,EAKD,EALCA,mBAKD,IAJCpV,QAAAA,OAID,MAJW,CAAC,EAIZ,EACKkV,EAAW5gB,KAAKkgB,UAAUrL,IAAIiM,GAClC,IAAKF,GAAY5gB,KAAKgO,YACpB4S,EAAW5gB,KAAKgO,UAAU2R,gBAAgB3f,KAAKuY,UAAW,CACxDuI,oBAqD+BR,EArDmBQ,EAsDjDR,IAAelH,OAAqBrM,EAAYuT,GArDjD5U,QAAAA,IAEF1L,KAAKkgB,UAAU9K,IAAI0L,EAAoBF,GACvC5gB,KAAKogB,iBAAiBhL,IAAI0L,EAAoBpV,GAO9C1L,KAAK+hB,sBAAsBnB,EAAUE,GAOjC9gB,KAAKgO,UAAU+R,mBACjB,IACE/f,KAAKgO,UAAU+R,kBACb/f,KAAKuY,UACLuI,EACAF,EAIH,CAFC,MAAM3c,GAEP,CAIL,OAAO2c,GAAY,IACpB,4CAEO,WACiC,IAAvCN,EAAuC,uDAAlBlH,EAErB,OAAIpZ,KAAKgO,UACAhO,KAAKgO,UAAU4R,kBAAoBU,EAAalH,EAEhDkH,CAEV,qCAEO,WACN,QACItgB,KAAKgO,WACyB,aAAhChO,KAAKgO,UAAU8R,iBAElB,OA9UUG,OCTA3E,EAAAA,WAGX,WAA6B3T,IAAY,eAAZ,KAAIA,KAAJA,EAFZ,KAAAqa,UAAY,IAAItK,GAEY,4CAW7C,SAA6B1J,GAC3B,IAAM0K,EAAW1Y,KAAKka,YAAYlM,EAAUrG,MAC5C,GAAI+Q,EAAS8I,iBACX,MAAM,IAAI/gB,MAAJ,oBACSuN,EAAUrG,KADnB,6CAC4D3H,KAAK2H,OAIzE+Q,EAASuJ,aAAajU,EACvB,wCAED,SAAwCA,GACrBhO,KAAKka,YAAYlM,EAAUrG,MAC/B6Z,kBAEXxhB,KAAKgiB,UAAUd,OAAOlT,EAAUrG,MAGlC3H,KAAK2Z,aAAa3L,EACnB,4BASD,SAA4BrG,GAC1B,GAAI3H,KAAKgiB,UAAU3M,IAAI1N,GACrB,OAAO3H,KAAKgiB,UAAUnN,IAAIlN,GAI5B,IAAM+Q,EAAW,IAAIuH,EAAYtY,EAAM3H,MAGvC,OAFAA,KAAKgiB,UAAU5M,IAAIzN,EAAM+Q,GAElBA,CACR,6BAED,WACE,OAAOnY,MAAM6gB,KAAKphB,KAAKgiB,UAAUjI,SAClC,OAxDUuB,wFC8BD4G,gCAbChC,EAAsB,IAanC,SAAYgC,GACVA,EAAAA,EAAAA,MAAAA,GAAAA,QACAA,EAAAA,EAAAA,QAAAA,GAAAA,UACAA,EAAAA,EAAAA,KAAAA,GAAAA,OACAA,EAAAA,EAAAA,KAAAA,GAAAA,OACAA,EAAAA,EAAAA,MAAAA,GAAAA,QACAA,EAAAA,EAAAA,OAAAA,GAAAA,QANF,EAAYA,IAAAA,EAOX,KAED,IAAMC,EAA2D,CAC/D,MAASD,EAASE,MAClB,QAAWF,EAASG,QACpB,KAAQH,EAASI,KACjB,KAAQJ,EAASK,KACjB,MAASL,EAASM,MAClB,OAAUN,EAASO,QAMfC,EAA4BR,EAASI,KAmBrCK,GAAa,eAChBT,EAASE,MAAQ,QADD,SAEhBF,EAASG,QAAU,QAFH,SAGhBH,EAASI,KAAO,SAHA,SAIhBJ,EAASK,KAAO,SAJA,SAKhBL,EAASM,MAAQ,SALD,GAabI,EAAgC,SAAChC,EAAUiC,GAC/C,KAAIA,EAAUjC,EAASkC,UAAvB,CAGA,IAAMxE,GAAM,IAAIF,MAAOQ,cACjB7G,EAAS4K,EAAcE,GAC7B,IAAI9K,EAMF,MAAM,IAAItX,MAAJ,qEAC0DoiB,EAD1D,MANI,6BAN+C/M,EAM/C,iCAN+CA,EAM/C,mBACV,EAAAhT,SAAQiV,GAAR,oBACMuG,EADN,cACesC,EAASjZ,KADxB,aAEKmO,GANN,CAaF,EAEYqD,EAAAA,WAOX,WAAmBxR,IAAY,eAAZ,KAAIA,KAAJA,EAUX,KAASob,UAAGL,EAsBZ,KAAWM,YAAeJ,EAc1B,KAAeK,gBAAsB,KA1C3C/C,EAAU5e,KAAKtB,KAChB,sCAOD,WACE,OAAOA,KAAK+iB,SACb,MAED,SAAa/H,GACX,KAAMA,KAAOkH,GACX,MAAM,IAAIgB,UAAJ,yBAAgClI,EAAhC,6BAERhb,KAAK+iB,UAAY/H,CAClB,4BAGD,SAAYA,GACVhb,KAAK+iB,UAA2B,kBAAR/H,EAAmBmH,EAAkBnH,GAAOA,CACrE,yBAOD,WACE,OAAOhb,KAAKgjB,WACb,MACD,SAAehI,GACb,GAAmB,oBAARA,EACT,MAAM,IAAIkI,UAAU,qDAEtBljB,KAAKgjB,YAAchI,CACpB,6BAMD,WACE,OAAOhb,KAAKijB,eACb,MACD,SAAmBjI,GACjBhb,KAAKijB,gBAAkBjI,CACxB,sBAMD,WAAwB,2BAAflF,EAAe,yBAAfA,EAAe,gBACtB9V,KAAKijB,iBAAmBjjB,KAAKijB,gBAAL,MAAAjjB,KAAA,CAAqBA,KAAMkiB,EAASE,OAApC,OAA8CtM,IACtE9V,KAAKgjB,YAAL,MAAAhjB,KAAA,CAAiBA,KAAMkiB,EAASE,OAAhC,OAA0CtM,GAC3C,oBACD,WAAsB,2BAAfA,EAAe,yBAAfA,EAAe,gBACpB9V,KAAKijB,iBACHjjB,KAAKijB,gBAAL,MAAAjjB,KAAA,CAAqBA,KAAMkiB,EAASG,SAApC,OAAgDvM,IAClD9V,KAAKgjB,YAAL,MAAAhjB,KAAA,CAAiBA,KAAMkiB,EAASG,SAAhC,OAA4CvM,GAC7C,qBACD,WAAuB,2BAAfA,EAAe,yBAAfA,EAAe,gBACrB9V,KAAKijB,iBAAmBjjB,KAAKijB,gBAAL,MAAAjjB,KAAA,CAAqBA,KAAMkiB,EAASI,MAApC,OAA6CxM,IACrE9V,KAAKgjB,YAAL,MAAAhjB,KAAA,CAAiBA,KAAMkiB,EAASI,MAAhC,OAAyCxM,GAC1C,qBACD,WAAuB,2BAAfA,EAAe,yBAAfA,EAAe,gBACrB9V,KAAKijB,iBAAmBjjB,KAAKijB,gBAAL,MAAAjjB,KAAA,CAAqBA,KAAMkiB,EAASK,MAApC,OAA6CzM,IACrE9V,KAAKgjB,YAAL,MAAAhjB,KAAA,CAAiBA,KAAMkiB,EAASK,MAAhC,OAAyCzM,GAC1C,sBACD,WAAwB,2BAAfA,EAAe,yBAAfA,EAAe,gBACtB9V,KAAKijB,iBAAmBjjB,KAAKijB,gBAAL,MAAAjjB,KAAA,CAAqBA,KAAMkiB,EAASM,OAApC,OAA8C1M,IACtE9V,KAAKgjB,YAAL,MAAAhjB,KAAA,CAAiBA,KAAMkiB,EAASM,OAAhC,OAA0C1M,GAC3C,OArFUqD,4EC1GbsC,EAAAA,EAAAA,wBAA+B,yQCSzB0H,EAAAA,WACF,WAAYC,IAAG,eACXpjB,KAAKwG,IAAM4c,CACd,+CACD,WACI,OAAO,MAAQpjB,KAAKwG,GACvB,sBAIM,WACH,OAAOxG,KAAKqjB,kBAAoB,OAASrjB,KAAKwG,IAAM,gBACvD,wBACD,SAAQ4c,GACJ,OAAOA,EAAE5c,MAAQxG,KAAKwG,GACzB,OAfC2c,GAkByBA,EAAEG,gBAAkB,IAAIH,EAAE,MAGzDA,EAAEI,mBAAqB,IAAIJ,EAAE,0BAA2BA,EAAEK,YAAc,IAAIL,EAAE,mBAC9EA,EAAEM,UAAY,IAAIN,EAAE,aAkBpB,IAAIO,EAAI,SAkBFC,EAAI,IAAIC,EAAAA,GAAE,uBAkBhB,SAASC,EAAET,GACP,GAAIO,EAAEb,UAAY7gB,EAAAA,GAAAA,MAAS,4BADdY,EACc,iCADdA,EACc,kBACvB,IAAMihB,EAAIjhB,EAAE4V,IAAIsL,GAChBJ,EAAE/J,MAAF,MAAA+J,EAAC,sBAAqBD,EAArB,cAA4BN,IAA5B,eAAoCU,IACxC,CACJ,CAED,SAASE,EAAEZ,GACP,GAAIO,EAAEb,UAAY7gB,EAAAA,GAAAA,MAAS,4BADdY,EACc,iCADdA,EACc,kBACvB,IAAMihB,EAAIjhB,EAAE4V,IAAIsL,GAChBJ,EAAE5gB,MAAF,MAAA4gB,EAAC,sBAAqBD,EAArB,cAA4BN,IAA5B,eAAoCU,IACxC,CACJ,CAIG,SAASnb,EAAEya,GACX,GAAIO,EAAEb,UAAY7gB,EAAAA,GAAAA,KAAQ,4BADTY,EACS,iCADTA,EACS,kBACtB,IAAMihB,EAAIjhB,EAAE4V,IAAIsL,GAChBJ,EAAE7H,KAAF,MAAA6H,EAAC,sBAAoBD,EAApB,cAA2BN,IAA3B,eAAmCU,IACvC,CACJ,CAIG,SAASC,EAAEX,GACX,GAAI,iBAAmBA,EAAG,OAAOA,EACjC,IACI,OAAOvgB,EAAIugB,EAAGze,KAAK0C,UAAUxE,EAIhC,CAHC,MAAOA,GAEL,OAAOugB,CACV,CAkBD,IAAIvgB,CACP,CAyBG,SAASkG,IAA0B,IAAxBqa,EAAwB,uDAApB,mBAGTvgB,EAAI,qBAAc6gB,EAAd,iCAAiDN,EAI3D,MAAMY,EAAEnhB,GAAI,IAAIpC,MAAMoC,EACzB,CAOG,SAASohB,EAAEb,EAAGvgB,GACdugB,GAAKra,GACR,CAKG,SAASmb,EAAEd,EAEfvgB,GACI,OAAOugB,CACV,CAiBG,IAAgBe,EAAI,YAAaC,EAAI,UAAWC,EAAI,mBAAoBC,EAAI,oBAAqBC,EAAI,YAAmCC,EAAI,oBAAqBC,EAAI,kBAAmBC,EAAI,qBAAsBC,EAAI,sBAAuBC,EAAI,UAAWC,EAAI,eAAgB1b,EAAI,gBAAiB2b,EAAI,WAAYC,EAAI,cAEpQC,EAAAA,SAAAA,iCAErD,WAIA5B,EAIAvgB,GAAG,6BACC,cAAMugB,EAAGvgB,IAAS4E,KAAO2b,EAAG,EAAKlf,QAAUrB,EAI3C,EAAKoiB,SAAW,2BAAS,EAAKtd,KAAd,mBAA6B,EAAKF,KAAlC,cAA4C,EAAKvD,QAAjD,EALjB,CAMF,kBAhBoD8gB,CAAUzlB,EAAAA,IAyDzD2lB,GAAAA,EAAAA,EAAAA,IACN,WAAY9B,EAAGvgB,IAAG,eACd7C,KAAKmlB,KAAOtiB,EAAG7C,KAAKuH,KAAO,QAASvH,KAAKolB,QAAU,IAAI1N,IAAK1X,KAAKolB,QAAQhQ,IAAI,gBAAjB,iBAA4CgO,GAC3G,IAMKiC,EAAAA,+EACN,WACI,OAAOliB,QAAQC,QAAQ,KAC1B,gCACD,WAAoB,sBACpB,SAAMggB,EAAGvgB,GAELugB,EAAEkC,kBAAkB,kBAAMziB,EAAEsgB,EAAEG,gBAAV,GACvB,yBACD,WAAa,OATP+B,GAeAE,EAAAA,WACN,WAAYnC,IAAG,eACXpjB,KAAKsG,MAAQ8c,EAMbpjB,KAAKwlB,eAAiB,IACzB,wCACD,WACI,OAAOriB,QAAQC,QAAQpD,KAAKsG,MAC/B,gCACD,WAAoB,sBACpB,SAAM8c,EAAGvgB,GAAG,WACR7C,KAAKwlB,eAAiB3iB,EAEtBugB,EAAEkC,kBAAkB,kBAAMziB,EAAE,EAAKyD,MAAM6e,KAAnB,GACvB,yBACD,WACInlB,KAAKwlB,eAAiB,IACzB,OArBKD,GAwByCE,EAAAA,WAC/C,WAAYrC,GAAG,2BACXpjB,KAAK0lB,KAAO,KAAMtC,EAAEuC,QAAQ,SAAAvC,GACxB,EAAKsC,KAAOtC,CACf,GACJ,wCACD,WAAW,WACP,OAAOpjB,KAAK0lB,KAAO1lB,KAAK0lB,KAAKE,WAAWxO,MAAM,SAAAgM,GAAC,OAAIA,GAAKa,EAAE,iBAAmBb,EAAEyC,aAC/E,IAAIX,EAAE9B,EAAEyC,YAAa,IAAI1C,EAAE,EAAKuC,KAAKI,YAAc,IADJ,IACa3iB,QAAQC,QAAQ,KAC/E,gCACD,WAAoB,sBACpB,SAAMggB,EAAGvgB,GAAK,yBACd,WAAa,OAZkC4iB,GAqBzCM,EAAAA,WACN,WAAY3C,EAAGvgB,EAAGihB,EAAGkC,IAAG,eACpBhmB,KAAKojB,EAAIA,EAAGpjB,KAAKX,EAAIwD,EAAG7C,KAAK4jB,EAAIE,EAAG9jB,KAAKiC,EAAI+jB,EAAGhmB,KAAKuH,KAAO,aAAcvH,KAAKmlB,KAAOhC,EAAEK,YACxFxjB,KAAKimB,EAAI,IAAIvO,GAChB,iCAC8G,WAC3G,OAAO1X,KAAKiC,EAAIjC,KAAKiC,KAErBgiB,IAAI,iBAAmBjkB,KAAKojB,GAAK,OAASpjB,KAAKojB,IAAMpjB,KAAKojB,EAAEsC,OAAS1lB,KAAKojB,EAAEsC,KAAKQ,kCACjFlmB,KAAKojB,EAAEsC,KAAKQ,gCAAgC,IAC/C,sBACD,WACIlmB,KAAKimB,EAAE7Q,IAAI,kBAAmBpV,KAAKX,GAEnC,IAAM+jB,EAAIpjB,KAAKmmB,IACf,OAAO/C,GAAKpjB,KAAKimB,EAAE7Q,IAAI,gBAAiBgO,GAAIpjB,KAAK4jB,GAAK5jB,KAAKimB,EAAE7Q,IAAI,iCAAkCpV,KAAK4jB,GACxG5jB,KAAKimB,CACR,OAjBKF,GAwBAK,EAAAA,WACN,WAAYhD,EAAGvgB,EAAGihB,EAAGkC,IAAG,eACpBhmB,KAAKojB,EAAIA,EAAGpjB,KAAKX,EAAIwD,EAAG7C,KAAK4jB,EAAIE,EAAG9jB,KAAKiC,EAAI+jB,CAChD,wCACD,WACI,OAAO7iB,QAAQC,QAAQ,IAAI2iB,EAAE/lB,KAAKojB,EAAGpjB,KAAKX,EAAGW,KAAK4jB,EAAG5jB,KAAKiC,GAC7D,sBACD,SAAMmhB,EAAGvgB,GAELugB,EAAEkC,kBAAkB,kBAAMziB,EAAEsgB,EAAEK,YAAV,GACvB,yBACD,WAAa,gCACb,WAAoB,OAZd4C,GAeJC,GAAAA,EAAAA,EAAAA,IACF,WAAYjD,IAAG,eACXpjB,KAAKmG,MAAQid,EAAGpjB,KAAKuH,KAAO,WAAYvH,KAAKolB,QAAU,IAAI1N,IAAK0L,GAAKA,EAAE9jB,OAAS,GAAKU,KAAKolB,QAAQhQ,IAAI,sBAAuBpV,KAAKmG,MACrI,IAGkDmgB,EAAAA,WACnD,WAAYlD,GAAG,2BACXpjB,KAAK2jB,EAAIP,EAAGpjB,KAAKumB,SAAW,KAAMnD,EAAEuC,QAAQ,SAAAvC,GACxC,EAAKmD,SAAWnD,CACnB,GACJ,wCACD,WACI,OAAOpjB,KAAKumB,SAAWvmB,KAAKumB,SAASX,WAAWxO,MAAM,SAAAgM,GAAC,OAAIA,GAAKa,EAAE,iBAAmBb,EAAE9c,OACvF,IAAI+f,EAAEjD,EAAE9c,QAAU,IADqC,IAC5BnD,QAAQC,QAAQ,KAC9C,gCACD,WAAoB,sBACpB,SAAMggB,EAAGvgB,GAAK,yBACd,WAAa,OAZsCyjB,GAmCjDE,GAAAA,EAAAA,EAAAA,IAkBF,WAAYpD,EAAGvgB,EAAGihB,EAAGkC,EAAGS,EAAGpnB,EAAGukB,EAAG3hB,IAAG,eAChCjC,KAAK0mB,WAAatD,EAAGpjB,KAAKod,MAAQva,EAAG7C,KAAK2mB,eAAiB7C,EAAG9jB,KAAKsF,KAAO0gB,EAAGhmB,KAAK4mB,IAAMH,EACxFzmB,KAAK6mB,iBAAmBxnB,EAAGW,KAAK8mB,sBAAwBlD,EAAG5jB,KAAK+mB,gBAAkB9kB,CACrF,IAQC+kB,EAAAA,WACF,WAAY5D,EAAGvgB,IAAG,eACd7C,KAAKuG,UAAY6c,EAAGpjB,KAAKinB,SAAWpkB,GAAK,WAC5C,+CAID,WACI,MAAO,cAAgB7C,KAAKinB,QAC/B,wBACD,SAAQ7D,GACJ,OAAOA,aAAa4D,GAAK5D,EAAE7c,YAAcvG,KAAKuG,WAAa6c,EAAE6D,WAAajnB,KAAKinB,QAClF,wBARD,WACI,OAAO,IAAID,EAAE,GAAI,GACpB,OANCA,GAkBAE,EAAAA,WACF,WAAY9D,EAAGvgB,EAAGihB,IAAG,oBACjB,IAAWjhB,EAAIA,EAAI,EAAIA,EAAIugB,EAAE9jB,QAAUyJ,SAAK,IAAW+a,EAAIA,EAAIV,EAAE9jB,OAASuD,EAAIihB,EAAIV,EAAE9jB,OAASuD,GAAKkG,IAClG/I,KAAKmnB,SAAW/D,EAAGpjB,KAAKonB,OAASvkB,EAAG7C,KAAKqnB,IAAMvD,CAClD,oCACD,WACI,OAAO9jB,KAAKqnB,GACf,wBACD,SAAQjE,GACJ,OAAO,IAAM8D,EAAEI,WAAWtnB,KAAMojB,EACnC,sBACD,SAAMA,GACF,IAAMvgB,EAAI7C,KAAKmnB,SAASpI,MAAM/e,KAAKonB,OAAQpnB,KAAKunB,SAChD,OAAOnE,aAAa8D,EAAI9D,EAAEvZ,SAAS,SAAAuZ,GAC/BvgB,EAAEvB,KAAK8hB,EACV,IAAKvgB,EAAEvB,KAAK8hB,GAAIpjB,KAAKwnB,UAAU3kB,EACnC,sBAC6D,WAC1D,OAAO7C,KAAKonB,OAASpnB,KAAKV,MAC7B,yBACD,SAAS8jB,GACL,OAAOA,OAAI,IAAWA,EAAI,EAAIA,EAAGpjB,KAAKwnB,UAAUxnB,KAAKmnB,SAAUnnB,KAAKonB,OAAShE,EAAGpjB,KAAKV,OAAS8jB,EACjG,wBACD,WACI,OAAOpjB,KAAKwnB,UAAUxnB,KAAKmnB,SAAUnnB,KAAKonB,OAAQpnB,KAAKV,OAAS,EACnE,6BACD,WACI,OAAOU,KAAKmnB,SAASnnB,KAAKonB,OAC7B,4BACD,WACI,OAAOpnB,KAAK6U,IAAI7U,KAAKV,OAAS,EACjC,oBACD,SAAI8jB,GACA,OAAOpjB,KAAKmnB,SAASnnB,KAAKonB,OAAShE,EACtC,wBACD,WACI,OAAO,IAAMpjB,KAAKV,MACrB,2BACD,SAAW8jB,GACP,GAAIA,EAAE9jB,OAASU,KAAKV,OAAQ,OAAO,EACnC,IAAK,IAAIuD,EAAI,EAAGA,EAAI7C,KAAKV,OAAQuD,IAAK,GAAI7C,KAAK6U,IAAIhS,KAAOugB,EAAEvO,IAAIhS,GAAI,OAAO,EAC3E,OAAO,CACV,oCACD,SAAoBugB,GAChB,GAAIpjB,KAAKV,OAAS,IAAM8jB,EAAE9jB,OAAQ,OAAO,EACzC,IAAK,IAAIuD,EAAI,EAAGA,EAAI7C,KAAKV,OAAQuD,IAAK,GAAI7C,KAAK6U,IAAIhS,KAAOugB,EAAEvO,IAAIhS,GAAI,OAAO,EAC3E,OAAO,CACV,wBACD,SAAQugB,GACJ,IAAK,IAAIvgB,EAAI7C,KAAKonB,OAAQtD,EAAI9jB,KAAKunB,QAAS1kB,EAAIihB,EAAGjhB,IAAKugB,EAAEpjB,KAAKmnB,SAAStkB,GAC3E,wBACD,WACI,OAAO7C,KAAKmnB,SAASpI,MAAM/e,KAAKonB,OAAQpnB,KAAKunB,QAChD,6BACD,SAAkBnE,EAAGvgB,GAEjB,IADA,IAAMihB,EAAI2D,KAAKC,IAAItE,EAAE9jB,OAAQuD,EAAEvD,QACtB0mB,EAAI,EAAGA,EAAIlC,EAAGkC,IAAK,CACxB,IAAMlC,EAAIV,EAAEvO,IAAImR,GAAIS,EAAI5jB,EAAEgS,IAAImR,GAC9B,GAAIlC,EAAI2C,EAAG,OAAQ,EACnB,GAAI3C,EAAI2C,EAAG,OAAO,CACrB,CACD,OAAOrD,EAAE9jB,OAASuD,EAAEvD,QAAU,EAAI8jB,EAAE9jB,OAASuD,EAAEvD,OAAS,EAAI,CAC/D,OA9DC4nB,GAsEIS,GAAAA,SAAAA,oIACN,SAAUvE,EAAGvgB,EAAGihB,GACZ,OAAO,IAAI6D,EAAGvE,EAAGvgB,EAAGihB,EACvB,gCACD,WAII,OAAO9jB,KAAK4nB,UAAUrmB,KAAK,IAC9B,yBACD,WACI,OAAOvB,KAAK6nB,iBACf,6BAKM,WAAwB,IAI3B,IAAMhlB,EAAI,GAJiB,mBAAHugB,EAAG,yBAAHA,EAAG,gBAK3B,cAAgBA,EAAhB,eAAmB,CAAd,IAAMU,EAAC,KACR,GAAIA,EAAE/Z,QAAQ,OAAS,EAAG,MAAM,IAAIib,EAAEX,EAAN,2BAA6BP,EAA7B,0CAEpBjhB,EAAEvB,KAAF,MAAAuB,GAAC,OAASihB,EAAEtY,MAAM,KAAKwN,QAAQ,SAAAoK,GAAC,OAAIA,EAAE9jB,OAAS,CAAf,KAC/C,CACD,OAAO,IAAIqoB,EAAG9kB,EACjB,0BACD,WACI,OAAO,IAAI8kB,EAAG,GACjB,OA/BKA,CAAWT,GAkCfY,GAAK,2BAKDC,GAAAA,SAAAA,oIACN,SAAU3E,EAAGvgB,EAAGihB,GACZ,OAAO,IAAIiE,EAAG3E,EAAGvgB,EAAGihB,EACvB,gCAOD,WACI,OAAO9jB,KAAK4nB,UAAUnP,KAAK,SAAA2K,GAAC,OAAKA,EAAIA,EAAEzgB,QAAQ,MAAO,QAAQA,QAAQ,KAAM,OAC5EolB,EAAGC,kBAAkB5E,KAAOA,EAAI,IAAMA,EAAI,KAAMA,CADpB,IACyB7hB,KAAK,IAC7D,yBACD,WACI,OAAOvB,KAAK6nB,iBACf,2BAGM,WACH,OAAO,IAAM7nB,KAAKV,QAAU,aAAeU,KAAK6U,IAAI,EACvD,oCAdM,SAAyBuO,GAC5B,OAAO0E,GAAGG,KAAK7E,EAClB,yBAeM,WACH,OAAO,IAAI2E,EAAG,CAAE,YACnB,iCAUM,SAAwB3E,GAQ3B,IAPA,IAAMvgB,EAAI,GACNihB,EAAI,GAAIkC,EAAI,EACVS,EAAI,WACN,GAAI,IAAM3C,EAAExkB,OAAQ,MAAM,IAAI0lB,EAAEX,EAAN,8BAAgCjB,EAAhC,8EAC1BvgB,EAAEvB,KAAKwiB,GAAIA,EAAI,EAClB,EACGzkB,GAAI,EACF2mB,EAAI5C,EAAE9jB,QAAU,CAClB,IAAMuD,EAAIugB,EAAE4C,GACZ,GAAI,OAASnjB,EAAG,CACZ,GAAImjB,EAAI,IAAM5C,EAAE9jB,OAAQ,MAAM,IAAI0lB,EAAEX,EAAG,uCAAyCjB,GAChF,IAAMvgB,EAAIugB,EAAE4C,EAAI,GAChB,GAAI,OAASnjB,GAAK,MAAQA,GAAK,MAAQA,EAAG,MAAM,IAAImiB,EAAEX,EAAG,qCAAuCjB,GAChGU,GAAKjhB,EAAGmjB,GAAK,CAChB,KAAM,MAAQnjB,GAAKxD,GAAKA,EAAG2mB,KAAO,MAAQnjB,GAAKxD,GAAKykB,GAAKjhB,EAAGmjB,MAAQS,IAAKT,IAC7E,CACD,GAAIS,IAAKpnB,EAAG,MAAM,IAAI2lB,EAAEX,EAAG,2BAA6BjB,GACxD,OAAO,IAAI2E,EAAGllB,EACjB,0BACD,WACI,OAAO,IAAIklB,EAAG,GACjB,OA1DKA,CAAWb,GA+EXgB,GAAAA,WACN,WAAY9E,IAAG,eACXpjB,KAAKuL,KAAO6X,CACf,6CAUD,WACI,OAAOpjB,KAAKuL,KAAK4c,UAAUC,aAC9B,gCACwE,SAAgBhF,GACrF,OAAOpjB,KAAKuL,KAAKjM,QAAU,GAAKU,KAAKuL,KAAKsJ,IAAI7U,KAAKuL,KAAKjM,OAAS,KAAO8jB,CAC3E,mCAC6F,WAC1F,OAAOpjB,KAAKuL,KAAKsJ,IAAI7U,KAAKuL,KAAKjM,OAAS,EAC3C,kCACoE,WACjE,OAAOU,KAAKuL,KAAK4c,SACpB,wBACD,SAAQ/E,GACJ,OAAO,OAASA,GAAK,IAAMuE,GAAGL,WAAWtnB,KAAKuL,KAAM6X,EAAE7X,KACzD,yBACD,WACI,OAAOvL,KAAKuL,KAAK0Z,UACpB,2BA1BD,SAAgB7B,GACZ,OAAO,IAAI8E,EAAGP,GAAGU,WAAWjF,GAC/B,yBACD,SAAgBA,GACZ,OAAO,IAAI8E,EAAGP,GAAGU,WAAWjF,GAAGkF,SAAS,GAC3C,sBACD,WACI,OAAO,IAAIJ,EAAGP,GAAGY,YACpB,2BAmBD,SAAkBnF,EAAGvgB,GACjB,OAAO8kB,GAAGL,WAAWlE,EAAE7X,KAAM1I,EAAE0I,KAClC,8BACD,SAAqB6X,GACjB,OAAOA,EAAE9jB,OAAS,GAAK,CAC1B,6BAMM,SAAoB8jB,GACvB,OAAO,IAAI8E,EAAG,IAAIP,GAAGvE,EAAErE,SAC1B,OA5CKmJ,GA8DN,SAASM,GAAGpF,EAAGvgB,EAAGihB,GAClB,IAAKA,EAAG,MAAM,IAAIkB,EAAEX,EAAN,mBAAqBjB,EAArB,6CAA2DvgB,EAA3D,KACjB,CAUD,SAAS4lB,GAAGrF,GACR,IAAK8E,GAAGQ,cAActF,GAAI,MAAM,IAAI4B,EAAEX,EAAN,oGAAsGjB,EAAtG,gBAA+GA,EAAE9jB,OAAjH,KACnC,CAKG,SAASqpB,GAAGvF,GACZ,GAAI8E,GAAGQ,cAActF,GAAI,MAAM,IAAI4B,EAAEX,EAAN,uGAAyGjB,EAAzG,gBAAkHA,EAAE9jB,OAApH,KAClC,CAOD,SAASspB,GAAGxF,GACR,QAAI,IAAWA,EAAG,MAAO,YACzB,GAAI,OAASA,EAAG,MAAO,OACvB,GAAI,iBAAmBA,EAAG,OAAOA,EAAE9jB,OAAS,KAAO8jB,EAAI,GAAH,OAAMA,EAAEvd,UAAU,EAAG,IAArB,QACpDlB,KAAK0C,UAAU+b,GACf,GAAI,iBAAmBA,GAAK,kBAAoBA,EAAG,MAAO,GAAKA,EAC/D,GAAI,iBAAmBA,EAAG,CACtB,GAAIA,aAAa7iB,MAAO,MAAO,WAE3B,IAAMsC,EAEN,SAASugB,GACL,OAAIA,EAAEyF,YAAoBzF,EAAEyF,YAAYlhB,KACjC,IACV,CAHD,CAWPyb,GACO,OAAOvgB,EAAI,YAAH,OAAeA,EAAf,WAA4B,WAE3C,CACD,MAAO,mBAAqBugB,EAAI,aAAera,GAClD,CAED,SAAS+f,GAAG1F,EAEZvgB,GACI,GAAI,cAAeugB,IAGnBA,EAAIA,EAAE1Z,aAAc0Z,aAAavgB,GAAI,CACjC,GAAIA,EAAE8E,OAASyb,EAAEyF,YAAYlhB,KAAM,MAAM,IAAIqd,EAAEX,EAAG,uGAE9C,IAAMP,EAAI8E,GAAGxF,GACb,MAAM,IAAI4B,EAAEX,EAAN,yBAA2BxhB,EAAE8E,KAA7B,0BAAmDmc,GAEhE,CACD,OAAOV,CACV,CA4B+C,SAAS2F,GAAG3F,GAGxD,OAAO,IAAMA,GAAK,EAAIA,IAAK,GAC9B,CAsBD,IAsCI4F,GAAIC,GAtCFC,GAAK,CACPC,kBAAmB,WACnBC,OAAQ,SACRC,SAAU,WACVC,oBAAqB,uBA2CzB,SAASC,GAAGnG,GACR,QAAI,IAAWA,EAAG,OAAOY,EAAE,YAAa,4BAA6BI,EAOjE,OAAQhB,GACV,KAAK,IAEH,MAhrBM,KAkrBR,KAAK,IAEH,OAAOuB,EAKD,KAAK,IAEX,OAAOF,EAET,KAAK,IAEH,OAAOD,EAET,KAAK,IAEH,OAAOD,EAET,KAAK,IAEH,OAAOK,EAID,KAAK,IAEX,OAAOC,EAET,KAAK,IAEH,OAAOH,EAET,KAAK,IAEH,OAAOP,EAET,KAAK,IAEH,OAAOC,EAKD,KAAK,IAEX,OAAOjb,EAET,KAAK,IAEH,OAAO4b,EAET,KAAK,IAEH,OAAOT,EAET,QACE,OAAOlB,GAAK,KAAOA,EAAI,IA3uBjB,KA2uB2BA,GAAK,KAAOA,EAAI,IAAMuB,EAAIvB,GAAK,KAAOA,EAAI,IAAM0B,EAAIV,EAE5F,EAqBI6E,GAAKD,KAAOA,GAAK,CAAC,IAAIC,GAAGO,GAAK,GAAK,KAAMP,GAAGA,GAAGQ,UAAY,GAAK,YACrER,GAAGA,GAAGS,QAAU,GAAK,UAAWT,GAAGA,GAAGU,iBAAmB,GAAK,mBAC9DV,GAAGA,GAAGW,kBAAoB,GAAK,oBAAqBX,GAAGA,GAAGY,UAAY,GAAK,YAC3EZ,GAAGA,GAAGa,eAAiB,GAAK,iBAAkBb,GAAGA,GAAGc,kBAAoB,GAAK,oBAC7Ed,GAAGA,GAAG3F,gBAAkB,IAAM,kBAAmB2F,GAAGA,GAAGe,mBAAqB,GAAK,qBACjFf,GAAGA,GAAGgB,oBAAsB,GAAK,sBAAuBhB,GAAGA,GAAGiB,QAAU,IAAM,UAC9EjB,GAAGA,GAAGkB,aAAe,IAAM,eAAgBlB,GAAGA,GAAGmB,cAAgB,IAAM,gBACvEnB,GAAGA,GAAG5H,SAAW,IAAM,WAAY4H,GAAGA,GAAGoB,YAAc,IAAM,cAAepB,GAAGA,GAAGqB,UAAY,IAAM,gBAE9FC,GAAAA,SAAAA,iCAoDF,WAAYnH,EAAGvgB,GAAG,6BACd,cAAMugB,IAASkB,EAAIzhB,EADL,CAEjB,iCACD,SAAEugB,EAAGvgB,GACD,MAAM,IAAIpC,MAAM,mCACnB,qDACD,WAAQ2iB,EAAGvgB,EAAGihB,EAAGkC,GAAjB,wFAEU3mB,EAAIsF,KAAK0C,UAAU2e,GAF7B,kBAKkBhmB,KAAKskB,EAAEzhB,EAAG,CAChBkV,OAAQ,OACRqN,QAAStB,EACT0G,KAAMnrB,IARlB,OAKQukB,EALR,6DAWc/gB,EAXd,KAYc,IAAImiB,EAAEuE,GAAG1mB,EAAE4nB,QAAS,8BAAgC5nB,EAAE6nB,YAZpE,WAcS9G,EAAE+G,GAdX,kCAesB/G,EAAEgH,OAfxB,cAeYxH,EAfZ,OAgBQ7iB,MAAMC,QAAQ4iB,KAAOA,EAAIA,EAAE,IACrBvgB,EAAI,QAAU4jB,EAAI,MAAQrD,OAAI,EAASA,EAAErgB,aAAU,IAAW0jB,OAAI,EAASA,EAAEviB,QAC7E,IAAI8gB,EAAEuE,GAAG3F,EAAE6G,QAAX,qCAAkD,MAAQ5nB,EAAIA,EAAI+gB,EAAE8G,aAlBlF,iCAoBW9G,EAAEgH,QApBb,0HA1DEL,YAMF,WAAYnH,IAAG,eACXpjB,KAAK6qB,aAAezH,EAAGpjB,KAAK0mB,WAAatD,EAAEsD,WAC3C,IAAM7jB,EAAIugB,EAAEwD,IAAM,QAAU,OAC5B5mB,KAAKZ,EAAIyD,EAAI,MAAQugB,EAAE9d,KAAMtF,KAAKgkB,EAAI,YAAchkB,KAAK0mB,WAAWngB,UAAY,cAAgBvG,KAAK0mB,WAAWO,SAAW,YAC9H,+BACD,WAGI,OAAO,CACV,kBACD,SAAE7D,EAAGvgB,EAAGihB,EAAGkC,EAAGS,GACV,IAAMpnB,EAAIW,KAAK8qB,EAAE1H,EAAGvgB,GACpBghB,EAAE,iBAAkB,YAAaxkB,EAAGykB,GACpC,IAAMF,EAAI,CAAC,EACX,OAAO5jB,KAAKmkB,EAAEP,EAAGoC,EAAGS,GAAIzmB,KAAKokB,EAAEhB,EAAG/jB,EAAGukB,EAAGE,GAAG1M,MAAM,SAAAgM,GAAC,OAAKS,EAAE,iBAAkB,aAAcT,GACzFA,CADkD,IAC5C,SAAAvgB,GACF,MAAM8F,EAAE,iBAAD,UAAsBya,EAAtB,wBAA+CvgB,EAAG,QAASxD,EAAG,WAAYykB,GACjFjhB,CACH,GACJ,kBACD,SAAEugB,EAAGvgB,EAAGihB,EAAGkC,EAAGS,EAAGpnB,GAGb,OAAOW,KAAKkkB,EAAEd,EAAGvgB,EAAGihB,EAAGkC,EAAGS,EAC7B,kBAIM,SAAErD,EAAGvgB,EAAGihB,GACXV,EAAE,qBAAuB,eAAiBM,EAK1CN,EAAE,gBAAkB,aAAcpjB,KAAK6qB,aAAazN,QAAUgG,EAAE,oBAAsBpjB,KAAK6qB,aAAazN,OACxGva,GAAKA,EAAEuiB,QAAQvb,SAAS,SAAChH,EAAGihB,GAAJ,OAAUV,EAAEU,GAAKjhB,CAAjB,IAAsBihB,GAAKA,EAAEsB,QAAQvb,SAAS,SAAChH,EAAGihB,GAAJ,OAAUV,EAAEU,GAAKjhB,CAAjB,GACzE,kBACD,SAAEugB,EAAGvgB,GACD,IAAMihB,EAAIoF,GAAG9F,GACb,gBAAUpjB,KAAKZ,EAAf,eAAuByD,EAAvB,YAA4BihB,EAC/B,WA0EL,SAASiH,GAAG3H,GAER,IAAMvgB,EAEN,oBAAsBY,OAASA,KAAKunB,QAAUvnB,KAAKwnB,UAAWnH,EAAI,IAAIoH,WAAW9H,GACjF,GAAIvgB,GAAK,mBAAqBA,EAAEsoB,gBAAiBtoB,EAAEsoB,gBAAgBrH,QAEnE,IAAK,IAAIjhB,EAAI,EAAGA,EAAIugB,EAAGvgB,IAAKihB,EAAEjhB,GAAK4kB,KAAK2D,MAAM,IAAM3D,KAAK4D,UACzD,OAAOvH,CACV,KAiBSwH,GAAAA,6EACN,WAKI,IAHA,IAAMlI,EAAI,iEAAkEvgB,EAAI4kB,KAAK2D,MAAM,IAAMhI,EAAE9jB,QAAU8jB,EAAE9jB,OAEnGwkB,EAAI,GACVA,EAAExkB,OAAS,IAEb,IADA,IAAM0mB,EAAI+E,GAAG,IACJtE,EAAI,EAAGA,EAAIT,EAAE1mB,SAAUmnB,EAGhC3C,EAAExkB,OAAS,IAAM0mB,EAAES,GAAK5jB,IAAMihB,GAAKV,EAAE9gB,OAAO0jB,EAAES,GAAKrD,EAAE9jB,SAEzD,OAAOwkB,CACV,OAdKwH,GAiBV,SAASC,GAAGnI,EAAGvgB,GACX,OAAOugB,EAAIvgB,GAAK,EAAIugB,EAAIvgB,EAAI,EAAI,CACnC,CAEgD,SAAS2oB,GAAGpI,EAAGvgB,EAAGihB,GAC/D,OAAOV,EAAE9jB,SAAWuD,EAAEvD,QAAU8jB,EAAEqI,OAAO,SAACrI,EAAG4C,GAAJ,OAAUlC,EAAEV,EAAGvgB,EAAEmjB,GAAjB,GAC5C,CAiBG,SAAS0F,GAAGtI,GACZ,IAAIvgB,EAAI,EACR,IAAK,IAAMihB,KAAKV,EAAGxb,OAAOE,UAAU6jB,eAAexV,KAAKiN,EAAGU,IAAMjhB,IACjE,OAAOA,CACV,CAED,SAAS+oB,GAAGxI,EAAGvgB,GACX,IAAK,IAAMihB,KAAKV,EAAGxb,OAAOE,UAAU6jB,eAAexV,KAAKiN,EAAGU,IAAMjhB,EAAEihB,EAAGV,EAAEU,GAC3E,KA2BK+H,GAAAA,SAAAA,GACF,WAAYzI,IAAG,eACXpjB,KAAK8rB,aAAe1I,CACvB,+BAsBD,WAAoB,WACZA,EAAI,EACR,MAAO,CACH2I,KAAM,kBAAM3I,EAAI,EAAK0I,aAAaxsB,OAAS,CACvC6G,MAAO,EAAK2lB,aAAatsB,WAAW4jB,KACpC9M,MAAM,GACN,CACAnQ,WAAO,EACPmQ,MAAM,EALJ,EAQb,yBACD,WACI,OAAO8M,EAAIpjB,KAAK8rB,aAAcrqB,KAAK2hB,GAEnC,IAAIA,CACP,6BACD,WACI,OAAO,SAASA,GAEZ,IADA,IAAMvgB,EAAI,IAAIqoB,WAAW9H,EAAE9jB,QAClBwkB,EAAI,EAAGA,EAAIV,EAAE9jB,OAAQwkB,IAAKjhB,EAAEihB,GAAKV,EAAE5jB,WAAWskB,GACvD,OAAOjhB,CACV,CAJM,CAsBN7C,KAAK8rB,aACT,oCACD,WACI,OAAO,EAAI9rB,KAAK8rB,aAAaxsB,MAChC,0BACD,SAAU8jB,GACN,OAAOmI,GAAGvrB,KAAK8rB,aAAc1I,EAAE0I,aAClC,wBACD,SAAQ1I,GACJ,OAAOpjB,KAAK8rB,eAAiB1I,EAAE0I,YAClC,mCAvED,SAAwB1I,GAEpB,OAAO,IAAIyI,EADD1rB,KAAKijB,GAElB,+BACD,SAAsBA,GAGlB,IAAMvgB,EAIN,SAASugB,GAEL,IADA,IAAIvgB,EAAI,GACCihB,EAAI,EAAGA,EAAIV,EAAE9jB,SAAUwkB,EAAGjhB,GAAKf,OAAOC,aAAaqhB,EAAEU,IAC9D,OAAOjhB,CACV,CAJD,CAOHugB,GACG,OAAO,IAAIyI,EAAGhpB,EACjB,OAxBCgpB,CAyBDG,OAAOC,UAqDZJ,GAAGK,kBAAoB,IAAIL,GAAG,IAE9B,IAAMM,GAAK,IAAIC,OAAO,iDAKlB,SAASC,GAAGjJ,GAIZ,GAAIa,IAAIb,GAAI,iBAAmBA,EAAG,CAI9B,IAAIvgB,EAAI,EACFihB,EAAIqI,GAAGG,KAAKlJ,GAClB,GAAIa,IAAIH,GAAIA,EAAE,GAAI,CAEd,IAAIV,EAAIU,EAAE,GACVV,GAAKA,EAAI,aAAamJ,OAAO,EAAG,GAAI1pB,EAAI2pB,OAAOpJ,EAClD,CAEO,IAAM4C,EAAI,IAAI5H,KAAKgF,GAC3B,MAAO,CACHqJ,QAAShF,KAAK2D,MAAMpF,EAAE0G,UAAY,KAClCC,MAAO9pB,EAEd,CACD,MAAO,CACH4pB,QAASG,GAAGxJ,EAAEqJ,SACdE,MAAOC,GAAGxJ,EAAEuJ,OAEnB,CAKG,SAASC,GAAGxJ,GAEZ,MAAO,iBAAmBA,EAAIA,EAAI,iBAAmBA,EAAIoJ,OAAOpJ,GAAK,CACxE,CAEqE,SAASyJ,GAAGzJ,GAC9E,MAAO,iBAAmBA,EAAIyI,GAAGiB,iBAAiB1J,GAAKyI,GAAGkB,eAAe3J,EAC5E,KAiCK4J,GAAAA,WAYF,WAIA5J,EAIAvgB,GACI,IADD,eACK7C,KAAKysB,QAAUrJ,EAAGpjB,KAAKitB,YAAcpqB,EAAGA,EAAI,EAAG,MAAM,IAAImiB,EAAEX,EAAG,uCAAyCxhB,GAC3G,GAAIA,GAAK,IAAK,MAAM,IAAImiB,EAAEX,EAAG,uCAAyCxhB,GACtE,GAAIugB,GAAK,YAAa,MAAM,IAAI4B,EAAEX,EAAG,mCAAqCjB,GAElE,GAAIA,GAAK,aAAc,MAAM,IAAI4B,EAAEX,EAAG,mCAAqCjB,EACtF,sCAmCM,WACH,OAAO,IAAIhF,KAAKpe,KAAKktB,WACxB,yBAOM,WACH,OAAO,IAAMltB,KAAKysB,QAAUzsB,KAAKitB,YAAc,GAClD,2BACD,SAAW7J,GACP,OAAOpjB,KAAKysB,UAAYrJ,EAAEqJ,QAAUlB,GAAGvrB,KAAKitB,YAAa7J,EAAE6J,aAAe1B,GAAGvrB,KAAKysB,QAASrJ,EAAEqJ,QAChG,wBAMM,SAAQrJ,GACX,OAAOA,EAAEqJ,UAAYzsB,KAAKysB,SAAWrJ,EAAE6J,cAAgBjtB,KAAKitB,WAC/D,yBAC+D,WAC5D,MAAO,qBAAuBjtB,KAAKysB,QAAU,iBAAmBzsB,KAAKitB,YAAc,GACtF,uBACyE,WACtE,MAAO,CACHR,QAASzsB,KAAKysB,QACdQ,YAAajtB,KAAKitB,YAEzB,wBAIM,WAQH,IAAM7J,EAAIpjB,KAAKysB,UAAW,YAGlB,OAAO3qB,OAAOshB,GAAG+J,SAAS,GAAI,KAAO,IAAMrrB,OAAO9B,KAAKitB,aAAaE,SAAS,EAAG,IAC3F,sBA7EM,WACH,OAAOH,EAAGI,WAAWhP,KAAKE,MAC7B,yBAOM,SAAgB8E,GACnB,OAAO4J,EAAGI,WAAWhK,EAAEsJ,UAC1B,2BAQM,SAAkBtJ,GACrB,IAAMvgB,EAAI4kB,KAAK2D,MAAMhI,EAAI,KACzB,OAAO,IAAI4J,EAAGnqB,EADqB4kB,KAAK2D,MAAM,KAAOhI,EAAI,IAAMvgB,IAElE,OArDCmqB,GAgJF,SAASK,GAAGjK,GACZ,IAAIvgB,EAAGihB,EACP,MAAO,sBAAwB,QAAUA,IAAM,QAAUjhB,EAAI,MAAQugB,OAAI,EAASA,EAAEkK,gBAAa,IAAWzqB,OAAI,EAASA,EAAE+G,SAAW,CAAC,GAAG2jB,gBAAa,IAAWzJ,OAAI,EAASA,EAAE0J,YACpL,CAcG,SAASC,GAAGrK,GACZ,IAAMvgB,EAAIwpB,GAAGjJ,EAAEkK,SAAS1jB,OAAO8jB,qBAAqBC,gBACpD,OAAO,IAAIX,GAAGnqB,EAAE4pB,QAAS5pB,EAAE8pB,MAC9B,CA0BD,SAASiB,GAAGxK,GACR,MAAO,cAAeA,EAAI,EAA8B,iBAAkBA,EAAI,EAAiC,iBAAkBA,GAAK,gBAAiBA,EAAI,EAAgC,mBAAoBA,EAAI,EAAmC,gBAAiBA,EAAI,EAAgC,eAAgBA,EAAI,EAA8B,mBAAoBA,EAAI,EAA6B,kBAAmBA,EAAI,EAAkC,eAAgBA,EAAI,EAA+B,aAAcA,EAAIiK,GAAGjK,GAAK,EAExhB,SAASA,GACL,MAAO,eAAiBA,EAAEkK,UAAY,CAAC,GAAG1jB,QAAU,CAAC,GAAG2jB,UAAY,CAAC,GAAGC,WAC3E,CAFD,CAgCCpK,GAAK,iBAA4C,GAAiCra,GACtF,CAE4E,SAAS8kB,GAAGzK,EAAGvgB,GACxF,GAAIugB,IAAMvgB,EAAG,OAAO,EACpB,IAAMihB,EAAI8J,GAAGxK,GACb,GAAIU,IAAM8J,GAAG/qB,GAAI,OAAO,EACxB,OAAQihB,GACN,KAAK,EACL,KAAK,iBACH,OAAO,EAET,KAAK,EACH,OAAOV,EAAE0K,eAAiBjrB,EAAEirB,aAE9B,KAAK,EACH,OAAOL,GAAGrK,GAAG2K,QAAQN,GAAG5qB,IAE1B,KAAK,EACH,OAAO,SAASugB,EAAGvgB,GACf,GAAI,iBAAmBugB,EAAEuK,gBAAkB,iBAAmB9qB,EAAE8qB,gBAAkBvK,EAAEuK,eAAeruB,SAAWuD,EAAE8qB,eAAeruB,OAE/H,OAAO8jB,EAAEuK,iBAAmB9qB,EAAE8qB,eAC9B,IAAM7J,EAAIuI,GAAGjJ,EAAEuK,gBAAiB3H,EAAIqG,GAAGxpB,EAAE8qB,gBACzC,OAAO7J,EAAE2I,UAAYzG,EAAEyG,SAAW3I,EAAE6I,QAAU3G,EAAE2G,KACnD,CANM,CAMLvJ,EAAGvgB,GAEP,KAAK,EACH,OAAOugB,EAAEoK,cAAgB3qB,EAAE2qB,YAE7B,KAAK,EACH,OAAO,SAASpK,EAAGvgB,GACf,OAAOgqB,GAAGzJ,EAAE4K,YAAYD,QAAQlB,GAAGhqB,EAAEmrB,YACxC,CAFM,CAEL5K,EAAGvgB,GAEP,KAAK,EACH,OAAOugB,EAAE6K,iBAAmBprB,EAAEorB,eAEhC,KAAK,EACH,OAAO,SAAS7K,EAAGvgB,GACf,OAAO+pB,GAAGxJ,EAAE8K,cAAcC,YAAcvB,GAAG/pB,EAAEqrB,cAAcC,WAAavB,GAAGxJ,EAAE8K,cAAcE,aAAexB,GAAG/pB,EAAEqrB,cAAcE,UAChI,CAFM,CAELhL,EAAGvgB,GAEP,KAAK,EACH,OAAO,SAASugB,EAAGvgB,GACf,GAAI,iBAAkBugB,GAAK,iBAAkBvgB,EAAG,OAAO+pB,GAAGxJ,EAAEiL,gBAAkBzB,GAAG/pB,EAAEwrB,cACnF,GAAI,gBAAiBjL,GAAK,gBAAiBvgB,EAAG,CAC1C,IAAMihB,EAAI8I,GAAGxJ,EAAEkL,aAActI,EAAI4G,GAAG/pB,EAAEyrB,aACtC,OAAOxK,IAAMkC,EAAI+C,GAAGjF,KAAOiF,GAAG/C,GAAKuI,MAAMzK,IAAMyK,MAAMvI,EACxD,CACD,OAAO,CACV,CAPM,CAOL5C,EAAGvgB,GAEP,KAAK,EACH,OAAO2oB,GAAGpI,EAAEoL,WAAWzU,QAAU,GAAIlX,EAAE2rB,WAAWzU,QAAU,GAAI8T,IAElE,KAAK,GACH,OAAO,SAASzK,EAAGvgB,GACf,IAAMihB,EAAIV,EAAEkK,SAAS1jB,QAAU,CAAC,EAAGoc,EAAInjB,EAAEyqB,SAAS1jB,QAAU,CAAC,EAC7D,GAAI8hB,GAAG5H,KAAO4H,GAAG1F,GAAI,OAAO,EAC5B,IAAK,IAAM5C,KAAKU,EAAG,GAAIA,EAAE6H,eAAevI,UAAO,IAAW4C,EAAE5C,KAAOyK,GAAG/J,EAAEV,GAAI4C,EAAE5C,KAAM,OAAO,EAC3F,OAAO,CACV,CALM,CAMgEA,EAAGvgB,GAE5E,QACE,OAAOkG,IAEd,CAsH6C,SAAS0lB,GAAGrL,GACtD,QAASA,GAAK,aAAcA,CAC/B,CAEuC,SAASsL,GAAGtL,GAChD,GAAIA,EAAE8K,cAAe,MAAO,CACxBA,cAAetmB,OAAO+mB,OAAO,CAAC,EAAGvL,EAAE8K,gBAEvC,GAAI9K,EAAEuK,gBAAkB,iBAAmBvK,EAAEuK,eAAgB,MAAO,CAChEA,eAAgB/lB,OAAO+mB,OAAO,CAAC,EAAGvL,EAAEuK,iBAExC,GAAIvK,EAAEkK,SAAU,CACZ,IAAMzqB,EAAI,CACNyqB,SAAU,CACN1jB,OAAQ,CAAC,IAGjB,OAAOgiB,GAAGxI,EAAEkK,SAAS1jB,QAAS,SAACwZ,EAAGU,GAAJ,OAAUjhB,EAAEyqB,SAAS1jB,OAAOwZ,GAAKsL,GAAG5K,EAApC,IAA0CjhB,CAC3E,CACD,GAAIugB,EAAEoL,WAAY,CAMd,IALA,IAAM3rB,EAAI,CACN2rB,WAAY,CACRzU,OAAQ,KAGP+J,EAAI,EAAGA,GAAKV,EAAEoL,WAAWzU,QAAU,IAAIza,SAAUwkB,EAAGjhB,EAAE2rB,WAAWzU,OAAO+J,GAAK4K,GAAGtL,EAAEoL,WAAWzU,OAAO+J,IAC7G,OAAOjhB,CACV,CACD,OAAO+E,OAAO+mB,OAAO,CAAC,EAAGvL,EAC5B,KAoTKwL,GAAAA,WACF,WAAYxL,EAAGvgB,IAAG,eACd7C,KAAKsnB,WAAalE,EAAGpjB,KAAKoN,KAAOvK,GAAKgsB,GAAGC,KAC5C,sCAED,SAAO1L,EAAGvgB,GACN,OAAO,IAAI+rB,EAAG5uB,KAAKsnB,WAAYtnB,KAAKoN,KAAK2hB,OAAO3L,EAAGvgB,EAAG7C,KAAKsnB,YAAY0H,KAAK,KAAM,KAAMH,GAAGI,MAAO,KAAM,MAC3G,uBAED,SAAO7L,GACH,OAAO,IAAIwL,EAAG5uB,KAAKsnB,WAAYtnB,KAAKoN,KAAK8hB,OAAO9L,EAAGpjB,KAAKsnB,YAAY0H,KAAK,KAAM,KAAMH,GAAGI,MAAO,KAAM,MACxG,oBAED,SAAI7L,GAEA,IADA,IAAIvgB,EAAI7C,KAAKoN,MACNvK,EAAEssB,WAAa,CAClB,IAAMrL,EAAI9jB,KAAKsnB,WAAWlE,EAAGvgB,EAAE+F,KAC/B,GAAI,IAAMkb,EAAG,OAAOjhB,EAAEsD,MACtB2d,EAAI,EAAIjhB,EAAIA,EAAEusB,KAAOtL,EAAI,IAAMjhB,EAAIA,EAAEwsB,MACxC,CACD,OAAO,IACV,wBAGD,SAAQjM,GAGJ,IADA,IAAIvgB,EAAI,EAAGihB,EAAI9jB,KAAKoN,MACb0W,EAAEqL,WAAa,CAClB,IAAMnJ,EAAIhmB,KAAKsnB,WAAWlE,EAAGU,EAAElb,KAC/B,GAAI,IAAMod,EAAG,OAAOnjB,EAAIihB,EAAEsL,KAAKjf,KAC/B6V,EAAI,EAAIlC,EAAIA,EAAEsL,MAEdvsB,GAAKihB,EAAEsL,KAAKjf,KAAO,EAAG2T,EAAIA,EAAEuL,MAC/B,CAEO,OAAQ,CACnB,wBACD,WACI,OAAOrvB,KAAKoN,KAAK+hB,SACpB,mBAED,WACI,OAAOnvB,KAAKoN,KAAK+C,IACpB,uBAED,WACI,OAAOnQ,KAAKoN,KAAKkiB,QACpB,uBAED,WACI,OAAOtvB,KAAKoN,KAAKmiB,QACpB,iCAKD,SAAiBnM,GACb,OAAOpjB,KAAKoN,KAAKoiB,iBAAiBpM,EACrC,wBACD,SAAQA,GACJpjB,KAAKwvB,kBAAkB,SAAC3sB,EAAGihB,GAAJ,OAAWV,EAAEvgB,EAAGihB,IAAI,CAApB,GAC1B,yBACD,WACI,IAAMV,EAAI,GACV,OAAOpjB,KAAKwvB,kBAAkB,SAAC3sB,EAAGihB,GAAJ,OAAWV,EAAE9hB,KAAF,UAAUuB,EAAV,YAAeihB,KAAM,CAAhC,IAAvB,WAAkEV,EAAE7hB,KAAK,MAAzE,IACV,iCAMD,SAAiB6hB,GACb,OAAOpjB,KAAKoN,KAAKqiB,iBAAiBrM,EACrC,4BAED,WACI,OAAO,IAAIsM,GAAG1vB,KAAKoN,KAAM,KAAMpN,KAAKsnB,YAAY,EACnD,gCACD,SAAgBlE,GACZ,OAAO,IAAIsM,GAAG1vB,KAAKoN,KAAMgW,EAAGpjB,KAAKsnB,YAAY,EAChD,mCACD,WACI,OAAO,IAAIoI,GAAG1vB,KAAKoN,KAAM,KAAMpN,KAAKsnB,YAAY,EACnD,uCACD,SAAuBlE,GACnB,OAAO,IAAIsM,GAAG1vB,KAAKoN,KAAMgW,EAAGpjB,KAAKsnB,YAAY,EAChD,OAtFCsH,GA2FAc,GAAAA,WACF,WAAYtM,EAAGvgB,EAAGihB,EAAGkC,IAAG,eACpBhmB,KAAK2vB,UAAY3J,EAAGhmB,KAAK4vB,UAAY,GAErC,IADA,IAAInJ,EAAI,GACDrD,EAAE+L,WAAa,GAAI1I,EAAI5jB,EAAIihB,EAAEV,EAAExa,IAAK/F,GAAK,EAEhDA,GAAKmjB,IAAMS,IAAM,GAAIA,EAAI,EAEzBrD,EAAIpjB,KAAK2vB,UAAYvM,EAAEgM,KAAOhM,EAAEiM,UAAY,CACxC,GAAI,IAAM5I,EAAG,CAGTzmB,KAAK4vB,UAAUtuB,KAAK8hB,GACpB,KACH,CAGDpjB,KAAK4vB,UAAUtuB,KAAK8hB,GAAIA,EAAIpjB,KAAK2vB,UAAYvM,EAAEiM,MAAQjM,EAAEgM,IAC5D,CACJ,uCACD,WACI,IAAIhM,EAAIpjB,KAAK4vB,UAAUvQ,MACjBxc,EAAI,CACN+F,IAAKwa,EAAExa,IACPzC,MAAOid,EAAEjd,OAEb,GAAInG,KAAK2vB,UAAW,IAAKvM,EAAIA,EAAEgM,MAAOhM,EAAE+L,WAAanvB,KAAK4vB,UAAUtuB,KAAK8hB,GAAIA,EAAIA,EAAEiM,WAAY,IAAKjM,EAAIA,EAAEiM,OAAQjM,EAAE+L,WAAanvB,KAAK4vB,UAAUtuB,KAAK8hB,GACrJA,EAAIA,EAAEgM,KACN,OAAOvsB,CACV,wBACD,WACI,OAAO7C,KAAK4vB,UAAUtwB,OAAS,CAClC,qBACD,WACI,GAAI,IAAMU,KAAK4vB,UAAUtwB,OAAQ,OAAO,KACxC,IAAM8jB,EAAIpjB,KAAK4vB,UAAU5vB,KAAK4vB,UAAUtwB,OAAS,GACjD,MAAO,CACHsJ,IAAKwa,EAAExa,IACPzC,MAAOid,EAAEjd,MAEhB,OAxCCupB,GA6CAb,GAAAA,WACF,WAAYzL,EAAGvgB,EAAGihB,EAAGkC,EAAGS,IAAG,eACvBzmB,KAAK4I,IAAMwa,EAAGpjB,KAAKmG,MAAQtD,EAAG7C,KAAKqP,MAAQ,MAAQyU,EAAIA,EAAI+K,EAAGgB,IAAK7vB,KAAKovB,KAAO,MAAQpJ,EAAIA,EAAI6I,EAAGC,MAClG9uB,KAAKqvB,MAAQ,MAAQ5I,EAAIA,EAAIoI,EAAGC,MAAO9uB,KAAKmQ,KAAOnQ,KAAKovB,KAAKjf,KAAO,EAAInQ,KAAKqvB,MAAMlf,IACtF,oCAED,SAAKiT,EAAGvgB,EAAGihB,EAAGkC,EAAGS,GACb,OAAO,IAAIoI,EAAG,MAAQzL,EAAIA,EAAIpjB,KAAK4I,IAAK,MAAQ/F,EAAIA,EAAI7C,KAAKmG,MAAO,MAAQ2d,EAAIA,EAAI9jB,KAAKqP,MAAO,MAAQ2W,EAAIA,EAAIhmB,KAAKovB,KAAM,MAAQ3I,EAAIA,EAAIzmB,KAAKqvB,MACnJ,wBACD,WACI,OAAO,CACV,iCAKD,SAAiBjM,GACb,OAAOpjB,KAAKovB,KAAKI,iBAAiBpM,IAAMA,EAAEpjB,KAAK4I,IAAK5I,KAAKmG,QAAUnG,KAAKqvB,MAAMG,iBAAiBpM,EAClG,iCAKD,SAAiBA,GACb,OAAOpjB,KAAKqvB,MAAMI,iBAAiBrM,IAAMA,EAAEpjB,KAAK4I,IAAK5I,KAAKmG,QAAUnG,KAAKovB,KAAKK,iBAAiBrM,EAClG,oBAED,WACI,OAAOpjB,KAAKovB,KAAKD,UAAYnvB,KAAOA,KAAKovB,KAAK1H,KACjD,uBAED,WACI,OAAO1nB,KAAK0nB,MAAM9e,GACrB,uBAED,WACI,OAAO5I,KAAKqvB,MAAMF,UAAYnvB,KAAK4I,IAAM5I,KAAKqvB,MAAME,QACvD,uBAED,SAAOnM,EAAGvgB,EAAGihB,GACT,IAAIkC,EAAIhmB,KACFymB,EAAI3C,EAAEV,EAAG4C,EAAEpd,KACjB,OAAOod,EAAIS,EAAI,EAAIT,EAAEgJ,KAAK,KAAM,KAAM,KAAMhJ,EAAEoJ,KAAKL,OAAO3L,EAAGvgB,EAAGihB,GAAI,MAAQ,IAAM2C,EAAIT,EAAEgJ,KAAK,KAAMnsB,EAAG,KAAM,KAAM,MAAQmjB,EAAEgJ,KAAK,KAAM,KAAM,KAAM,KAAMhJ,EAAEqJ,MAAMN,OAAO3L,EAAGvgB,EAAGihB,KAC5KgM,OACL,0BACD,WACI,GAAI9vB,KAAKovB,KAAKD,UAAW,OAAON,EAAGC,MACnC,IAAI1L,EAAIpjB,KACR,OAAOojB,EAAEgM,KAAKW,SAAW3M,EAAEgM,KAAKA,KAAKW,UAAY3M,EAAIA,EAAE4M,gBAAgB5M,EAAIA,EAAE4L,KAAK,KAAM,KAAM,KAAM5L,EAAEgM,KAAKa,YAAa,OACtHH,OACL,uBAED,SAAO1M,EAAGvgB,GACN,IAAIihB,EAAGkC,EAAIhmB,KACX,GAAI6C,EAAEugB,EAAG4C,EAAEpd,KAAO,EAAGod,EAAEoJ,KAAKD,WAAanJ,EAAEoJ,KAAKW,SAAW/J,EAAEoJ,KAAKA,KAAKW,UAAY/J,EAAIA,EAAEgK,eACzFhK,EAAIA,EAAEgJ,KAAK,KAAM,KAAM,KAAMhJ,EAAEoJ,KAAKF,OAAO9L,EAAGvgB,GAAI,UAAY,CAC1D,GAAImjB,EAAEoJ,KAAKW,UAAY/J,EAAIA,EAAEkK,eAAgBlK,EAAEqJ,MAAMF,WAAanJ,EAAEqJ,MAAMU,SAAW/J,EAAEqJ,MAAMD,KAAKW,UAAY/J,EAAIA,EAAEmK,gBACpH,IAAMttB,EAAEugB,EAAG4C,EAAEpd,KAAM,CACf,GAAIod,EAAEqJ,MAAMF,UAAW,OAAON,EAAGC,MACjChL,EAAIkC,EAAEqJ,MAAM3H,MAAO1B,EAAIA,EAAEgJ,KAAKlL,EAAElb,IAAKkb,EAAE3d,MAAO,KAAM,KAAM6f,EAAEqJ,MAAMY,YACrE,CACDjK,EAAIA,EAAEgJ,KAAK,KAAM,KAAM,KAAM,KAAMhJ,EAAEqJ,MAAMH,OAAO9L,EAAGvgB,GACxD,CACD,OAAOmjB,EAAE8J,OACZ,sBACD,WACI,OAAO9vB,KAAKqP,KACf,sBAED,WACI,IAAI+T,EAAIpjB,KACR,OAAOojB,EAAEiM,MAAMU,UAAY3M,EAAEgM,KAAKW,UAAY3M,EAAIA,EAAEgN,cAAehN,EAAEgM,KAAKW,SAAW3M,EAAEgM,KAAKA,KAAKW,UAAY3M,EAAIA,EAAE8M,eACnH9M,EAAEgM,KAAKW,SAAW3M,EAAEiM,MAAMU,UAAY3M,EAAIA,EAAEiN,aAAcjN,CAC7D,4BACD,WACI,IAAIA,EAAIpjB,KAAKqwB,YACb,OAAOjN,EAAEiM,MAAMD,KAAKW,UACA3M,GAApBA,GADgCA,EAAIA,EAAE4L,KAAK,KAAM,KAAM,KAAM,KAAM5L,EAAEiM,MAAMa,gBACrEE,cAAoBC,aAAcjN,CAC3C,6BACD,WACI,IAAIA,EAAIpjB,KAAKqwB,YACb,OAAOjN,EAAEgM,KAAKA,KAAKW,UAAiC3M,GAArBA,EAAIA,EAAE8M,eAAqBG,aAAcjN,CAC3E,2BACD,WACI,IAAMA,EAAIpjB,KAAKgvB,KAAK,KAAM,KAAMH,EAAGgB,IAAK,KAAM7vB,KAAKqvB,MAAMD,MACzD,OAAOpvB,KAAKqvB,MAAML,KAAK,KAAM,KAAMhvB,KAAKqP,MAAO+T,EAAG,KACrD,4BACD,WACI,IAAMA,EAAIpjB,KAAKgvB,KAAK,KAAM,KAAMH,EAAGgB,IAAK7vB,KAAKovB,KAAKC,MAAO,MACzD,OAAOrvB,KAAKovB,KAAKJ,KAAK,KAAM,KAAMhvB,KAAKqP,MAAO,KAAM+T,EACvD,0BACD,WACI,IAAMA,EAAIpjB,KAAKovB,KAAKJ,KAAK,KAAM,MAAOhvB,KAAKovB,KAAK/f,MAAO,KAAM,MAAOxM,EAAI7C,KAAKqvB,MAAML,KAAK,KAAM,MAAOhvB,KAAKqvB,MAAMhgB,MAAO,KAAM,MAC7H,OAAOrP,KAAKgvB,KAAK,KAAM,MAAOhvB,KAAKqP,MAAO+T,EAAGvgB,EAChD,8BAED,WACI,IAAMugB,EAAIpjB,KAAKswB,QACf,OAAO7I,KAAK8I,IAAI,EAAGnN,IAAMpjB,KAAKmQ,KAAO,CACxC,sBAGD,WACI,GAAInQ,KAAK+vB,SAAW/vB,KAAKovB,KAAKW,QAAS,MAAMhnB,IAC7C,GAAI/I,KAAKqvB,MAAMU,QAAS,MAAMhnB,IAC9B,IAAMqa,EAAIpjB,KAAKovB,KAAKkB,QACpB,GAAIlN,IAAMpjB,KAAKqvB,MAAMiB,QAAS,MAAMvnB,IACpC,OAAOqa,GAAKpjB,KAAK+vB,QAAU,EAAI,EAClC,OA5GClB,GAkHNA,GAAGC,MAAQ,KAAMD,GAAGgB,KAAM,EAAIhB,GAAGI,OAAQ,EAGzCJ,GAAGC,MAAQ,eAGP,cAAc,eACV9uB,KAAKmQ,KAAO,CACf,CALM,gCAMP,WACI,MAAMpH,GACT,GARM,iBASP,WACI,MAAMA,GACT,GAXM,iBAYP,WACI,MAAMA,GACT,GAdM,gBAeP,WACI,MAAMA,GACT,GAjBM,iBAkBP,WACI,MAAMA,GACT,GApBM,kBAsBP,SAAKqa,EAAGvgB,EAAGihB,EAAGkC,EAAGS,GACb,OAAOzmB,IACV,GAxBM,oBA0BP,SAAOojB,EAAGvgB,EAAGihB,GACT,OAAO,IAAI+K,GAAGzL,EAAGvgB,EACpB,GA5BM,oBA8BP,SAAOugB,EAAGvgB,GACN,OAAO7C,IACV,GAhCM,qBAiCP,WACI,OAAO,CACV,GAnCM,8BAoCP,SAAiBojB,GACb,OAAO,CACV,GAtCM,8BAuCP,SAAiBA,GACb,OAAO,CACV,GAzCM,oBA0CP,WACI,OAAO,IACV,GA5CM,oBA6CP,WACI,OAAO,IACV,GA/CM,mBAgDP,WACI,OAAO,CACV,GAlDM,2BAoDP,WACI,OAAO,CACV,GAtDM,mBAuDP,WACI,OAAO,CACV,KAzDM,EAAI,QAmFToN,GAAAA,WACF,WAAYpN,IAAG,eACXpjB,KAAKsnB,WAAalE,EAAGpjB,KAAKyI,KAAO,IAAImmB,GAAG5uB,KAAKsnB,WAChD,mCACD,SAAIlE,GACA,OAAO,OAASpjB,KAAKyI,KAAKoM,IAAIuO,EACjC,sBACD,WACI,OAAOpjB,KAAKyI,KAAK6mB,QACpB,qBACD,WACI,OAAOtvB,KAAKyI,KAAK8mB,QACpB,mBACD,WACI,OAAOvvB,KAAKyI,KAAK0H,IACpB,wBACD,SAAQiT,GACJ,OAAOpjB,KAAKyI,KAAKsB,QAAQqZ,EAC5B,wBAC4D,SAAQA,GACjEpjB,KAAKyI,KAAK+mB,kBAAkB,SAAC3sB,EAAGihB,GAAJ,OAAWV,EAAEvgB,IAAI,CAAjB,GAC/B,+BAC6E,SAAeugB,EAAGvgB,GAE5F,IADA,IAAMihB,EAAI9jB,KAAKyI,KAAKgoB,gBAAgBrN,EAAE,IAChCU,EAAE4M,WAAa,CACjB,IAAM1K,EAAIlC,EAAE6M,UACZ,GAAI3wB,KAAKsnB,WAAWtB,EAAEpd,IAAKwa,EAAE,KAAO,EAAG,OACvCvgB,EAAEmjB,EAAEpd,IACP,CACJ,6BAGM,SAAawa,EAAGvgB,GACnB,IAAIihB,EACJ,IAAKA,OAAI,IAAWjhB,EAAI7C,KAAKyI,KAAKgoB,gBAAgB5tB,GAAK7C,KAAKyI,KAAKmoB,cAAe9M,EAAE4M,WAC9E,IAAKtN,EAAEU,EAAE6M,UAAU/nB,KAAM,MAEhC,kCACkE,SAAkBwa,GACjF,IAAMvgB,EAAI7C,KAAKyI,KAAKgoB,gBAAgBrN,GACpC,OAAOvgB,EAAE6tB,UAAY7tB,EAAE8tB,UAAU/nB,IAAM,IAC1C,4BACD,WACI,OAAO,IAAIioB,GAAG7wB,KAAKyI,KAAKmoB,cAC3B,gCACD,SAAgBxN,GACZ,OAAO,IAAIyN,GAAG7wB,KAAKyI,KAAKgoB,gBAAgBrN,GAC3C,oBACuC,SAAIA,GACxC,OAAOpjB,KAAKgvB,KAAKhvB,KAAKyI,KAAKymB,OAAO9L,GAAG2L,OAAO3L,GAAG,GAClD,uBAC4B,SAAOA,GAChC,OAAOpjB,KAAKqV,IAAI+N,GAAKpjB,KAAKgvB,KAAKhvB,KAAKyI,KAAKymB,OAAO9L,IAAMpjB,IACzD,wBACD,WACI,OAAOA,KAAKyI,KAAK0mB,SACpB,0BACD,SAAU/L,GACN,IAAIvgB,EAAI7C,KAEA,OAAO6C,EAAEsN,KAAOiT,EAAEjT,OAAStN,EAAIugB,EAAGA,EAAIpjB,MAAOojB,EAAEvZ,SAAS,SAAAuZ,GAC5DvgB,EAAIA,EAAE+e,IAAIwB,EACb,IAAIvgB,CACR,wBACD,SAAQugB,GACJ,KAAMA,aAAaoN,GAAK,OAAO,EAC/B,GAAIxwB,KAAKmQ,OAASiT,EAAEjT,KAAM,OAAO,EAEjC,IADA,IAAMtN,EAAI7C,KAAKyI,KAAKmoB,cAAe9M,EAAIV,EAAE3a,KAAKmoB,cACxC/tB,EAAE6tB,WAAa,CACjB,IAAMtN,EAAIvgB,EAAE8tB,UAAU/nB,IAAKod,EAAIlC,EAAE6M,UAAU/nB,IAC3C,GAAI,IAAM5I,KAAKsnB,WAAWlE,EAAG4C,GAAI,OAAO,CAC3C,CACD,OAAO,CACV,wBACD,WACI,IAAM5C,EAAI,GACV,OAAOpjB,KAAK6J,SAAS,SAAAhH,GACjBugB,EAAE9hB,KAAKuB,EACV,IAAIugB,CACR,yBACD,WACI,IAAMA,EAAI,GACV,OAAOpjB,KAAK6J,SAAS,SAAAhH,GAAC,OAAIugB,EAAE9hB,KAAKuB,EAAX,IAAiB,aAAeugB,EAAE6B,WAAa,GACxE,qBACD,SAAK7B,GACD,IAAMvgB,EAAI,IAAI2tB,EAAGxwB,KAAKsnB,YACtB,OAAOzkB,EAAE4F,KAAO2a,EAAGvgB,CACtB,OAvFC2tB,GA0FAK,GAAAA,WACF,WAAYzN,IAAG,eACXpjB,KAAK8wB,KAAO1N,CACf,uCACD,WACI,OAAOpjB,KAAK8wB,KAAKH,UAAU/nB,GAC9B,wBACD,WACI,OAAO5I,KAAK8wB,KAAKJ,SACpB,OATCG,GAqCIE,GAAAA,WACN,WAAY3N,IAAG,eACXpjB,KAAK4J,OAASwZ,EAGdA,EAAEhN,KAAK2R,GAAGT,WACb,yCAOM,SAAUlE,GACb,IADgB,EACZvgB,EAAI,IAAI2tB,GAAGzI,GAAGT,YADF,UAEAtnB,KAAK4J,QAFL,IAEhB,gCAAWwZ,EAAX,QAA6BvgB,EAAIA,EAAE+e,IAAIwB,EAAvC,CAFgB,+CAGAA,GAHA,IAGhB,gCAAWU,EAAX,QAAmBjhB,EAAIA,EAAE+e,IAAIkC,EAA7B,CAHgB,+BAIhB,OAAO,IAAIiN,EAAGluB,EAAE+kB,UACnB,uBAMM,SAAOxE,GAAG,gBACGpjB,KAAK4J,QADR,IACb,4BAA6B,GAA7B,QAAmConB,WAAW5N,GAAI,OAAO,CAAzD,CADa,+BAEb,OAAO,CACV,wBACD,SAAQA,GACJ,OAAOoI,GAAGxrB,KAAK4J,OAAQwZ,EAAExZ,QAAS,SAACwZ,EAAGvgB,GAAJ,OAAUugB,EAAE2K,QAAQlrB,EAApB,GACrC,wBAvBD,WACI,OAAO,IAAIkuB,EAAG,GACjB,OATKA,GAoDAE,GAAAA,WACN,WAAY7N,IAAG,eACXpjB,KAAKmG,MAAQid,CAChB,qCAWM,SAAMA,GACT,GAAIA,EAAE+L,UAAW,OAAOnvB,KAAKmG,MAGzB,IADA,IAAItD,EAAI7C,KAAKmG,MACJ2d,EAAI,EAAGA,EAAIV,EAAE9jB,OAAS,IAAKwkB,EAAG,IACtC2K,GAD0C5rB,GAAKA,EAAEyqB,SAAS1jB,QAAU,CAAC,GAAGwZ,EAAEvO,IAAIiP,KACvE,OAAO,KACf,OAAOjhB,GAAKA,EAAEyqB,SAAS1jB,QAAU,CAAC,GAAGwZ,EAAEgF,iBAAqB,IAEnE,oBAMM,SAAIhF,EAAGvgB,GACV7C,KAAKkxB,aAAa9N,EAAE+E,WAAW/E,EAAEgF,eAAiBsG,GAAG7rB,EACxD,uBAKM,SAAOugB,GAAG,WACTvgB,EAAIklB,GAAGQ,YAAazE,EAAI,CAAC,EAAGkC,EAAI,GACpC5C,EAAEvZ,SAAS,SAACuZ,EAAGqD,GACX,IAAK5jB,EAAEsuB,oBAAoB1K,GAAI,CAE3B,IAAMrD,EAAI,EAAK8N,aAAaruB,GAC5B,EAAKuuB,aAAahO,EAAGU,EAAGkC,GAAIlC,EAAI,CAAC,EAAGkC,EAAI,GAAInjB,EAAI4jB,EAAE0B,SACrD,CACD/E,EAAIU,EAAE2C,EAAE2B,eAAiBsG,GAAGtL,GAAK4C,EAAE1kB,KAAKmlB,EAAE2B,cAC7C,IACD,IAAM3B,EAAIzmB,KAAKkxB,aAAaruB,GAC5B7C,KAAKoxB,aAAa3K,EAAG3C,EAAGkC,EAC3B,uBAMM,SAAO5C,GACV,IAAMvgB,EAAI7C,KAAKqxB,MAAMjO,EAAE+E,WACvBsG,GAAG5rB,IAAMA,EAAEyqB,SAAS1jB,eAAiB/G,EAAEyqB,SAAS1jB,OAAOwZ,EAAEgF,cAC5D,wBACD,SAAQhF,GACJ,OAAOyK,GAAG7tB,KAAKmG,MAAOid,EAAEjd,MAC3B,6BAIM,SAAaid,GAChB,IAAIvgB,EAAI7C,KAAKmG,MACbtD,EAAEyqB,SAAS1jB,SAAW/G,EAAEyqB,SAAW,CAC/B1jB,OAAQ,CAAC,IAEb,IAAK,IAAIka,EAAI,EAAGA,EAAIV,EAAE9jB,SAAUwkB,EAAG,CAC/B,IAAIkC,EAAInjB,EAAEyqB,SAAS1jB,OAAOwZ,EAAEvO,IAAIiP,IAChC2K,GAAGzI,IAAMA,EAAEsH,SAAS1jB,SAAWoc,EAAI,CAC/BsH,SAAU,CACN1jB,OAAQ,CAAC,IAEd/G,EAAEyqB,SAAS1jB,OAAOwZ,EAAEvO,IAAIiP,IAAMkC,GAAInjB,EAAImjB,CAC5C,CACD,OAAOnjB,EAAEyqB,SAAS1jB,MACrB,6BAIM,SAAawZ,EAAGvgB,EAAGihB,GACtB8H,GAAG/oB,GAAI,SAACA,EAAGihB,GAAJ,OAAUV,EAAEvgB,GAAKihB,CAAjB,IADkB,gBAETA,GAFS,IAEzB,gCAAWjhB,EAAX,eAA0BugB,EAAEvgB,EAA5B,CAFyB,+BAG5B,sBACD,WACI,OAAO,IAAIouB,EAAGvC,GAAG1uB,KAAKmG,OACzB,wBAnFD,WACI,OAAO,IAAI8qB,EAAG,CACV3D,SAAU,CAAC,GAElB,OARK2D,OA2RJK,IAAAA,EAAAA,EAAAA,IAKF,WAAYlO,GAA2F,IAAxFvgB,EAAwF,uDAApF,KAAMihB,EAA8E,uDAA1E,GAAIkC,EAAsE,uDAAlE,GAAIS,EAA8D,uDAA1D,KAAMpnB,EAAoD,uDAAhD,IAA4BukB,EAAoB,uDAAhB,KAAM3hB,EAAU,uDAAN,MAAM,eACnGjC,KAAKuL,KAAO6X,EAAGpjB,KAAKuxB,gBAAkB1uB,EAAG7C,KAAKwxB,gBAAkB1N,EAAG9jB,KAAKyxB,QAAUzL,EAClFhmB,KAAKunB,MAAQd,EAAGzmB,KAAK0xB,UAAYryB,EAAGW,KAAK2xB,QAAU/N,EAAG5jB,KAAK4xB,MAAQ3vB,EAAGjC,KAAK4kB,EAAI,KAE/E5kB,KAAK6kB,EAAI,KAAM7kB,KAAK2xB,QAAS3xB,KAAK4xB,KACrC,IAmHL,SAASC,GAAGzO,EAAGvgB,GACX,OAAO,SAASugB,GACZ,MAAO,iBAAmBA,GAAKoJ,OAAOsF,UAAU1O,KAAO2F,GAAG3F,IAAMA,GAAKoJ,OAAOuF,kBAAoB3O,GAAKoJ,OAAOwF,gBAC/G,CAFM,CAELnvB,GAIF,SAASugB,GACL,MAAO,CACHiL,aAAc,GAAKjL,EAE1B,CAJD,CAIEvgB,GAAK,SAASugB,EAAGvgB,GACf,GAAIugB,EAAEja,EAAG,CACL,GAAIolB,MAAM1rB,GAAI,MAAO,CACjByrB,YAAa,OAEjB,GAAIzrB,IAAM,IAAO,MAAO,CACpByrB,YAAa,YAEjB,GAAIzrB,KAAM,IAAQ,MAAO,CACrByrB,YAAa,YAEpB,CACD,MAAO,CACHA,YAAavF,GAAGlmB,GAAK,KAAOA,EAEnC,CAfM,CAeLugB,EAAGvgB,EACR,KAkB+DovB,IAAAA,EAAAA,EAAAA,IAC5D,cAAc,eAGVjyB,KAAK2I,OAAI,CACZ,IAG8DupB,GAAAA,SAAAA,6GAAAA,CAAWD,IAEhBE,GAAAA,SAAAA,iCAC1D,WAAY/O,GAAG,6BACX,gBAAcgP,SAAWhP,EADd,CAEd,kBAHyD+O,CAAWF,IAMVI,GAAAA,SAAAA,iCAC3D,WAAYjP,GAAG,6BACX,gBAAcgP,SAAWhP,EADd,CAEd,kBAH0DiP,CAAWJ,IAWhEK,GAAAA,SAAAA,iCACN,WAAYlP,EAAGvgB,GAAG,6BACd,gBAAciiB,EAAI1B,EAAG,EAAK2B,EAAIliB,EADhB,CAEjB,kBAHKyvB,CAAWL,IAgCXM,GAAAA,WACN,WAAYnP,EAAGvgB,IAAG,eACd7C,KAAKwyB,WAAapP,EAAGpjB,KAAKyyB,OAAS5vB,CACtC,oCAUqD,WAClD,YAAO,IAAW7C,KAAKwyB,iBAAc,IAAWxyB,KAAKyyB,MACxD,wBACD,SAAQrP,GACJ,OAAOpjB,KAAKyyB,SAAWrP,EAAEqP,SAAWzyB,KAAKwyB,aAAepP,EAAEoP,YAAcxyB,KAAKwyB,WAAWzE,QAAQ3K,EAAEoP,aAAepP,EAAEoP,WACtH,uBAd2C,WACxC,OAAO,IAAID,CACd,uBACyD,SAAcnP,GACpE,OAAO,IAAImP,OAAG,EAAQnP,EACzB,2BAC6E,SAAkBA,GAC5F,OAAO,IAAImP,EAAGnP,EACjB,OAZKmP,GAgEAG,IAAAA,EAAAA,EAAAA,IAAAA,SAAAA,uBAKAC,GAAAA,SAAAA,iCACN,WAAYvP,EAAGvgB,EAAGihB,GAAW,MAARkC,EAAQ,uDAAJ,GAAI,uBACzB,gBAAcpd,IAAMwa,EAAG,EAAKjd,MAAQtD,EAAG,EAAK+vB,aAAe9O,EAAG,EAAK+O,gBAAkB7M,EACrF,EAAKze,KAAO,EAFa,CAG5B,4CACD,WACI,OAAO,IACV,OAPKorB,CAAWD,IAsBXI,GAAAA,SAAAA,iCACN,WAAY1P,EAAGvgB,EAAGihB,EAAGkC,GAAW,MAARS,EAAQ,uDAAJ,GAAI,uBAC5B,gBAAc7d,IAAMwa,EAAG,EAAK3a,KAAO5F,EAAG,EAAKkwB,UAAYjP,EAAG,EAAK8O,aAAe5M,EAC9E,EAAK6M,gBAAkBpM,EAAG,EAAKlf,KAAO,EAFV,CAG/B,4CACD,WACI,OAAOvH,KAAK+yB,SACf,OAPKD,CAAWJ,IAU+CM,GAAAA,SAAAA,iCAChE,WAAY5P,EAAGvgB,GAAG,6BACd,gBAAc+F,IAAMwa,EAAG,EAAKwP,aAAe/vB,EAAG,EAAK0E,KAAO,EAC1D,EAAKsrB,gBAAkB,GAFT,CAGjB,4CACD,WACI,OAAO,IACV,OAP+DG,CAAWN,IAgBrEO,GAAAA,SAAAA,iCACN,WAAY7P,EAAGvgB,GAAG,6BACd,gBAAc+F,IAAMwa,EAAG,EAAKwP,aAAe/vB,EAAG,EAAK0E,KAAO,EAC1D,EAAKsrB,gBAAkB,GAFT,CAGjB,4CACD,WACI,OAAO,IACV,OAPKI,CAAWP,IAmEfQ,IAAAA,EAAAA,EAAAA,IACF,WAAY9P,EAAGvgB,IAAG,eACd7C,KAAK0mB,WAAatD,EAAGpjB,KAAKmJ,EAAItG,CACjC,IAcL,SAASswB,GAAG/P,EAAGvgB,GACX,OAAIugB,EAAEja,EACF,UAAU,IAAIiV,KAAK,IAAMvb,EAAE4pB,SAAS7N,cAAcjc,QAAQ,QAAS,IAAIA,QAAQ,IAAK,IAApF,aAA4F,YAAcE,EAAEoqB,aAAalO,OAAO,GAAhI,KAEG,CACH0N,QAAS,GAAK5pB,EAAE4pB,QAChBE,MAAO9pB,EAAEoqB,YAEhB,CAOD,SAASmG,GAAGhQ,EAAGvgB,GACX,OAAOugB,EAAEja,EAAItG,EAAEwwB,WAAaxwB,EAAEywB,cACjC,CAED,SAASC,GAAGnQ,EAAGvgB,GACX,OAAOswB,GAAG/P,EAAGvgB,EAAE2wB,cAClB,CASD,SAASC,GAAGrQ,EAAGvgB,GACX,OAAO,SAASugB,GACZ,OAAO,IAAIuE,GAAG,CAAE,WAAYvE,EAAE7c,UAAW,YAAa6c,EAAE6D,UAC3D,CAFM,CAEL7D,GAAGsQ,MAAM,aAAaA,MAAM7wB,GAAGglB,iBACpC,CAED,SAAS8L,GAAGvQ,EAAGvgB,GACX,OAAO4wB,GAAGrQ,EAAEsD,WAAY7jB,EAAE0I,KAC7B,CAiBD,SAASqoB,GAAGxQ,GACR,OAAO,IAAIuE,GAAG,CAAE,WAAYvE,EAAEsD,WAAWngB,UAAW,YAAa6c,EAAEsD,WAAWO,WAAYY,iBAC7F,CAED,SAASgM,GAAGzQ,EAAGvgB,EAAGihB,GACd,MAAO,CACHnc,KAAMgsB,GAAGvQ,EAAGvgB,GACZ+G,OAAQka,EAAE3d,MAAMmnB,SAAS1jB,OAEhC,CAkBD,SAASkqB,GAAG1Q,EAAGvgB,GACX,IAAIihB,EACJ,GAAIjhB,aAAa8vB,GAAI7O,EAAI,CACrBiQ,OAAQF,GAAGzQ,EAAGvgB,EAAE+F,IAAK/F,EAAEsD,aACnB,GAAItD,aAAamwB,GAAIlP,EAAI,CAC7B5C,OAAQyS,GAAGvQ,EAAGvgB,EAAE+F,WACZ,GAAI/F,aAAaiwB,GAAIhP,EAAI,CAC7BiQ,OAAQF,GAAGzQ,EAAGvgB,EAAE+F,IAAK/F,EAAE4F,MACvBurB,WAAYC,GAAGpxB,EAAEkwB,gBACb,CACJ,KAAMlwB,aAAaowB,IAAK,OAAOlqB,IAC/B+a,EAAI,CACAoQ,OAAQP,GAAGvQ,EAAGvgB,EAAE+F,KAEvB,CACD,OAAO/F,EAAEgwB,gBAAgBvzB,OAAS,IAAMwkB,EAAEqQ,iBAAmBtxB,EAAEgwB,gBAAgBpa,KAAK,SAAA2K,GAAC,OAAI,SAASA,EAAGvgB,GACjG,IAAMihB,EAAIjhB,EAAEiJ,UACZ,GAAIgY,aAAaoO,GAAI,MAAO,CACxBkC,UAAWvxB,EAAEwuB,MAAMxJ,kBACnBwM,iBAAkB,gBAEtB,GAAIvQ,aAAaqO,GAAI,MAAO,CACxBiC,UAAWvxB,EAAEwuB,MAAMxJ,kBACnByM,sBAAuB,CACnBva,OAAQ+J,EAAEsO,WAGlB,GAAItO,aAAauO,GAAI,MAAO,CACxB+B,UAAWvxB,EAAEwuB,MAAMxJ,kBACnB0M,mBAAoB,CAChBxa,OAAQ+J,EAAEsO,WAGlB,GAAItO,aAAawO,GAAI,MAAO,CACxB8B,UAAWvxB,EAAEwuB,MAAMxJ,kBACnB2M,UAAW1Q,EAAEiB,GAEjB,MAAMhc,GACT,CAvBwF,CAuBvF,EAAGqa,EAvBgF,KAuBzEvgB,EAAE+vB,aAAa6B,SAAW3Q,EAAE4Q,gBAAkB,SAAStR,EAAGvgB,GAClE,YAAO,IAAWA,EAAE2vB,WAAa,CAC7BA,WAAYe,GAAGnQ,EAAGvgB,EAAE2vB,kBACpB,IAAW3vB,EAAE4vB,OAAS,CACtBA,OAAQ5vB,EAAE4vB,QACV1pB,GACP,CANyD,CAMxDqa,EAAGvgB,EAAE+vB,eAAgB9O,CAC1B,CAsHD,SAASmQ,GAAG7Q,GACR,IAAMvgB,EAAI,GACV,OAAOugB,EAAExZ,OAAOC,SAAS,SAAAuZ,GAAC,OAAIvgB,EAAEvB,KAAK8hB,EAAEyE,kBAAb,IAAmC,CACzD8M,WAAY9xB,EAEnB,CAsBG,SAAS+xB,GAAGxR,GACZ,OAAO,IAAI8P,GAAG9P,GAAwB,EACzC,KA6HKyR,GAAAA,SAAAA,iCACF,WAAYzR,EAAGvgB,EAAGihB,EAAGkC,GAAG,6BACpB,gBAAc8O,gBAAkB1R,EAAG,EAAK2R,oBAAsBlyB,EAAG,EAAKmyB,WAAalR,EACnF,EAAKgB,EAAIkB,EAAG,EAAKkB,GAAI,EAFD,CAGvB,kCACD,WACI,GAAIlnB,KAAKknB,EAAG,MAAM,IAAIlC,EAAEL,EAAG,0CAC9B,kBACiE,SAAEvB,EAAGvgB,EAAGihB,GAAG,WACzE,OAAO9jB,KAAK2nB,KAAMxkB,QAAQiV,IAAI,CAAEpY,KAAK80B,gBAAgBlP,WAAY5lB,KAAK+0B,oBAAoBnP,aAAcxO,MAAM,+BAAE4O,EAAF,KAAKS,EAAL,YAAY,EAAKuO,WAAW9Q,EAAEd,EAAGvgB,EAAGihB,EAAGkC,EAAGS,EAA1C,IAA+CrgB,OAAO,SAAAgd,GAChK,KAAM,kBAAoBA,EAAEzb,MAAQyb,EAAE3b,OAASgd,IAAM,EAAKqQ,gBAAgBG,kBAC1E,EAAKF,oBAAoBE,mBAAoB7R,GAAK,IAAI4B,EAAEZ,EAAGhB,EAAE6B,WAChE,GACJ,kBACuF,SAAE7B,EAAGvgB,EAAGihB,EAAGkC,GAAG,WAClG,OAAOhmB,KAAK2nB,KAAMxkB,QAAQiV,IAAI,CAAEpY,KAAK80B,gBAAgBlP,WAAY5lB,KAAK+0B,oBAAoBnP,aAAcxO,MAAM,+BAAEqP,EAAF,KAAKpnB,EAAL,YAAY,EAAK21B,WAAW3Q,EAAEjB,EAAGvgB,EAAGihB,EAAG2C,EAAGpnB,EAAG2mB,EAA7C,IAAkD5f,OAAO,SAAAgd,GACnK,KAAM,kBAAoBA,EAAEzb,MAAQyb,EAAE3b,OAASgd,IAAM,EAAKqQ,gBAAgBG,kBAC1E,EAAKF,oBAAoBE,mBAAoB7R,GAAK,IAAI4B,EAAEZ,EAAGhB,EAAE6B,WAChE,GACJ,0BACD,WACIjlB,KAAKknB,GAAI,CACZ,OAtBC2N,wEA2BS5pB,GAAG,EAAHA,6EAAf,WAAkBmY,EAAGvgB,GAArB,kFACUihB,EAAII,EAAEd,GAAI4C,EAAI4N,GAAG9P,EAAEgB,GAAK,aAAc2B,EAAI,CAC5CyO,OAAQryB,EAAE4V,KAAK,SAAA2K,GAAC,OAAI0Q,GAAGhQ,EAAEgB,EAAG1B,EAAZ,KAFxB,SAIUU,EAAEI,EAAE,SAAU8B,EAAGS,GAJ3B,kEAqEI,IAAM0O,GAAK,IAAIzd,IAWnB,SAAS0d,GAAGhS,GACR,GAAIA,EAAEiS,YAAa,MAAM,IAAIrQ,EAAEL,EAAG,2CAClC,IAAKwQ,GAAG9f,IAAI+N,GAAI,CACZS,EAAE,oBAAqB,0BACvB,IAAMxkB,EAAI,SAAS+jB,GACf,OAAO,IAAImH,GAAGnH,EAAGkS,MAAMC,KAAK,MAC/B,CAFS,EAEP1yB,EAAIugB,EAAEoS,YAAa1R,EAAIV,EAAE1J,IAAIhO,QAAQ0R,OAAS,GAAI4I,EAAI5C,EAAEqS,gBAAiBhP,EAAIrD,EAAEsS,kBAClF,IAAIlP,EAAE3jB,EAAGihB,EAAGkC,EAAGS,EAAEnhB,KAAMmhB,EAAEG,IAAKH,EAAEkP,6BAA8BlP,EAAEmP,kCAAmCnP,EAAEM,mBAAoBnD,EAAIgR,GAAGxR,EAAEoS,aAAcvzB,EAAI,SAASmhB,EAAGvgB,EAAGihB,EAAGkC,GAClK,OAAO,IAAI6O,GAAGzR,EAAGvgB,EAAGihB,EAAGkC,EAC1B,CAFmJ,CAElJ5C,EAAEyS,iBAAkBzS,EAAE0S,qBAAsBz2B,EAAGukB,GACjDuR,GAAG/f,IAAIgO,EAAGnhB,EACb,CACD,IAAIY,EAAGihB,EAAGkC,EAAGS,EAgBV,OAAO0O,GAAGtgB,IAAIuO,EACpB,KAWK2S,GAAAA,WACF,WAAY3S,GACR,IAAIvgB,EACJ,IAFW,oBAEP,IAAWugB,EAAE9d,KAAM,CACnB,QAAI,IAAW8d,EAAEwD,IAAK,MAAM,IAAI5B,EAAEX,EAAG,sDACrCrkB,KAAKsF,KAAO,2BAA4BtF,KAAK4mB,KAAM,CACtD,MAAM5mB,KAAKsF,KAAO8d,EAAE9d,KAAMtF,KAAK4mB,IAAM,QAAU/jB,EAAIugB,EAAEwD,WAAQ,IAAW/jB,GAAKA,EAC9E,GAAI7C,KAAKg2B,YAAc5S,EAAE4S,YAAah2B,KAAKi2B,4BAA8B7S,EAAE6S,+BAC3E,IAAW7S,EAAE8S,eAAgBl2B,KAAKk2B,eAAiB,aAAe,CAC9D,IAAK,IAAM9S,EAAE8S,gBAAkB9S,EAAE8S,eAAiB,QAAS,MAAM,IAAIlR,EAAEX,EAAG,2CAC1ErkB,KAAKk2B,eAAiB9S,EAAE8S,cAC3B,CACDl2B,KAAK21B,+BAAiCvS,EAAEuS,6BAA8B31B,KAAK41B,oCAAsCxS,EAAEwS,kCACnH51B,KAAK+mB,kBAAoB3D,EAAE2D,gBAAiB,SAAS3D,EAAGvgB,EAAGihB,EAAGkC,GAC1D,IAAI,IAAOnjB,IAAK,IAAOmjB,EAAG,MAAM,IAAIhB,EAAEX,EAAN,UAClC,+BADkC,gBAC8B,oCAD9B,6BACnC,CAF2C,CAE1C,EAAgCjB,EAAEuS,6BAA8B,EAAqCvS,EAAEwS,kCAC5G,uCACD,SAAQxS,GACJ,OAAOpjB,KAAKsF,OAAS8d,EAAE9d,MAAQtF,KAAK4mB,MAAQxD,EAAEwD,KAAO5mB,KAAKg2B,cAAgB5S,EAAE4S,aAAeh2B,KAAKk2B,iBAAmB9S,EAAE8S,gBAAkBl2B,KAAK21B,+BAAiCvS,EAAEuS,8BAAgC31B,KAAK41B,oCAAsCxS,EAAEwS,mCAAqC51B,KAAKi2B,4BAA8B7S,EAAE6S,2BAA6Bj2B,KAAK+mB,kBAAoB3D,EAAE2D,eACjY,OAnBCgP,GA0CII,GAAAA,WAEN,WAAY/S,EAAGvgB,EAAGihB,EAAGkC,IAAG,eACpBhmB,KAAK61B,iBAAmBzS,EAAGpjB,KAAK81B,qBAAuBjzB,EAAG7C,KAAKw1B,YAAc1R,EAC7E9jB,KAAKo2B,KAAOpQ,EAIZhmB,KAAKuH,KAAO,iBAAkBvH,KAAKy1B,gBAAkB,SAAUz1B,KAAKq2B,UAAY,IAAIN,GAAG,CAAC,GACxF/1B,KAAKs2B,iBAAkB,CAC1B,iCAIM,WACH,IAAKt2B,KAAKo2B,KAAM,MAAM,IAAIpR,EAAEL,EAAG,gFAC/B,OAAO3kB,KAAKo2B,IACf,2BACD,WACI,OAAOp2B,KAAKs2B,eACf,0BACD,WACI,YAAO,IAAWt2B,KAAKu2B,cAC1B,6BACD,SAAanT,GACT,GAAIpjB,KAAKs2B,gBAAiB,MAAM,IAAItR,EAAEL,EAAG,sKACzC3kB,KAAKq2B,UAAY,IAAIN,GAAG3S,QAAI,IAAWA,EAAE4S,cAAgBh2B,KAAK61B,iBAAmB,SAASzS,GACtF,IAAKA,EAAG,OAAO,IAAIiC,EACnB,OAAQjC,EAAE7b,MACR,IAAK,OACH,IAAM1E,EAAIugB,EAAEoT,OACZ,OAAO,IAAIpQ,EAAEvjB,EAAGugB,EAAEqT,cAAgB,IAAKrT,EAAEsT,UAAY,KAAMtT,EAAEuT,kBAAoB,MAEnF,IAAK,WACH,OAAOvT,EAAEoT,OAEX,QACE,MAAM,IAAIxR,EAAEX,EAAG,qEAEtB,CAbgF,CAa/EjB,EAAE4S,aACP,6BACD,WACI,OAAOh2B,KAAKq2B,SACf,gCACD,WACI,OAAOr2B,KAAKs2B,iBAAkB,EAAIt2B,KAAKq2B,SAC1C,wBACD,WACI,OAAOr2B,KAAKu2B,iBAAmBv2B,KAAKu2B,eAAiBv2B,KAAK42B,cAAe52B,KAAKu2B,cACjF,uBACkF,WAC/E,MAAO,CACH7c,IAAK1Z,KAAKo2B,KACV1P,WAAY1mB,KAAKw1B,YACjBqB,SAAU72B,KAAKq2B,UAEtB,2BAOM,WACH,OAAO,SAASjT,GACZ,IAAMvgB,EAAIsyB,GAAGtgB,IAAIuO,GACjBvgB,IAAMghB,EAAE,oBAAqB,sBAAuBsR,GAAGjU,OAAOkC,GAAIvgB,EAAEi0B,YACvE,CAHM,CAGL92B,MAAOmD,QAAQC,SACpB,OApEK+yB,GAiFV,SAASY,GAAGl0B,EAAGihB,GACX,IAAMkC,EAAI,iBAAmBnjB,EAAIA,GAAIugB,EAAAA,EAAAA,MAAKqD,EAAI,iBAAmB5jB,EAAIA,EAAIihB,GAAK,YAAazkB,GAAI2a,EAAAA,EAAAA,IAAagM,EAAG,kBAAkBnN,aAAa,CAC1IyH,WAAYmG,IAEhB,IAAKpnB,EAAE23B,aAAc,CACjB,IAAM5T,GAAIta,EAAAA,EAAAA,IAAE,aACZsa,GAAK6T,GAAE,WAAF,GAAG53B,GAAH,eAAS+jB,IACjB,CACD,OAAO/jB,CACV,CAcG,SAAS43B,GAAG7T,EAAGvgB,EAAGihB,GAAW,IACzB2C,EADiBT,EAAQ,uDAAJ,CAAC,EAEpB3mB,GAAK+jB,EAAI0F,GAAG1F,EAAG+S,KAAKe,eAC1B,GAAI,6BAA+B73B,EAAEiG,MAAQjG,EAAEiG,OAASzC,GAAK8F,EAAE,sFAC/Dya,EAAE+T,aAAavvB,OAAO+mB,OAAO/mB,OAAO+mB,OAAO,CAAC,EAAGtvB,GAAI,CAC/CiG,KAAM,GAAF,OAAKzC,EAAL,YAAUihB,GACd8C,KAAK,KACJZ,EAAEoR,cAAe,CAClB,IAAIv0B,EAAGihB,EACP,GAAI,iBAAmBkC,EAAEoR,cAAev0B,EAAImjB,EAAEoR,cAAetT,EAAIX,EAAEM,cAAgB,CAG/E5gB,GAAIojB,EAAAA,EAAAA,IAAED,EAAEoR,cAAe,QAAU3Q,EAAIrD,EAAEgT,YAAS,IAAW3P,OAAI,EAASA,EAAE/a,QAAQnF,WAClF,IAAMlH,EAAI2mB,EAAEoR,cAAczwB,KAAOqf,EAAEoR,cAAcxwB,QACjD,IAAKvH,EAAG,MAAM,IAAI2lB,EAAEX,EAAG,wDACvBP,EAAI,IAAIX,EAAE9jB,EACb,CACD+jB,EAAEyS,iBAAmB,IAAItQ,EAAE,IAAIL,EAAEriB,EAAGihB,GACvC,CACJ,KAkJSuT,GAAAA,WAEN,WAAYjU,EAIZvgB,EAAGihB,IAAG,eACF9jB,KAAKs3B,UAAYz0B,EAAG7C,KAAKgL,KAAO8Y,EAEhC9jB,KAAKuH,KAAO,WAAYvH,KAAKu3B,UAAYnU,CAC5C,mCACD,WACI,OAAOpjB,KAAKgL,KAAKO,IACpB,iBAGM,WACH,OAAOvL,KAAKgL,KAAKO,KAAK6c,aACzB,mBAIM,WACH,OAAOpoB,KAAKgL,KAAKO,KAAKsc,iBACzB,qBAGM,WACH,OAAO,IAAI2P,GAAGx3B,KAAKu3B,UAAWv3B,KAAKs3B,UAAWt3B,KAAKgL,KAAKO,KAAK4c,UAChE,8BACD,SAAc/E,GACV,OAAO,IAAIiU,EAAGr3B,KAAKu3B,UAAWnU,EAAGpjB,KAAKgL,KACzC,OAhCKqsB,GAsCAI,GAAAA,WAGN,WAAYrU,EAIZvgB,EAAGihB,IAAG,eACF9jB,KAAKs3B,UAAYz0B,EAAG7C,KAAK03B,OAAS5T,EAElC9jB,KAAKuH,KAAO,QAASvH,KAAKu3B,UAAYnU,CACzC,6CACD,SAAcA,GACV,OAAO,IAAIqU,EAAGz3B,KAAKu3B,UAAWnU,EAAGpjB,KAAK03B,OACzC,OAdKD,GAoBAD,GAAAA,SAAAA,iCAEN,WAAYpU,EAAGvgB,EAAGihB,GAAG,6BACjB,cAAMV,EAAGvgB,EAAG,IAAIyuB,GAAGxN,KAAU6T,MAAQ7T,EAErC,EAAKvc,KAAO,aAHK,CAIpB,gCACsC,WACnC,OAAOvH,KAAK03B,OAAOnsB,KAAK6c,aAC3B,mBAIM,WACH,OAAOpoB,KAAK03B,OAAOnsB,KAAKsc,iBAC3B,qBAIM,WACH,IAAMzE,EAAIpjB,KAAK23B,MAAMxP,UACrB,OAAO/E,EAAE+L,UAAY,KAAO,IAAIkI,GAAGr3B,KAAKu3B,UACvB,KAAM,IAAIrP,GAAG9E,GACjC,8BACD,SAAcA,GACV,OAAO,IAAIoU,EAAGx3B,KAAKu3B,UAAWnU,EAAGpjB,KAAK23B,MACzC,OA1BKH,CAAWC,IA6BrB,SAASG,GAAGxU,EAAGvgB,GAAS,2BAAHihB,EAAG,iCAAHA,EAAG,kBACpB,GAAIV,GAAI+C,EAAAA,EAAAA,IAAE/C,GAAIoF,GAAG,aAAc,OAAQ3lB,GAAIugB,aAAa+S,GAAI,CACxD,IAAMnQ,EAAI2B,GAAGU,WAAH,MAAAV,GAAE,CAAY9kB,GAAZ,OAAkBihB,IAC9B,OAAO6E,GAAG3C,GAAI,IAAIwR,GAAGpU,EAAoB,KAAM4C,EAClD,CAEG,KAAM5C,aAAaiU,IAAMjU,aAAaoU,IAAK,MAAM,IAAIxS,EAAEX,EAAG,iHAC1D,IAAM2B,EAAI5C,EAAEuU,MAAMjE,MAAM/L,GAAGU,WAAH,MAAAV,GAAE,CAAY9kB,GAAZ,OAAkBihB,KAC5C,OAAO6E,GAAG3C,GAAI,IAAIwR,GAAGpU,EAAEmU,UACN,KAAMvR,EAE9B,KA+ES6R,GAAAA,WAEN,WAAYzU,IAAG,eACXpjB,KAAK83B,YAAc1U,CACtB,wCAwBM,WACH,OAAOpjB,KAAK83B,YAAYzE,UAC3B,6BAKM,WACH,OAAOrzB,KAAK83B,YAAYxE,cAC3B,yBAKM,WACH,MAAO,iBAAmBtzB,KAAKqzB,WAAa,GAC/C,wBAMM,SAAQjQ,GACX,OAAOpjB,KAAK83B,YAAY/J,QAAQ3K,EAAE0U,YACrC,mCA1CM,SAAwB1U,GAC3B,IACI,OAAO,IAAIyU,EAAGhM,GAAGiB,iBAAiB1J,GAGrC,CAFC,MAAOA,GACL,MAAM,IAAI4B,EAAEX,EAAG,gDAAkDjB,EACpE,CACJ,+BAKM,SAAsBA,GACzB,OAAO,IAAIyU,EAAGhM,GAAGkB,eAAe3J,GACnC,OAvBKyU,GA8EAE,GAAAA,WAON,cAAkB,0CAAH3U,EAAG,yBAAHA,EAAG,gBACd,IAAK,IAAIvgB,EAAI,EAAGA,EAAIugB,EAAE9jB,SAAUuD,EAAG,GAAI,IAAMugB,EAAEvgB,GAAGvD,OAAQ,MAAM,IAAI0lB,EAAEX,EAAG,2EACzErkB,KAAKg4B,cAAgB,IAAIjQ,GAAG3E,EAC/B,uCAMM,SAAQA,GACX,OAAOpjB,KAAKg4B,cAAcjK,QAAQ3K,EAAE4U,cACvC,OAlBKD,OA+CAE,IAAAA,EAAAA,EAAAA,IAKN,WAAY7U,IAAG,eACXpjB,KAAKk4B,YAAc9U,CACtB,IAyBK+U,GAAAA,WAON,WAAY/U,EAAGvgB,GACX,IADc,gBACTu1B,SAAShV,IAAMA,GAAK,IAAMA,EAAI,GAAI,MAAM,IAAI4B,EAAEX,EAAG,0DAA4DjB,GAClH,IAAKgV,SAASv1B,IAAMA,GAAK,KAAOA,EAAI,IAAK,MAAM,IAAImiB,EAAEX,EAAG,6DAA+DxhB,GACvH7C,KAAKq4B,KAAOjV,EAAGpjB,KAAKs4B,MAAQz1B,CAC/B,sCAGM,WACH,OAAO7C,KAAKq4B,IACf,wBAGM,WACH,OAAOr4B,KAAKs4B,KACf,wBAMM,SAAQlV,GACX,OAAOpjB,KAAKq4B,OAASjV,EAAEiV,MAAQr4B,KAAKs4B,QAAUlV,EAAEkV,KACnD,uBACsE,WACnE,MAAO,CACHnK,SAAUnuB,KAAKq4B,KACfjK,UAAWpuB,KAAKs4B,MAEvB,2BAIM,SAAWlV,GACd,OAAOmI,GAAGvrB,KAAKq4B,KAAMjV,EAAEiV,OAAS9M,GAAGvrB,KAAKs4B,MAAOlV,EAAEkV,MACpD,OAzCKH,GA2DAI,GAAK,WAE6DC,GAAAA,WACxE,WAAYpV,EAAGvgB,EAAGihB,IAAG,eACjB9jB,KAAKyI,KAAO2a,EAAGpjB,KAAK+yB,UAAYlwB,EAAG7C,KAAK6yB,gBAAkB/O,CAC7D,0CACD,SAAWV,EAAGvgB,GACV,OAAO,OAAS7C,KAAK+yB,UAAY,IAAID,GAAG1P,EAAGpjB,KAAKyI,KAAMzI,KAAK+yB,UAAWlwB,EAAG7C,KAAK6yB,iBAAmB,IAAIF,GAAGvP,EAAGpjB,KAAKyI,KAAM5F,EAAG7C,KAAK6yB,gBACjI,OANuE2F,GAoB5E,SAASC,GAAGrV,GACR,OAAQA,GACN,KAAK,EAEG,KAAK,EAEL,KAAK,EACX,OAAO,EAET,KAAK,EACL,KAAK,EACH,OAAO,EAET,QACE,MAAMra,IAEb,KAEsE2vB,GAAAA,WAmBnE,WAAYtV,EAAGvgB,EAAGihB,EAAGkC,EAAGS,EAAGpnB,IAAG,eAC1BW,KAAK62B,SAAWzT,EAAGpjB,KAAK0mB,WAAa7jB,EAAG7C,KAAK8kB,EAAIhB,EAAG9jB,KAAKi2B,0BAA4BjQ,OAGrF,IAAWS,GAAKzmB,KAAK8nB,KAAM9nB,KAAK6yB,gBAAkBpM,GAAK,GAAIzmB,KAAK+yB,UAAY1zB,GAAK,EACpF,kCACD,WACI,OAAOW,KAAK62B,SAAStrB,IACxB,iBACD,WACI,OAAOvL,KAAK62B,SAAS9O,EACxB,mBACwE,SAAG3E,GACxE,OAAO,IAAIsV,EAAG9wB,OAAO+mB,OAAO/mB,OAAO+mB,OAAO,CAAC,EAAG3uB,KAAK62B,UAAWzT,GAAIpjB,KAAK0mB,WAAY1mB,KAAK8kB,EAAG9kB,KAAKi2B,0BAA2Bj2B,KAAK6yB,gBAAiB7yB,KAAK+yB,UACzJ,mBACD,SAAG3P,GACC,IAAIvgB,EACEihB,EAAI,QAAUjhB,EAAI7C,KAAKuL,YAAS,IAAW1I,OAAI,EAASA,EAAE6wB,MAAMtQ,GAAI4C,EAAIhmB,KAAKkoB,GAAG,CAClF3c,KAAMuY,EACN2E,IAAI,IAER,OAAOzC,EAAE2C,GAAGvF,GAAI4C,CACnB,mBACD,SAAG5C,GACC,IAAIvgB,EACEihB,EAAI,QAAUjhB,EAAI7C,KAAKuL,YAAS,IAAW1I,OAAI,EAASA,EAAE6wB,MAAMtQ,GAAI4C,EAAIhmB,KAAKkoB,GAAG,CAClF3c,KAAMuY,EACN2E,IAAI,IAER,OAAOzC,EAAE8B,KAAM9B,CAClB,mBACD,SAAG5C,GAGC,OAAOpjB,KAAKkoB,GAAG,CACX3c,UAAM,EACNkd,IAAI,GAEX,mBACD,SAAGrF,GACC,OAAOuV,GAAGvV,EAAGpjB,KAAK62B,SAAS+B,WAAY54B,KAAK62B,SAASgC,KAAM,EAAI74B,KAAKuL,KAAMvL,KAAK62B,SAAS9N,GAC3F,yBACiF,SAAS3F,GACvF,YAAO,IAAWpjB,KAAK+yB,UAAU9T,MAAM,SAAApc,GAAC,OAAIugB,EAAE4N,WAAWnuB,EAAjB,UAAyB,IAAW7C,KAAK6yB,gBAAgB5T,MAAM,SAAApc,GAAC,OAAIugB,EAAE4N,WAAWnuB,EAAEwuB,MAAnB,GAC3G,mBACD,WAGI,GAAIrxB,KAAKuL,KAAM,IAAK,IAAI6X,EAAI,EAAGA,EAAIpjB,KAAKuL,KAAKjM,OAAQ8jB,IAAKpjB,KAAK2oB,GAAG3oB,KAAKuL,KAAKsJ,IAAIuO,GACnF,mBACD,SAAGA,GACC,GAAI,IAAMA,EAAE9jB,OAAQ,MAAMU,KAAK84B,GAAG,qCAClC,GAAIL,GAAGz4B,KAAK+nB,KAAOwQ,GAAGtQ,KAAK7E,GAAI,MAAMpjB,KAAK84B,GAAG,iDAChD,OAxEkEJ,GA8E7DK,GAAAA,WACN,WAAY3V,EAAGvgB,EAAGihB,IAAG,eACjB9jB,KAAK0mB,WAAatD,EAAGpjB,KAAKi2B,0BAA4BpzB,EAAG7C,KAAK8kB,EAAIhB,GAAK8Q,GAAGxR,EAC7E,kCACgD,SAAGA,EAAGvgB,EAAGihB,GAAW,IAARkC,EAAQ,wDACjE,OAAO,IAAI0S,GAAG,CACV3Q,GAAI3E,EACJwV,WAAY/1B,EACZkmB,GAAIjF,EACJvY,KAAMwc,GAAGQ,YACTE,IAAI,EACJoQ,GAAI7S,GACLhmB,KAAK0mB,WAAY1mB,KAAK8kB,EAAG9kB,KAAKi2B,0BACpC,OAbK8C,GAgBV,SAASC,GAAG5V,GACR,IAAMvgB,EAAIugB,EAAEsS,kBAAmB5R,EAAI8Q,GAAGxR,EAAEoS,aACxC,OAAO,IAAIuD,GAAG3V,EAAEoS,cAAe3yB,EAAEozB,0BAA2BnS,EAC/D,CAE6C,SAASmV,GAAG7V,EAAGvgB,EAAGihB,EAAGkC,EAAGS,GAAW,IAARpnB,EAAQ,uDAAJ,CAAC,EACpEukB,EAAIR,EAAE8F,GAAG7pB,EAAEiL,OAASjL,EAAE65B,YAAc,EAAkC,EAA6Br2B,EAAGihB,EAAG2C,GAC/G0S,GAAG,sCAAuCvV,EAAGoC,GAC7C,IACIzmB,EAAGuJ,EADD7G,EAAIm3B,GAAGpT,EAAGpC,GAEhB,GAAIvkB,EAAEiL,MAAO/K,EAAI,IAAIwxB,GAAGnN,EAAEmP,WAAYjqB,EAAI8a,EAAEiP,qBAAsB,GAAIxzB,EAAE65B,YAAa,CACjF,IADiF,EAC3E9V,EAAI,GADuE,UAEjE/jB,EAAE65B,aAF+D,IAEjF,2BAA+B,KAApBlT,EAAoB,QACrBS,EAAI4S,GAAGx2B,EAAGmjB,EAAGlC,GACnB,IAAKF,EAAE0V,SAAS7S,GAAI,MAAM,IAAIzB,EAAEX,EAAN,iBAAmBoC,EAAnB,wEAC1B8S,GAAGnW,EAAGqD,IAAMrD,EAAE9hB,KAAKmlB,EACtB,CANgF,+BAOjFlnB,EAAI,IAAIwxB,GAAG3N,GAAIta,EAAI8a,EAAEiP,gBAAgB7Z,QAAQ,SAAAoK,GAAC,OAAI7jB,EAAEi6B,OAAOpW,EAAEiO,MAAf,GACjD,MAAM9xB,EAAI,KAAMuJ,EAAI8a,EAAEiP,gBACvB,OAAO,IAAI2F,GAAG,IAAIvH,GAAGhvB,GAAI1C,EAAGuJ,EAC/B,CA2JG,SAAS2wB,GAAGrW,EAAGvgB,GACf,GAAI62B,GAGJtW,GAAI+C,EAAAA,EAAAA,IAAE/C,IAAK,OAAO+V,GAAG,2BAA4Bt2B,EAAGugB,GAAIgW,GAAGhW,EAAGvgB,GAC9D,GAAIugB,aAAa6U,GAUjB,OAAO,SAAS7U,EAAGvgB,GAEf,IAAK41B,GAAG51B,EAAEklB,IAAK,MAAMllB,EAAEi2B,GAAF,UAAQ1V,EAAE8U,YAAV,gDACrB,IAAKr1B,EAAE0I,KAAM,MAAM1I,EAAEi2B,GAAF,UAAQ1V,EAAE8U,YAAV,gDACnB,IAAMpU,EAAIV,EAAEuW,kBAAkB92B,GAC9BihB,GAAKjhB,EAAEgwB,gBAAgBvxB,KAAKwiB,EAC/B,CANM,CAWNV,EAAGvgB,GAAI,KACR,QAAI,IAAWugB,GAAKvgB,EAAEozB,0BAItB,OAAO,KACP,GAGApzB,EAAE0I,MAAQ1I,EAAEkwB,UAAUzxB,KAAKuB,EAAE0I,MAAO6X,aAAa7iB,MAAO,CAOpD,GAAIsC,EAAEg0B,SAASpO,IAAM,IAAyC5lB,EAAEklB,GAAI,MAAMllB,EAAEi2B,GAAG,mCAC/E,OAAO,SAAS1V,EAAGvgB,GACf,IADkB,EACZihB,EAAI,GACNkC,EAAI,EAFU,UAGF5C,GAHE,IAGlB,2BAAmB,KACXA,EAAIqW,GADO,QACD52B,EAAEimB,GAAG9C,IACnB,MAAQ5C,IAGRA,EAAI,CACAwW,UAAW,eACX9V,EAAExiB,KAAK8hB,GAAI4C,GAClB,CAXiB,+BAYlB,MAAO,CACHwI,WAAY,CACRzU,OAAQ+J,GAGnB,CAjBM,CAiBLV,EAAGvgB,EACR,CACD,OAAO,SAASugB,EAAGvgB,GACf,GAAI,QAAUugB,GAAI+C,EAAAA,EAAAA,IAAE/C,IAAK,MAAO,CAC5BwW,UAAW,cAEf,GAAI,iBAAmBxW,EAAG,OAAOyO,GAAGhvB,EAAEiiB,EAAG1B,GACzC,GAAI,kBAAoBA,EAAG,MAAO,CAC9B0K,aAAc1K,GAElB,GAAI,iBAAmBA,EAAG,MAAO,CAC7BoK,YAAapK,GAEjB,GAAIA,aAAahF,KAAM,CACnB,IAAM0F,EAAIkJ,GAAG6M,SAASzW,GACtB,MAAO,CACHuK,eAAgBwF,GAAGtwB,EAAEiiB,EAAGhB,GAE/B,CACD,GAAIV,aAAa4J,GAAI,CAIjB,IAAMlJ,EAAI,IAAIkJ,GAAG5J,EAAEqJ,QAAS,IAAMhF,KAAK2D,MAAMhI,EAAE6J,YAAc,MAC7D,MAAO,CACHU,eAAgBwF,GAAGtwB,EAAEiiB,EAAGhB,GAE/B,CACD,GAAIV,aAAa+U,GAAI,MAAO,CACxBjK,cAAe,CACXC,SAAU/K,EAAE+K,SACZC,UAAWhL,EAAEgL,YAGrB,GAAIhL,aAAayU,GAAI,MAAO,CACxB7J,WAAYoF,GAAGvwB,EAAEiiB,EAAG1B,EAAE0U,cAE1B,GAAI1U,aAAaiU,GAAI,CACjB,IAAMvT,EAAIjhB,EAAE6jB,WAAYV,EAAI5C,EAAEmU,UAAU/B,YACxC,IAAKxP,EAAE+H,QAAQjK,GAAI,MAAMjhB,EAAEi2B,GAAF,6CAA2C9S,EAAEzf,UAA7C,YAA0Dyf,EAAEiB,SAA5D,uCAAmGnD,EAAEvd,UAArG,YAAkHud,EAAEmD,WAC7I,MAAO,CACHgH,eAAgBwF,GAAGrQ,EAAEmU,UAAU/B,aAAe3yB,EAAE6jB,WAAYtD,EAAEpY,KAAKO,MAE1E,CACD,MAAM1I,EAAEi2B,GAAF,mCAAiClQ,GAAGxF,IAC7C,CA3CM,CAkDNA,EAAGvgB,EACP,CAED,SAASu2B,GAAGhW,EAAGvgB,GACX,IAAMihB,EAAI,CAAC,EACX,OAAQ,SAASV,GACb,IAAK,IAAMvgB,KAAKugB,EAAG,GAAIxb,OAAOE,UAAU6jB,eAAexV,KAAKiN,EAAGvgB,GAAI,OAAO,EAC1E,OAAO,CACV,CAHO,CAoBqDugB,GAM7DvgB,EAAE0I,MAAQ1I,EAAE0I,KAAKjM,OAAS,GAAKuD,EAAEkwB,UAAUzxB,KAAKuB,EAAE0I,MANgBqgB,GAAGxI,GAAI,SAACA,EAAG4C,GACzE,IAAMS,EAAIgT,GAAGzT,EAAGnjB,EAAE2lB,GAAGpF,IACrB,MAAQqD,IAAM3C,EAAEV,GAAKqD,EACxB,IAGwD,CACrD6G,SAAU,CACN1jB,OAAQka,GAGnB,CAED,SAAS4V,GAAGtW,GACR,QAAS,iBAAmBA,GAAK,OAASA,GAAKA,aAAa7iB,OAAS6iB,aAAahF,MAAQgF,aAAa4J,IAAM5J,aAAa+U,IAAM/U,aAAayU,IAAMzU,aAAaiU,IAAMjU,aAAa6U,GACtL,CAED,SAASkB,GAAG/V,EAAGvgB,EAAGihB,GACd,IAAK4V,GAAG5V,KAAO,SAASV,GACpB,MAAO,iBAAmBA,GAAK,OAASA,IAAMxb,OAAOkyB,eAAe1W,KAAOxb,OAAOE,WAAa,OAASF,OAAOkyB,eAAe1W,GACjI,CAFc,CAEbU,GAAI,CACF,IAAMkC,EAAI4C,GAAG9E,GACb,KAAM,cAAgBkC,EAAInjB,EAAEi2B,GAAG1V,EAAI,oBAAsBvgB,EAAEi2B,GAAG1V,EAAI,IAAM4C,EAC3E,CACJ,CAIG,SAASqT,GAAGjW,EAAGvgB,EAAGihB,GAClB,IAGAjhB,GAAIsjB,EAAAA,EAAAA,IAAEtjB,cAAek1B,GAAI,OAAOl1B,EAAEm1B,cAClC,GAAI,iBAAmBn1B,EAAG,OAAOk3B,GAAG3W,EAAGvgB,GACvC,MAAM81B,GAAG,kDAAmDvV,GACxC,OACR,EAAQU,EACvB,CAIG,IAAMkW,GAAK,IAAI5N,OAAO,iBAUtB,SAAS2N,GAAG3W,EAAGvgB,EAAGihB,GAClB,GAAIjhB,EAAEo3B,OAAOD,KAAO,EAAG,MAAMrB,GAAG,uBAAD,OAAwB91B,EAAxB,wDAAiFugB,GAC5F,OACR,EAAQU,GACpB,IACI,OAAO,OAAIiU,IAAJ,OAAUl1B,EAAE2I,MAAM,OAAMwsB,aAKlC,CAJC,MAAOhS,GACL,MAAM2S,GAAG,uBAAD,OAAwB91B,EAAxB,6EAAsGugB,GAC1F,OACR,EAAQU,EACvB,CACJ,CAED,SAAS6U,GAAGvV,EAAGvgB,EAAGihB,EAAGkC,EAAGS,GACpB,IAAMpnB,EAAI2mB,IAAMA,EAAEmJ,UAAWvL,OAAI,IAAW6C,EACxCxkB,EAAI,YAAH,OAAeY,EAAf,+BACLihB,IAAM7hB,GAAK,0BAA2BA,GAAK,KAC3C,IAAI1C,EAAI,GACR,OAAQF,GAAKukB,KAAOrkB,GAAK,UAAWF,IAAME,GAAK,aAAJ,OAAiBymB,IAAMpC,IAAMrkB,GAAK,gBAAJ,OAAoBknB,IAC7FlnB,GAAK,KAAM,IAAIylB,EAAEX,EAAGpiB,EAAImhB,EAAI7jB,EAC/B,CAEwE,SAASg6B,GAAGnW,EAAGvgB,GACpF,OAAOugB,EAAEpM,MAAM,SAAAoM,GAAC,OAAIA,EAAE2K,QAAQlrB,EAAd,GACnB,CAwrBD,SAASq3B,GAAG9W,EAAGvgB,EAAGihB,GAKd,OAAWV,EAAIU,IAAMA,EAAExZ,OAASwZ,EAAEoV,aAAe9V,EAAE+W,YAAYt3B,EAAGihB,GAAKV,EAAE+W,YAAYt3B,GAAKA,CAE7F,CAuLG,SAASu3B,GAAGhX,EAAGvgB,GACf,IAAMihB,EAjpDV,SAAYV,EAAGvgB,GAAS,2BAAHihB,EAAG,iCAAHA,EAAG,kBACpB,GAAIV,GAAI+C,EAAAA,EAAAA,IAAE/C,GAGV,IAAMtY,UAAUxL,SAAWuD,EAAIyoB,GAAG+O,KAAM7R,GAAG,MAAO,OAAQ3lB,GAAIugB,aAAa+S,GAAI,CAC3E,IAAMnQ,EAAI2B,GAAGU,WAAH,MAAAV,GAAE,CAAY9kB,GAAZ,OAAkBihB,IAC9B,OAAO2E,GAAGzC,GAAI,IAAIqR,GAAGjU,EACJ,KAAM,IAAI8E,GAAGlC,GACjC,CAEG,KAAM5C,aAAaiU,IAAMjU,aAAaoU,IAAK,MAAM,IAAIxS,EAAEX,EAAG,iHAC1D,IAAM2B,EAAI5C,EAAEuU,MAAMjE,MAAM/L,GAAGU,WAAH,MAAAV,GAAE,CAAY9kB,GAAZ,OAAkBihB,KAC5C,OAAO2E,GAAGzC,GAAI,IAAIqR,GAAGjU,EAAEmU,UAAWnU,aAAaoU,GAAKpU,EAAEkU,UAAY,KAAM,IAAIpP,GAAGlC,GAEtF,CAmoDasU,CAAGlX,EAAI0F,GAAG1F,EAAGoU,KAAMxR,EAAIkU,GAAG9W,EAAEkU,UAAWz0B,GAAI4jB,EAAIwS,GAAGD,GAAG5V,EAAEmU,WAAY,SAAUzT,EAAE9Y,KAAMgb,EAAG,OAASlC,EAAEwT,UAAW,CAAC,GACzH,OAAOrsB,GAAGmqB,GAAGhS,EAAEmU,WAAY,CAAE9Q,EAAE8T,WAAWzW,EAAE9Y,KAAMunB,GAAGE,QAAO,MAAQrb,MAAM,kBAAM0M,CAAN,GAC7E,KA84BaV,MAAT,UAEAqD,EAAAA,GAFA,SACD/C,EAAIN,IACQU,EAAAA,EAAAA,IAAE,IAAIzkB,EAAAA,GAAE,kBAAmB,SAAC+jB,EAAD,GAA4C,IAAnBvgB,EAAmB,EAAvCie,mBAAgCgD,EAAO,EAAhBpY,QAC7Dsa,EAAI5C,EAAElJ,YAAY,OAAOrB,eAAgB4N,EAAI,IAAI0P,GAAG,IAAI1Q,EAAErC,EAAElJ,YAAY,kBAAmB,IAAIoM,EAAElD,EAAElJ,YAAY,uBAAwB,SAASkJ,EAAGvgB,GACrJ,IAAK+E,OAAOE,UAAU6jB,eAAe5V,MAAMqN,EAAE1X,QAAS,CAAE,cAAgB,MAAM,IAAIsZ,EAAEX,EAAG,uDACvF,OAAO,IAAI2C,EAAE5D,EAAE1X,QAAQnF,UAAW1D,EACrC,CAH4I,CAmB5ImjB,EAAGnjB,GAAImjB,GACR,OAAOlC,GAAK2C,EAAE0Q,aAAarT,GAAI2C,CAClC,GAAG,UAAU+T,sBAAqB,KAEnCxU,EAAAA,EAAAA,IAAE,iBAAkB,QAAS,KAAKA,EAAAA,EAAAA,IAAE,iBAAkB,QAAS","sources":["../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/styleFunctionSx.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/compose.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/style.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/borders.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/display.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/flexbox.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/grid.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/positions.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/palette.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/shadows.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/sizing.js","../node_modules/@material-ui/core/node_modules/@material-ui/system/esm/typography.js","../node_modules/@material-ui/styles/esm/styled/styled.js","../node_modules/@material-ui/core/esm/styles/styled.js","../node_modules/@material-ui/core/esm/Box/Box.js","../node_modules/@material-ui/core/esm/Button/Button.js","../node_modules/@firebase/app/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/app/node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nvar warnedOnce = false;\n\nfunction styleFunctionSx(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), omit(props.css, [styleFunction.filterProps]));\n    }\n\n    if (props.sx) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.sx))), omit(props.sx, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: chainPropTypes(PropTypes.object, function (props) {\n      if (!warnedOnce && props.css !== undefined) {\n        warnedOnce = true;\n        return new Error('Material-UI: The `css` prop is deprecated, please use the `sx` prop instead.');\n      }\n\n      return null;\n    }),\n    sx: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css', 'sx'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n/**\n *\n * @deprecated\n * The css style function is deprecated. Use the `styleFunctionSx` instead.\n */\n\n\nexport function css(styleFunction) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Material-UI: The `css` function is deprecated. Use the `styleFunctionSx` instead.');\n  }\n\n  return styleFunctionSx(styleFunction);\n}\nexport default styleFunctionSx;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal] || propValueFinal;\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return _defineProperty({}, cssProperty, value);\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? _defineProperty({}, prop, responsivePropType) : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","import style from './style';\nimport compose from './compose';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return \"\".concat(value, \"px solid\");\n}\n\nexport var border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport var borderRadius = style({\n  prop: 'borderRadius',\n  themeKey: 'shape'\n});\nvar borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nexport var displayPrint = style({\n  prop: 'displayPrint',\n  cssProperty: false,\n  transform: function transform(value) {\n    return {\n      '@media print': {\n        display: value\n      }\n    };\n  }\n});\nexport var displayRaw = style({\n  prop: 'display'\n});\nexport var overflow = style({\n  prop: 'overflow'\n});\nexport var textOverflow = style({\n  prop: 'textOverflow'\n});\nexport var visibility = style({\n  prop: 'visibility'\n});\nexport var whiteSpace = style({\n  prop: 'whiteSpace'\n});\nexport default compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);","import style from './style';\nimport compose from './compose';\nexport var flexBasis = style({\n  prop: 'flexBasis'\n});\nexport var flexDirection = style({\n  prop: 'flexDirection'\n});\nexport var flexWrap = style({\n  prop: 'flexWrap'\n});\nexport var justifyContent = style({\n  prop: 'justifyContent'\n});\nexport var alignItems = style({\n  prop: 'alignItems'\n});\nexport var alignContent = style({\n  prop: 'alignContent'\n});\nexport var order = style({\n  prop: 'order'\n});\nexport var flex = style({\n  prop: 'flex'\n});\nexport var flexGrow = style({\n  prop: 'flexGrow'\n});\nexport var flexShrink = style({\n  prop: 'flexShrink'\n});\nexport var alignSelf = style({\n  prop: 'alignSelf'\n});\nexport var justifyItems = style({\n  prop: 'justifyItems'\n});\nexport var justifySelf = style({\n  prop: 'justifySelf'\n});\nvar flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);\nexport default flexbox;","import style from './style';\nimport compose from './compose';\nexport var gridGap = style({\n  prop: 'gridGap'\n});\nexport var gridColumnGap = style({\n  prop: 'gridColumnGap'\n});\nexport var gridRowGap = style({\n  prop: 'gridRowGap'\n});\nexport var gridColumn = style({\n  prop: 'gridColumn'\n});\nexport var gridRow = style({\n  prop: 'gridRow'\n});\nexport var gridAutoFlow = style({\n  prop: 'gridAutoFlow'\n});\nexport var gridAutoColumns = style({\n  prop: 'gridAutoColumns'\n});\nexport var gridAutoRows = style({\n  prop: 'gridAutoRows'\n});\nexport var gridTemplateColumns = style({\n  prop: 'gridTemplateColumns'\n});\nexport var gridTemplateRows = style({\n  prop: 'gridTemplateRows'\n});\nexport var gridTemplateAreas = style({\n  prop: 'gridTemplateAreas'\n});\nexport var gridArea = style({\n  prop: 'gridArea'\n});\nvar grid = compose(gridGap, gridColumnGap, gridRowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\nexport default grid;","import style from './style';\nimport compose from './compose';\nexport var position = style({\n  prop: 'position'\n});\nexport var zIndex = style({\n  prop: 'zIndex',\n  themeKey: 'zIndex'\n});\nexport var top = style({\n  prop: 'top'\n});\nexport var right = style({\n  prop: 'right'\n});\nexport var bottom = style({\n  prop: 'bottom'\n});\nexport var left = style({\n  prop: 'left'\n});\nexport default compose(position, zIndex, top, right, bottom, left);","import style from './style';\nimport compose from './compose';\nexport var color = style({\n  prop: 'color',\n  themeKey: 'palette'\n});\nexport var bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette'\n});\nvar palette = compose(color, bgcolor);\nexport default palette;","import style from './style';\nvar boxShadow = style({\n  prop: 'boxShadow',\n  themeKey: 'shadows'\n});\nexport default boxShadow;","import style from './style';\nimport compose from './compose';\n\nfunction transform(value) {\n  return value <= 1 ? \"\".concat(value * 100, \"%\") : value;\n}\n\nexport var width = style({\n  prop: 'width',\n  transform: transform\n});\nexport var maxWidth = style({\n  prop: 'maxWidth',\n  transform: transform\n});\nexport var minWidth = style({\n  prop: 'minWidth',\n  transform: transform\n});\nexport var height = style({\n  prop: 'height',\n  transform: transform\n});\nexport var maxHeight = style({\n  prop: 'maxHeight',\n  transform: transform\n});\nexport var minHeight = style({\n  prop: 'minHeight',\n  transform: transform\n});\nexport var sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: transform\n});\nexport var sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: transform\n});\nexport var boxSizing = style({\n  prop: 'boxSizing'\n});\nvar sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\nexport default sizing;","import style from './style';\nimport compose from './compose';\nexport var fontFamily = style({\n  prop: 'fontFamily',\n  themeKey: 'typography'\n});\nexport var fontSize = style({\n  prop: 'fontSize',\n  themeKey: 'typography'\n});\nexport var fontStyle = style({\n  prop: 'fontStyle',\n  themeKey: 'typography'\n});\nexport var fontWeight = style({\n  prop: 'fontWeight',\n  themeKey: 'typography'\n});\nexport var letterSpacing = style({\n  prop: 'letterSpacing'\n});\nexport var lineHeight = style({\n  prop: 'lineHeight'\n});\nexport var textAlign = style({\n  prop: 'textAlign'\n});\nvar typography = compose(fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);\nexport default typography;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  var componentCreator = function componentCreator(style) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"name\"]);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var stylesOrCreator = typeof style === 'function' ? function (theme) {\n      return {\n        root: function root(props) {\n          return style(_extends({\n            theme: theme\n          }, props));\n        }\n      };\n    } : {\n      root: style\n    };\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var filterProps;\n    var propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    var StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      var children = props.children,\n          classNameProp = props.className,\n          clone = props.clone,\n          ComponentProp = props.component,\n          other = _objectWithoutProperties(props, [\"children\", \"className\", \"clone\", \"component\"]);\n\n      var classes = useStyles(props);\n      var className = clsx(classes.root, classNameProp);\n      var spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className: className\n        }, spread));\n      }\n\n      var FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/React.createElement(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread), children);\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, function (props) {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = \"Styled(\".concat(classNamePrefix, \")\");\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import { borders, compose, display, flexbox, grid, palette, positions, shadows, sizing, spacing, typography, styleFunctionSx } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = styleFunctionSx(compose(borders, display, flexbox, grid, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.15.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class gt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction _t(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return _t(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function At(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Tt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Rt(t.seconds),\n        nanos: Rt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Rt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Vt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function $t(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Dt(t) {\n    const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ft = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function St(t, e) {\n    if (t === e) return !0;\n    const n = xt(t);\n    if (n !== xt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Dt(t).isEqual(Dt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = At(t.timestampValue), r = At(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Rt(t.doubleValue), r = Rt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction qt(t, e) {\n    return void 0 !== (t.values || []).find((t => St(t, e)));\n}\n\nfunction Ot(t, e) {\n    if (t === e) return 0;\n    const n = xt(t), r = xt(e);\n    if (n !== r) return _t(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return _t(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Rt(t.integerValue || t.doubleValue), r = Rt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return kt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(Dt(t), Dt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return _t(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Pt(t), r = Pt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = _t(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = _t(Rt(t.latitude), Rt(e.latitude));\n            if (0 !== n) return n;\n            return _t(Rt(t.longitude), Rt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ot(n[t], r[t]);\n                if (e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ft && e === Ft) return 0;\n            if (t === Ft) return 1;\n            if (e === Ft) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = _t(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ot(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return _t(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction kt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n    const n = At(t), r = At(e), s = _t(n.seconds, r.seconds);\n    return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Mt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ut(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Qt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!St(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Wt {}\n\nclass Gt extends Wt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Kt extends Wt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Kt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Yt(t, e) {\n    return t instanceof Gt ? function(t, e) {\n        return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n    }(t, e) : t instanceof Kt ? function(t, e) {\n        if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Yt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass Ht extends Gt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Jt extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Zt(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Xt extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Zt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class te extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && qt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ee extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ne extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (qt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => qt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class se {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ie(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class oe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new oe(t);\n    }\n    static min() {\n        return new oe(new Vt(0, 0));\n    }\n    static max() {\n        return new oe(new Vt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || ae.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new ce(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new ce(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, \n        this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return ae.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return ae.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, ae.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, ae.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new ae(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n    constructor(t) {\n        this.comparator = t, this.data = new ue(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new le(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof he)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new he(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass le {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class fe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new fe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new he(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class de {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new de({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new de(Bt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class we {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new we(t, 0 /* DocumentType.INVALID */ , \n        /* version */ oe.min(), \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new we(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = oe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function be(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = _e(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new se(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of be(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new se(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ie(t, e) {\n    e.getFirstInequalityField(), _e(t);\n    const n = t.filters.concat([ e ]);\n    return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n    }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Re {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Pe extends Re {}\n\n/** Transforms an array value via a union operation. */ class Ve extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class $e extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ne extends Re {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class De {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Se extends xe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class qe extends xe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Oe extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class ke extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ce = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Le = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), Me = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n    return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n    return E(!!t), oe.fromTimestamp(function(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction We(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n    return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(cn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ye(t, e) {\n    return We(t.databaseId, e);\n}\n\nfunction He(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n    return {\n        name: Ge(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Xe(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ke(t, e.found.name), r = ze(e.found.updateTime), s = e.found.createTime ? ze(e.found.createTime) : oe.min(), i = new de({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return we.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ke(t, e.missing), r = ze(e.readTime);\n        return we.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n    let n;\n    if (e instanceof Se) n = {\n        update: Je(t, e.key, e.value)\n    }; else if (e instanceof Oe) n = {\n        delete: Ge(t, e.key)\n    }; else if (e instanceof qe) n = {\n        update: Je(t, e.key, e.data),\n        updateMask: un(e.fieldMask)\n    }; else {\n        if (!(e instanceof ke)) return b();\n        n = {\n            verify: Ge(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ve) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof $e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Qe(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sn(t.field),\n                direction: en(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction en(t) {\n    return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n    return Le[t];\n}\n\nfunction rn(t) {\n    return Me[t];\n}\n\nfunction sn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction on(t) {\n    return t instanceof Gt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sn(t.field),\n                op: nn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Kt ? function(t) {\n        const e = t.getFilters().map((t => on(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: rn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction un(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction cn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function an(t) {\n    return new Ue(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.G = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n    X() {\n        null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n    cancel() {\n        null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.C = r, this.Z = !1;\n    }\n    tt() {\n        if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.Z = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        writes: e.map((t => Ze(n.C, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        documents: e.map((t => Ge(n.C, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Xe(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function wn(t, e) {\n    const n = I(t), r = tn(n.C, Ee(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ke(t, e.name), s = ze(e.updateTime), i = e.createTime ? ze(e.createTime) : oe.min(), o = new de({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = we.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.C, t.document, void 0)));\n}\n\nasync function mn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = tn(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.C, Ee(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!pn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = an(t._databaseId), u = function(t, e, n, r) {\n            return new ln(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        pn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = pn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction vn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction bn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && En(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function En(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, _n))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function In(t) {\n    return t = ct(t, _n), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class Rn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return mn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Pn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Pn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Vn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Vn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class $n extends Vn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new ye(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Pn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new $n(this.firestore, t, this._path);\n    }\n}\n\nfunction Nn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new $n(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new $n(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Dn(t, e) {\n    if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Vn(t, \n    /* converter= */ null, function(t) {\n        return new ye(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction Fn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Pn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function xn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sn(t, e) {\n    return t = l(t), e = l(e), t instanceof Vn && e instanceof Vn && (t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class qn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new qn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new qn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class On {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function kn() {\n    return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Cn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ln {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Un {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class jn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Bn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Qn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    rt(t) {\n        return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.ot(t), r;\n    }\n    ut(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.et(), r;\n    }\n    ct(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.rt({\n            path: void 0,\n            it: !0\n        });\n    }\n    at(t) {\n        return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    et() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n    }\n    ot(t) {\n        if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n        if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class zn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Qn({\n            nt: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            it: !1,\n            ht: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Wn(t) {\n    const e = t._freezeSettings(), n = an(t._databaseId);\n    return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Gn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    or(\"Data must be an object, but it was:\", o, r);\n    const u = sr(r, o);\n    let c, a;\n    if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ur(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            lr(t, s) || t.push(s);\n        }\n        c = new fe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Kn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Yn(t, e, n) {\n    return new Qn({\n        nt: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        it: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n    _toFieldTransform(t) {\n        return new De(t.path, new Pe);\n    }\n    isEqual(t) {\n        return t instanceof Hn;\n    }\n}\n\nclass Jn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new Ve(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Xn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new $e(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Zn extends Cn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ne(t.C, Ae(t.C, this.wt));\n        return new De(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function tr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    or(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = de.empty();\n    Et(r, ((t, r) => {\n        const u = ar(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ut(u);\n        if (r instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = rr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new fe(i);\n    return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function er(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ ur(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = de.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ut(e);\n        if (n instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = rr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new fe(a);\n    return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function nr(t, e, n, r = !1) {\n    return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function rr(t, e) {\n    if (ir(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n    if (t instanceof Cn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = rr(s, e.ct(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ae(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Vt.fromDate(t);\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Vt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Ln) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof qn) return {\n            bytesValue: Be(e.C, t._byteString)\n        };\n        if (t instanceof Pn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.at(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction sr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Converts a Base64 encoded string to a binary string. */ (t) ? Et(t, ((t, r) => {\n        const s = rr(r, e.st(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ir(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n    if (!ir(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ur(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof On) return e._internalPath;\n    if (\"string\" == typeof e) return ar(t, e);\n    throw hr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ar(t, e, n) {\n    if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new On(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction hr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function lr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class fr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class dr extends fr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class wr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function mr(t, e) {\n    return t = l(t), e = l(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && (Sn(t.query, e.query) && vt(t.docs, e.docs, mr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function pr(t, e) {\n    return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class gr extends yr {}\n\nfunction _r(t, e, ...n) {\n    let r = [];\n    e instanceof yr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Er)).length, n = t.filter((t => t instanceof vr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class vr extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new vr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n    _parse(t) {\n        const e = Wn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Cr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(kr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = kr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), \n            u = nr(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Gt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function br(t, e, n) {\n    const r = e, s = pr(\"where\", t);\n    return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Er extends yr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Er(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Lr(n, t), n = Ie(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical OR\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for OR operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Ir(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"or\", t))), Er._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical AND\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for AND operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Tr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"and\", t))), Er._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Ar extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Ar(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new se(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = _e(t);\n                    null !== n && Mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Rr(t, e = \"asc\") {\n    const n = e, r = pr(\"orderBy\", t);\n    return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Pr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Pr(t, e, n);\n    }\n    _apply(t) {\n        return new Vn(t.firestore, t.converter, function(t, e, n) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Vr(t) {\n    return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function $r(t) {\n    return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Nr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Nr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Dr(...t) {\n    return Nr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fr(...t) {\n    return Nr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class xr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction qr(...t) {\n    return xr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Or(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof fr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Qt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Wn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = nr(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Qt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction kr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new rt(r));\n    }\n    if (n instanceof Pn) return Ct(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Cr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */ function Lr(t, e) {\n    if (e.isInequality()) {\n        const n = _e(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = ge(t);\n        null !== s && Mr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"in\" /* Operator.IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n    if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Br extends class {\n    convertValue(t, e = \"none\") {\n        switch (xt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Rt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Dt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(cn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new qn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Pn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Qr(t) {\n    const e = yn((t = ct(t, Pn)).firestore), n = new Br(t.firestore);\n    return dn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function zr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Vn))._query);\n    const e = yn(t.firestore), n = new Br(t.firestore);\n    return wn(e, t._query).then((e => {\n        const r = e.map((e => new dr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new wr(t, r);\n    }));\n}\n\nfunction Wr(t, e, n) {\n    const r = jr((t = ct(t, Pn)).converter, e, n), s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return fn(yn(t.firestore), [ s.toMutation(t._key, Fe.none()) ]);\n}\n\nfunction Gr(t, e, n, ...r) {\n    const s = Wn((t = ct(t, Pn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n    return fn(yn(t.firestore), [ i.toMutation(t._key, Fe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Kr(t) {\n    return fn(yn((t = ct(t, Pn)).firestore), [ new Oe(t._key, Fe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Yr(t, e) {\n    const n = Fn(t = ct(t, $n)), r = jr(t.converter, e), s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return fn(yn(t.firestore), [ s.toMutation(n._key, Fe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Hr(t) {\n    const e = ct(t.firestore, _n), n = yn(e), r = new Br(e);\n    return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Jr(t, e) {\n    return Sn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Xr() {\n    return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Zr() {\n    return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function ts(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function es(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ns(t) {\n    return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Wn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ss(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ss(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function is(t) {\n    const e = yn(t = ct(t, _n));\n    return new rs(t, (t => fn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class os {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await dn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new ke(n, this.precondition(n)));\n        })), await fn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = oe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(oe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.H((async () => {\n            const t = new os(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function as() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class hs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new hs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ls {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = as();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n        };\n        const t = as();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = as();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.H((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = hs.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Lt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ss(t, this._firestore), n = new Br(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ss(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ds(t, e, n) {\n    const r = yn(t = ct(t, _n)), s = Object.assign(Object.assign({}, us), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new cs(new ls, r, s, (n => e(new fs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.0\", \"\"), r(\"firestore-lite\", \"3.8.0\", \"__BUILD_TARGET__\");\n\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","Promise","resolve","reject","preExist","DB_CHECK_NAME","request","self","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","_a","message","getDefaultsFromGlobal","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","getDefaultEmulatorHostnameAndPort","productName","host","_b","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","Deferred","promise","callback","value","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","FirebaseError","code","customData","name","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","key","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","omit","fields","forEach","prop","indexOf","styleFunctionSx","styleFunction","newStyleFunction","props","css","_extends","merge","theme","filterProps","sx","propTypes","concat","_toConsumableArray","_len","arguments","styles","_key","fn","reduce","acc","style","getPath","obj","path","split","item","options","_options$cssProperty","cssProperty","themeKey","transform","propValue","themeMapping","handleBreakpoints","propValueFinal","_defineProperty","getBorder","compose","display","width","maxWidth","minWidth","height","maxHeight","minHeight","Component","componentCreator","undefined","stylesOptions","_objectWithoutProperties","classNamePrefix","stylesOrCreator","root","useStyles","makeStyles","displayName","StyledComponent","React","ref","children","classNameProp","className","clone","ComponentProp","component","other","classes","clsx","spread","FinalComponent","hoistNonReactStatics","styledWithoutDefault","defaultTheme","borders","flexbox","grid","positions","palette","shadows","sizing","spacing","typography","styled","Button","_props$color","color","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","_props$variant","variant","capitalize","ButtonBase","colorInherit","focusRipple","focusVisible","label","withStyles","button","boxSizing","padding","borderRadius","shape","text","primary","transition","transitions","duration","short","textDecoration","backgroundColor","alpha","action","hoverOpacity","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","get","target","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","set","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","args","apply","unwrap","storeNames","tx","call","sort","transformCachableValue","done","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","success","then","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","method","storeName","store","index","shift","all","oldTraps","PlatformLoggerServiceImpl","container","getProviders","map","provider","getComponent","isVersionServiceProvider","getImmediate","library","version","filter","logString","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","appName","_apps","_components","_addComponent","app","addComponent","debug","_registerComponent","componentName","values","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","val","isDeleted","SDK_VERSION","initializeApp","rawConfig","existingApp","ComponentContainer","newApp","getApp","registerVersion","libraryKeyOrName","libraryMismatch","versionMismatch","warning","warn","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","platformLogger","agent","getPlatformInfoString","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","toISOString","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","mode","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","isComponentEager","entries","instanceDeferred","delete","services","from","INTERNAL","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","Set","add","existingInstance","callbacks","invokeOnInitCallbacks","providers","setComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","_logLevel","_logHandler","_userLogHandler","TypeError","d","t","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","o","y","n","v","g","E","I","A","R","P","V","$","D","F","x","S","q","O","C","L","U","toString","B","user","headers","Q","enqueueRetryable","z","changeListener","W","auth","onInit","getToken","accessToken","getUid","G","r","h","getAuthHeaderValueForFirstParty","l","K","Y","H","appCheck","J","s","databaseId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","X","database","Z","segments","offset","len","comparator","limit","construct","Math","min","tt","toArray","canonicalString","et","nt","isValidIdentifier","test","rt","popLast","lastSegment","fromString","popFirst","emptyPath","st","it","isDocumentKey","ot","ut","constructor","ct","lt","dt","wt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","pt","body","status","statusText","ok","json","databaseInfo","T","yt","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","gt","_t","vt","every","bt","hasOwnProperty","Et","It","binaryString","next","Symbol","iterator","EMPTY_BYTE_STRING","Tt","RegExp","At","exec","substr","Number","seconds","getTime","nanos","Rt","Pt","fromBase64String","fromUint8Array","Vt","nanoseconds","toMillis","padStart","fromMillis","$t","mapValue","__type__","stringValue","Dt","__local_write_time__","timestampValue","xt","St","booleanValue","isEqual","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","jt","Bt","assign","ue","ae","EMPTY","insert","copy","BLACK","remove","isEmpty","left","right","minKey","maxKey","inorderTraversal","reverseTraversal","ce","isReverse","nodeStack","RED","fixUp","isRed","moveRedLeft","removeMin","rotateRight","moveRedRight","rotateLeft","colorFlip","check","pow","he","getIteratorFrom","hasNext","getNext","getIterator","le","iter","fe","isPrefixOf","de","getFieldsMap","isImmediateParentOf","applyChanges","field","ye","collectionGroup","explicitOrderBy","filters","limitType","startAt","endAt","Ae","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Re","Pe","Ve","elements","$e","Ne","Fe","updateTime","exists","xe","Se","precondition","fieldTransforms","qe","fieldMask","Oe","ke","Ue","je","Be","toBase64","toUint8Array","Qe","toTimestamp","We","child","Ge","He","Je","Ze","update","updateMask","un","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","isNone","currentDocument","fieldPaths","an","ln","authCredentials","appCheckCredentials","connection","invalidateToken","writes","pn","yn","_terminated","fetch","bind","_databaseId","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","gn","credentials","ignoreUndefinedProperties","cacheSizeBytes","_n","_app","_settings","_settingsFrozen","_terminateTask","client","sessionIndex","iamToken","authTokenFactory","_terminate","settings","terminate","bn","_initialized","En","_getSettings","_setSettings","mockUserToken","Pn","converter","firestore","$n","Vn","_query","_path","Nn","qn","_byteString","On","_internalPath","Cn","_methodName","Ln","isFinite","_lat","_long","Mn","Un","Bn","Qn","hr","methodName","ht","at","zn","Wn","Gn","mergeFields","or","sr","ur","contains","lr","covers","rr","ir","_toFieldTransform","nullValue","fromDate","getPrototypeOf","ar","cr","search","jr","toFirestore","Yr","N","Fn","toMutation","setMultipleInstances"],"sourceRoot":""}